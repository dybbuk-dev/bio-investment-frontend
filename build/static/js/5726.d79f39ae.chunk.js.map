{"version":3,"file":"static/js/5726.d79f39ae.chunk.js","mappings":"uXAqByBA,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAoB,SAAAE,GAAQ,MAAQ,CACzDC,QAAS,OACTC,QAAS,GACTC,MAAO,IACPC,OAAQ,IACR,UAAW,CACPC,MAN6CL,EAALM,MAM3BC,QAAQC,QAAQC,MAEjCC,OAAQ,UAEX,KAEoBZ,EAAAA,EAAAA,IAAO,MAAPA,EAAc,SAAAa,GAAQ,MAAQ,CAE/CV,QAAS,OACTW,eAAgB,SAChBC,WAAY,SACZC,UAAW,QACXC,cAAe,SACfb,QAPuCS,EAALL,MAOnBU,QAAQ,EAAG,GAC1BC,OAAQ,OAEX,IAIc,SAASC,KACPC,EAAAA,EAAAA,GAAc,KAAM,MAAjC,IACQC,GAAcC,EAAAA,EAAAA,KAAdD,UACR,OACIE,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAM,kBAAkBC,GAAI,CAAErB,OAAQ,GAAIsB,UAE5CC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACH,GAAI,CAAEtB,MAAO,OAAQC,OAAQ,QAAUyB,UAAU,MAAKH,SAAA,EACzDJ,EAAAA,EAAAA,KAACQ,EAAAA,EAAG,CAACL,GAAI,CAAErB,OAAQ,QAAS2B,SAAU,SAAU9B,QAAS,CAAE+B,GAAI,OAAQC,GAAI,OAAQC,GAAI,UAAYR,UAC/FJ,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CAACC,IAAI,0BAA0BX,GAAI,CAAErB,OAAQ,aAGvDuB,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACS,IAAK,EAAGnC,QAAS,EAAGoC,SAAU,EAAGb,GAAI,CAAEtB,MAAO,OAAQC,OAAQ,OAAQ2B,SAAU,QAASL,SAAA,EAC5FC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,UAAU,MAAMQ,IAAK,EAAGxB,WAAY,SAAU0B,GAAI,CAAEP,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIR,SAAA,EAC7EJ,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAAAd,UACPJ,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACC,KAAK,2CAEfpB,EAAAA,EAAAA,KAACqB,EAAAA,EAAU,CAACC,QAAQ,YAAWlB,SAAEN,EAAU,0BAE/CO,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACiB,GAAI,EAAKjC,eAAgB,SAAUR,OAAQ,OAAQS,WAAW,SAAQa,SAAA,EAEzEC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACS,IAAK,EAAGnC,QAAS,EAAGC,MAAO,CAAE6B,GAAI,IAAKC,GAAI,IAAKC,GAAI,KAAMR,SAAA,EAC5DJ,EAAAA,EAAAA,KAACqB,EAAAA,EAAU,CAACC,QAAQ,KAAIlB,SAAEN,EAAU,mCACpCE,EAAAA,EAAAA,KAACqB,EAAAA,EAAU,CAACC,QAAQ,QAAOlB,SAAEN,EAAU,2CAE3CO,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAC1B,QAAS,EAAGC,MAAO,CAAE6B,GAAI,IAAKC,GAAI,IAAKC,GAAI,KAAMR,SAAA,EAEpDJ,EAAAA,EAAAA,KAACwB,EAAAA,EAAY,CAACC,KAAM,KAEpBzB,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CAACf,WAAY,SAAUD,eAAgB,SAASc,UAClDC,EAAAA,EAAAA,MAACgB,EAAAA,EAAU,CAACC,QAAQ,QAAQI,MAAM,SAASvB,GAAI,CAAEc,GAAI,GAAIb,SAAA,CACpDN,EAAU,0BACXE,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CAACL,QAAQ,YAAYM,UAAWC,EAAAA,GAAYC,GAAIC,EAAAA,GAAAA,MAAgB3B,SAChEN,EAAU,mCAenD,C,6QC1EMkC,EAAc,0GAEL,SAASR,EAAY9C,GAAY,IAAT+C,EAAI/C,EAAJ+C,KAC7B3B,GAAcC,EAAAA,EAAAA,KAAdD,UAEFmC,IADeC,EAAAA,EAAAA,KAAbC,UACSC,EAAAA,EAAAA,OAGjBC,IAFqBC,EAAAA,EAAAA,MAEmBC,EAAAA,EAAAA,WAAS,IAAMC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAhDK,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAE9BI,EAAkBC,EAAAA,KAAaC,MAAM,CACzCC,SAAUF,EAAAA,KAAaG,SAAS,0BAChCC,IAAKJ,EAAAA,KAAaG,SAAS,yBAC3BE,MAAOL,EAAAA,KAAaK,MAAM,uCAAuCF,SAAS,qBAC1EG,SAAUN,EAAAA,KAAaG,SAAS,wBAChCI,MAAOP,EAAAA,KAAcQ,SAASL,SAAS,sDAEnCM,EAAkBT,EAAAA,KAAaC,MAAM,CACzCS,OAAQV,EAAAA,KAAaG,SAAS,mCAC9BQ,MAAOX,EAAAA,KAAaG,SAAS,kCAAkCS,QAAQzB,EAAa,6BACpF0B,KAAMb,EAAAA,KAAaG,SAAS,0BAC5BE,MAAOL,EAAAA,KAAaK,MAAM,uCAAuCF,SAAS,qBAC1EG,SAAUN,EAAAA,KAAaG,SAAS,wBAChCI,MAAOP,EAAAA,KAAcQ,SAASL,SAAS,sDAcnCW,GAAUC,EAAAA,EAAAA,IAAQ,CACtBC,UAAUC,EAAAA,EAAAA,GAAqB,IAATrC,GAAcmB,GAAmBU,GACvDS,cAdoB,CACpBhB,SAAU,GACVG,MAAO,GACPD,IAAK,GACLE,SAAU,GACVC,OAAO,EACPM,KAAK,GACLF,MAAM,GACND,OAAO,MAYPS,GAEEL,EAJFM,MAIEN,EAHFO,SAGEP,EAFFK,cAAYG,EAEVR,EADFS,UAAaC,EAAMF,EAANE,OAAQC,EAAYH,EAAZG,aAGjBC,EAAQ,eAAAlF,GAAAmF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAI,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC1B/C,EAAS,0BAUT,wBAAA6C,EAAAG,OAAA,GAAAN,EAAA,KACD,gBAZaO,GAAA,OAAA7F,EAAA8F,MAAA,KAAAC,UAAA,KAcd,OACEpF,EAAAA,EAAAA,KAACqF,EAAAA,GAAY,CAAC1B,QAASA,EAASY,SAAUP,EAAaO,GAAUnE,UAC/DC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACZ,QAAS,EAAGb,MAAO,OAAOuB,SAAA,GAC5BiE,EAAOiB,cAAetF,EAAAA,EAAAA,KAACuF,EAAAA,EAAK,CAACC,SAAS,QAAOpF,SAAEiE,EAAOiB,YAAYG,UAC3D,IAAThE,IACCzB,EAAAA,EAAAA,KAAC0F,EAAAA,GAAY,CAACvF,GAAI,CAAEa,SAAU,GAAK2E,KAAK,WAAWC,MAAO9F,EAAU,oBAErE2B,GAAQ,IACPzB,EAAAA,EAAAA,KAAC0F,EAAAA,GAAY,CAACvF,GAAI,CAAEa,SAAU,GAAK2E,KAAK,SAASC,MAAO9F,EAAU,sBAEpEE,EAAAA,EAAAA,KAAC0F,EAAAA,GAAY,CAACvF,GAAI,CAAEa,SAAU,GAAK2E,KAAK,QAAQC,MAAO9F,EAAU,iBACvD,IAAT2B,IACCzB,EAAAA,EAAAA,KAAC0F,EAAAA,GAAY,CAACvF,GAAI,CAAEa,SAAU,GAAK2E,KAAK,MAAMC,MAAO9F,EAAU,eAEhE2B,GAAQ,IAAKpB,EAAAA,EAAAA,MAAAwF,EAAAA,SAAA,CAAAzF,SAAA,EACZJ,EAAAA,EAAAA,KAAC0F,EAAAA,GAAY,CAACvF,GAAI,CAAEa,SAAU,GAAK2E,KAAK,QAAQC,MAAO9F,EAAU,kBACjEE,EAAAA,EAAAA,KAAC0F,EAAAA,GAAY,CAACvF,GAAI,CAAEa,SAAU,GAAK2E,KAAK,OAAOC,MAAO9F,EAAU,oBAIlEE,EAAAA,EAAAA,KAAC0F,EAAAA,GAAY,CAACvF,GAAI,CAAEa,SAAU,GAC5B2E,KAAK,WACLC,MAAO9F,EAAU,kBACjBgG,KAAMpD,EAAe,OAAS,WAC9BqD,WAAY,CACVC,cACEhG,EAAAA,EAAAA,KAACiG,EAAAA,EAAc,CAACC,SAAS,MAAK9F,UAC5BJ,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAACiF,KAAK,MAAMC,QAAS,kBAAMzD,GAAiBD,EAAa,EAACtC,UACnEJ,EAAAA,EAAAA,KAACqG,EAAAA,EAAO,CAACjF,KAAMsB,EAAe,eAAiB,6BAMzD1C,EAAAA,EAAAA,KAACsG,EAAAA,GAAW,CAACX,KAAK,QAAQC,MAAO9F,EAAU,2BAC3CE,EAAAA,EAAAA,KAACuG,EAAAA,EAAa,CAACC,WAAS,EAACC,KAAK,QAAQX,KAAK,SAASxE,QAAQ,YAAYoF,QAASpC,EAAalE,SAC3FN,EAAU,wBAKrB,C,qNC7Ge,SAAS6G,IACtB,IAAM1E,GAAWG,EAAAA,EAAAA,MAETwE,GAAoBC,EAAAA,EAAAA,MAApBD,gBAEFE,EAAmBjE,EAAAA,KAAaC,MAAM,CAC1CiE,MAAOlE,EAAAA,KAAaG,SAAS,oBAC7BgE,MAAOnE,EAAAA,KAAaG,SAAS,oBAC7BiE,MAAOpE,EAAAA,KAAaG,SAAS,oBAC7BkE,MAAOrE,EAAAA,KAAaG,SAAS,oBAC7BmE,MAAOtE,EAAAA,KAAaG,SAAS,oBAC7BoE,MAAOvE,EAAAA,KAAaG,SAAS,sBAY/BqE,GAMIzD,EAAAA,EAAAA,IAAQ,CACVnC,KAAM,SACNoC,UAAUC,EAAAA,EAAAA,GAAYgD,GACtB/C,cAlBoB,CACpBgD,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,MAIPE,EAAKD,EAALC,MACAC,EAAOF,EAAPE,QACAC,EAAQH,EAARG,SACAxD,EAAYqD,EAAZrD,aAAYyD,EAAAJ,EACZjD,UAAaE,EAAYmD,EAAZnD,aAAcoD,EAAOD,EAAPC,QAOvBC,EAASL,KAEfM,EAAAA,EAAAA,YAAU,WACRC,SAASC,iBAAiB,QAASC,EAErC,GAAG,IAEH,IAAMxD,EAAQ,eAAA7F,GAAA8F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAI,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAElB,IAAIgD,SAAQ,SAACC,GAAO,OAAKC,WAAWD,EAAS,IAAI,IAAE,KAAD,EACxDE,QAAQC,IAAI,QAASC,OAAOV,OAAO/C,GAAM0D,KAAK,KAE9C1B,EAAgB,mBAEhB3E,EAASsG,EAAAA,GAAAA,KAAqB,CAAEC,SAAS,IAAQ1D,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA2D,GAAA3D,EAAA,SAEjDqD,QAAQO,MAAK5D,EAAA2D,IAAQ,yBAAA3D,EAAAG,OAAA,GAAAN,EAAA,kBAExB,gBAXaO,GAAA,OAAAxG,EAAAyG,MAAA,KAAAC,UAAA,KAaR2C,EAAuB,SAACY,GAAW,IAADC,EAClChE,GAAY,OAAL+D,QAAK,IAALA,GAAoB,QAAfC,EAALD,EAAOE,qBAAa,IAAAD,OAAf,EAALA,EAAsBE,QAAQ,UAAW,GAEpDlE,EAAOA,EAAKmE,MAAM,IAElB,GAAGC,QAAQC,KAAKpB,SAASqB,iBAAiB,gBAAgB,SAACC,EAAMC,GAC/DD,EAAKE,MAAQzE,EAAKwE,GAClB,IAAME,EAAU,OAAAC,OAAUH,EAAQ,GAClC5B,EAAS8B,EAAY1E,EAAKwE,GAC5B,GACF,EAqBA,OACE/I,EAAAA,EAAAA,MAAA,QAAMkE,SAAUP,EAAaO,GAAUnE,SAAA,EACrCJ,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CAACC,UAAU,MAAMb,QAAS,EAAGJ,eAAe,SAAQc,SACvDiI,OAAOmB,KAAK7B,GAAQ8B,KAAI,SAAC9D,EAAMyD,GAAK,OACnCpJ,EAAAA,EAAAA,KAAC0J,EAAAA,GAAU,CAET/D,KAAI,OAAA4D,OAASH,EAAQ,GACrB7B,QAASA,EACToC,OAAQ,SAAAtK,GAAA,IAAGuK,EAAKvK,EAALuK,MAAK,OACd5J,EAAAA,EAAAA,KAAC6J,EAAAA,GAAaC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACRF,GAAK,IACTG,GAAG,aACHC,UAAqB,IAAVZ,EACXa,YAAY,IACZC,SAAU,SAACvB,GAAK,OAjCI,SAACA,EAAOwB,GACxC,IAAAC,EAAmCzB,EAAM0B,OAAjCC,EAASF,EAATE,UAAWjB,EAAKe,EAALf,MACbC,EADwBc,EAAJzE,KACF6C,QAAQ,OAAQ,IAElC+B,EAAgBC,OAAOlB,GAE7B,GAAID,EAAMoB,QAAUH,GACdC,EAAgB,EAAG,CACrB,IAAMG,EAAY7C,SAAS8C,cAAc,kBAADpB,OAAmBgB,EAAgB,EAAC,MAE1D,OAAdG,GACFA,EAAUE,OAEd,CAGFT,EAAaxB,EACf,CAgBmCkC,CAA0BlC,EAAOiB,EAAMM,SAAS,EACrEY,WAAY,CACVR,UAAW,EACXnK,GAAI,CACF4K,EAAG,EACHC,UAAW,SACXnM,MAAO,CAAE6B,GAAI,GAAIC,GAAI,IACrB7B,OAAQ,CAAE4B,GAAI,GAAIC,GAAI,QAG1B,GAnBCgF,EAqBL,OAIN3F,EAAAA,EAAAA,KAACuG,EAAAA,EAAa,CACZC,WAAS,EACTC,KAAK,QACLX,KAAK,SACLxE,QAAQ,YACRoF,QAASpC,EACT2G,UAAWvD,EACXvH,GAAI,CAAEc,GAAI,GAAIb,SACf,aAKP,C,+JC9IO,SAAS8K,EAA2BC,GACzC,OAAOC,EAAAA,EAAAA,GAAqB,iBAAkBD,EAChD,EAC2BE,EAAAA,EAAAA,GAAuB,iBAAkB,CAAC,SAArE,I,WCHMC,EAAY,CAAC,YAAa,aAkB1BC,GAAkB/M,EAAAA,EAAAA,IAAO,MAAO,CACpCmH,KAAM,iBACNwF,KAAM,OACNK,kBAAmB,SAACC,EAAOC,GAAM,OAAKA,EAAOC,IAAI,GAH3BnN,EAIrB,WACD,MAAO,CACLI,QAAS,GACT,eAAgB,CACdgN,cAAe,IAGrB,IAiDA,EAhDiCC,EAAAA,YAAiB,SAAqBC,EAASC,GAC9E,IAAMN,GAAQO,EAAAA,EAAAA,GAAc,CAC1BP,MAAOK,EACPnG,KAAM,mBAGJsG,EAEER,EAFFQ,UAASC,EAEPT,EADF7J,UAAAA,OAAS,IAAAsK,EAAG,MAAKA,EAEnBC,GAAQC,EAAAA,EAAAA,GAA8BX,EAAOH,GACzCe,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGb,EAAO,CACrC7J,UAAAA,IAEI2K,EAlCkB,SAAAF,GACxB,IACEE,EACEF,EADFE,QAKF,OAAOC,EAAAA,EAAAA,GAHO,CACZb,KAAM,CAAC,SAEoBT,EAA4BqB,EAC3D,CA0BkBE,CAAkBJ,GAClC,OAAoBrM,EAAAA,EAAAA,KAAKuL,GAAiBe,EAAAA,EAAAA,GAAS,CACjDI,GAAI9K,EACJqK,WAAWU,EAAAA,EAAAA,GAAKJ,EAAQZ,KAAMM,GAC9BI,WAAYA,EACZN,IAAKA,GACJI,GACL,G","sources":["pages/auth/BusinessMode.js","sections/auth/register/RegisterForm.js","sections/auth/verify-code/VerifyCodeForm.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\r\nimport { Icon } from '@iconify/react';\r\n// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Button, Link, Container, Typography, Stack, Card, CardContent, IconButton } from '@mui/material';\r\n// layouts\r\nimport LogoOnlyLayout from '../../layouts/LogoOnlyLayout';\r\n// routes\r\nimport { PATH_AUTH } from '../../routes/paths';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport Iconify from '../../components/Iconify';\r\n// sections\r\nimport { VerifyCodeForm } from '../../sections/auth/verify-code';\r\nimport useResponsive from '../../hooks/useResponsive';\r\nimport Image from '../../components/Image';\r\nimport useLocales from '../../hooks/useLocales';\r\nimport { RegisterForm } from '../../sections/auth/register';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CardContentStyle = styled(CardContent)(({ theme }) => ({\r\n    display: 'flex',\r\n    padding: 32,\r\n    width: 230,\r\n    height: 200,\r\n    '&:hover': {\r\n        color: theme.palette.primary.main\r\n    },\r\n    cursor: 'pointer'\r\n\r\n}));\r\n\r\nconst ContentStyle = styled('div')(({ theme }) => ({\r\n\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    minHeight: '100vh',\r\n    flexDirection: 'column',\r\n    padding: theme.spacing(0, 6),\r\n    margin: 'auto',\r\n\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BusinessMode() {\r\n    const mdUp = useResponsive('up', 'md');\r\n    const { translate } = useLocales();\r\n    return (\r\n        <Page title=\"Physical person\" sx={{ height: 1 }}>\r\n\r\n            <Stack sx={{ width: '100%', height: '100%' }} direction=\"row\">\r\n                <Box sx={{ height: '100vh', overflow: 'hidden', display: { xs: 'none', sm: 'none', md: 'block' } }}>\r\n                    <Image src=\"/images/register-bg.png\" sx={{ height: '100%' }} />\r\n                </Box>\r\n\r\n                <Stack gap={4} padding={4} flexGrow={1} sx={{ width: '100%', height: '100%', overflow: 'auto' }}>\r\n                    <Stack direction=\"row\" gap={1} alignItems={'center'} mt={{ xs: 8, sm: 8, md: 2 }}>\r\n                        <IconButton>\r\n                            <Icon icon=\"material-symbols:arrow-back-rounded\" />\r\n                        </IconButton>\r\n                        <Typography variant='subtitle2'>{translate('words.back-route')}</Typography>\r\n                    </Stack>\r\n                    <Stack mb={2}   justifyContent={'center'} height={'100%'} alignItems=\"center\">\r\n\r\n                        <Stack gap={2} padding={2} width={{ xs: 350, sm: 400, md: 500 }}>\r\n                            <Typography variant='h5'>{translate('register.business-mode-title')}</Typography>\r\n                            <Typography variant='body2'>{translate('register.natural-mode-description')}</Typography>\r\n                        </Stack>\r\n                        <Stack padding={2} width={{ xs: 350, sm: 400, md: 500 }} >\r\n\r\n                            <RegisterForm mode={2} />\r\n\r\n                            <Stack alignItems={'center'} justifyContent={'center'}>\r\n                                <Typography variant=\"body2\" align=\"center\" sx={{ mt: 3 }}>\r\n                                    {translate('register.already-user')}\r\n                                    <Link variant=\"subtitle2\" component={RouterLink} to={PATH_AUTH.login}>\r\n                                        {translate('words.login')}\r\n                                    </Link>\r\n                                </Typography>\r\n                            </Stack>\r\n\r\n                        </Stack>\r\n                    </Stack>\r\n\r\n                </Stack>\r\n\r\n\r\n            </Stack>\r\n\r\n        </Page>\r\n    );\r\n}\r\n","import * as Yup from 'yup';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// form\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { Stack, IconButton, InputAdornment, Alert } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\n// components\nimport Iconify from '../../../components/Iconify';\nimport { FormProvider, RHFCheckbox, RHFTextField } from '../../../components/hook-form';\nimport useLocales from '../../../hooks/useLocales';\n\n\n// ----------------------------------------------------------------------\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n\nexport default function RegisterForm({ mode }) {\n  const { translate } = useLocales();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const isMountedRef = useIsMountedRef();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const Register1Schema = Yup.object().shape({\n    fullname: Yup.string().required('Name field is required'),\n    cpf: Yup.string().required('CPF field is required'),\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().required('Password is required'),\n    agree: Yup.boolean().isTrue().required('You should agree terms & condition, please check')\n  });\n  const Register2Schema = Yup.object().shape({\n    reason: Yup.string().required('Reason Social field is required'),\n    phone: Yup.string().required('Phone number field is required').matches(phoneRegExp, 'Phone number is not valid'),\n    cnpj: Yup.string().required('CNPJ field is required'),\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().required('Password is required'),\n    agree: Yup.boolean().isTrue().required('You should agree terms & condition, please check')\n  });\n  const defaultValues = {\n    fullname: '',\n    email: '',\n    cpf: '',\n    password: '',\n    agree: false,\n    cnpj:'',\n    phone:'',\n    reason:''\n\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(mode === 1 && Register1Schema || Register2Schema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    setError,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    navigate('/auth/agree-investment');\n    \n    // try {\n    //   await register(data);\n    // } catch (error) {\n    //   console.error(error);\n    //   reset();\n    //   if (isMountedRef.current) {\n    //     setError('afterSubmit', error);\n    //   }\n    // }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3} width={'100%'}>\n        {!!errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>}\n        {mode === 1 &&\n          <RHFTextField sx={{ flexGrow: 1 }} name=\"fullname\" label={translate('words.fullname')} />\n        }\n        {mode >= 2 &&\n          <RHFTextField sx={{ flexGrow: 1 }} name=\"reason\" label={translate('register.social')} />\n        }\n        <RHFTextField sx={{ flexGrow: 1 }} name=\"email\" label={translate('words.email')} />\n        {mode === 1 &&\n          <RHFTextField sx={{ flexGrow: 1 }} name=\"cpf\" label={translate('words.cpf')} />\n        }\n        {mode >= 2 && <>\n          <RHFTextField sx={{ flexGrow: 1 }} name=\"phone\" label={translate('words.phone')} />\n          <RHFTextField sx={{ flexGrow: 1 }} name=\"cnpj\" label={translate('words.cnpj')} />\n        </>\n        }\n\n        <RHFTextField sx={{ flexGrow: 1 }}\n          name=\"password\"\n          label={translate('words.password')}\n          type={showPassword ? 'text' : 'password'}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton edge=\"end\" onClick={() => setShowPassword(!showPassword)}>\n                  <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <RHFCheckbox name=\"agree\" label={translate('register.agree-terms')} />\n        <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n          {translate('words.continue')}\n        </LoadingButton>\n      </Stack>\n    </FormProvider>\n  );\n}\n","import * as Yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\n// form\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { OutlinedInput, Stack } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n\n// ----------------------------------------------------------------------\n\nexport default function VerifyCodeForm() {\n  const navigate = useNavigate();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const VerifyCodeSchema = Yup.object().shape({\n    code1: Yup.string().required('Code is required'),\n    code2: Yup.string().required('Code is required'),\n    code3: Yup.string().required('Code is required'),\n    code4: Yup.string().required('Code is required'),\n    code5: Yup.string().required('Code is required'),\n    code6: Yup.string().required('Code is required'),\n  });\n\n  const defaultValues = {\n    code1: '',\n    code2: '',\n    code3: '',\n    code4: '',\n    code5: '',\n    code6: '',\n  };\n\n  const {\n    watch,\n    control,\n    setValue,\n    handleSubmit,\n    formState: { isSubmitting, isValid },\n  } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(VerifyCodeSchema),\n    defaultValues,\n  });\n\n  const values = watch();\n\n  useEffect(() => {\n    document.addEventListener('paste', handlePasteClipboard);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onSubmit = async (data) => {\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      console.log('code:', Object.values(data).join(''));\n\n      enqueueSnackbar('Verify success!');\n\n      navigate(PATH_DASHBOARD.root, { replace: true });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handlePasteClipboard = (event) => {\n    let data = event?.clipboardData?.getData('Text') || '';\n\n    data = data.split('');\n\n    [].forEach.call(document.querySelectorAll('#field-code'), (node, index) => {\n      node.value = data[index];\n      const fieldIndex = `code${index + 1}`;\n      setValue(fieldIndex, data[index]);\n    });\n  };\n\n  const handleChangeWithNextField = (event, handleChange) => {\n    const { maxLength, value, name } = event.target;\n    const fieldIndex = name.replace('code', '');\n\n    const fieldIntIndex = Number(fieldIndex);\n\n    if (value.length >= maxLength) {\n      if (fieldIntIndex < 6) {\n        const nextfield = document.querySelector(`input[name=code${fieldIntIndex + 1}]`);\n\n        if (nextfield !== null) {\n          nextfield.focus();\n        }\n      }\n    }\n\n    handleChange(event);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Stack direction=\"row\" spacing={2} justifyContent=\"center\">\n        {Object.keys(values).map((name, index) => (\n          <Controller\n            key={name}\n            name={`code${index + 1}`}\n            control={control}\n            render={({ field }) => (\n              <OutlinedInput\n                {...field}\n                id=\"field-code\"\n                autoFocus={index === 0}\n                placeholder=\"-\"\n                onChange={(event) => handleChangeWithNextField(event, field.onChange)}\n                inputProps={{\n                  maxLength: 1,\n                  sx: {\n                    p: 0,\n                    textAlign: 'center',\n                    width: { xs: 36, sm: 56 },\n                    height: { xs: 36, sm: 56 },\n                  },\n                }}\n              />\n            )}\n          />\n        ))}\n      </Stack>\n\n      <LoadingButton\n        fullWidth\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n        loading={isSubmitting}\n        disabled={!isValid}\n        sx={{ mt: 3 }}\n      >\n        Verify\n      </LoadingButton>\n    </form>\n  );\n}\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["styled","CardContent","_ref","display","padding","width","height","color","theme","palette","primary","main","cursor","_ref2","justifyContent","alignItems","minHeight","flexDirection","spacing","margin","BusinessMode","useResponsive","translate","useLocales","_jsx","Page","title","sx","children","_jsxs","Stack","direction","Box","overflow","xs","sm","md","Image","src","gap","flexGrow","mt","IconButton","Icon","icon","Typography","variant","mb","RegisterForm","mode","align","Link","component","RouterLink","to","PATH_AUTH","phoneRegExp","navigate","useAuth","register","useNavigate","_useState","useIsMountedRef","useState","_useState2","_slicedToArray","showPassword","setShowPassword","Register1Schema","Yup","shape","fullname","required","cpf","email","password","agree","isTrue","Register2Schema","reason","phone","matches","cnpj","methods","useForm","resolver","yupResolver","defaultValues","handleSubmit","reset","setError","_methods$formState","formState","errors","isSubmitting","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","stop","_x","apply","arguments","FormProvider","afterSubmit","Alert","severity","message","RHFTextField","name","label","_Fragment","type","InputProps","endAdornment","InputAdornment","position","edge","onClick","Iconify","RHFCheckbox","LoadingButton","fullWidth","size","loading","VerifyCodeForm","enqueueSnackbar","useSnackbar","VerifyCodeSchema","code1","code2","code3","code4","code5","code6","_useForm","watch","control","setValue","_useForm$formState","isValid","values","useEffect","document","addEventListener","handlePasteClipboard","Promise","resolve","setTimeout","console","log","Object","join","PATH_DASHBOARD","replace","t0","error","event","_event$clipboardData","clipboardData","getData","split","forEach","call","querySelectorAll","node","index","value","fieldIndex","concat","keys","map","Controller","render","field","OutlinedInput","_objectSpread","id","autoFocus","placeholder","onChange","handleChange","_event$target","target","maxLength","fieldIntIndex","Number","length","nextfield","querySelector","focus","handleChangeWithNextField","inputProps","p","textAlign","disabled","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","overridesResolver","props","styles","root","paddingBottom","React","inProps","ref","useThemeProps","className","_props$component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}
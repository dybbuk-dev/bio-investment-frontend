{"version":3,"file":"static/js/448.859e0a7c.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/popmotion/dist/es/utils/is-point.mjs","../node_modules/popmotion/dist/es/utils/is-point-3d.mjs","../node_modules/popmotion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/utils/use-id.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/render/utils/lifecycles.mjs","../node_modules/framer-motion/dist/es/render/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/render/html/visual-element.mjs","../node_modules/framer-motion/dist/es/render/svg/visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/features-max.mjs"],"sourcesContent":["function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    var hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return function (event) {\n        var isMouseEvent = event instanceof MouseEvent;\n        var isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nvar defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    var primaryTouch = e.touches[0] || e.changedTouches[0];\n    var point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nvar wrapHandler = function (handler, shouldFilterPrimaryPointer) {\n    if (shouldFilterPrimaryPointer === void 0) { shouldFilterPrimaryPointer = false; }\n    var listener = function (event) {\n        return handler(event, extractEventInfo(event));\n    };\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options) {\n    if (options === void 0) { options = { passive: true }; }\n    target.addEventListener(eventName, handler, options);\n    return function () { return target.removeEventListener(eventName, handler); };\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(function () {\n        var element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nvar supportsPointerEvents = function () {\n    return isBrowser && window.onpointerdown === null;\n};\nvar supportsTouchEvents = function () {\n    return isBrowser && window.ontouchstart === null;\n};\nvar supportsMouseEvents = function () {\n    return isBrowser && window.onmousedown === null;\n};\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nvar mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nvar touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","const isPoint = (point) => point.hasOwnProperty('x') && point.hasOwnProperty('y');\n\nexport { isPoint };\n","import { isPoint } from './is-point.mjs';\n\nconst isPoint3D = (point) => isPoint(point) && point.hasOwnProperty('z');\n\nexport { isPoint3D };\n","import { isPoint } from './is-point.mjs';\nimport { isPoint3D } from './is-point-3d.mjs';\nimport { isNum } from './inc.mjs';\n\nconst distance1D = (a, b) => Math.abs(a - b);\nfunction distance(a, b) {\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    }\n    else if (isPoint(a) && isPoint(b)) {\n        const xDelta = distance1D(a.x, b.x);\n        const yDelta = distance1D(a.y, b.y);\n        const zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n    }\n}\n\nexport { distance };\n","import { __assign } from 'tslib';\nimport { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { distance, pipe } from 'popmotion';\n\n/**\n * @internal\n */\nvar PanSession = /** @class */ (function () {\n    function PanSession(event, handlers, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, transformPagePoint = _b.transformPagePoint;\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = function () {\n            if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))\n                return;\n            var info = getPanInfo(_this.lastMoveEventInfo, _this.history);\n            var isPanStarted = _this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            var isDistancePastThreshold = distance(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            var point = info.point;\n            var timestamp = getFrameData().timestamp;\n            _this.history.push(__assign(__assign({}, point), { timestamp: timestamp }));\n            var _a = _this.handlers, onStart = _a.onStart, onMove = _a.onMove;\n            if (!isPanStarted) {\n                onStart && onStart(_this.lastMoveEvent, info);\n                _this.startEvent = _this.lastMoveEvent;\n            }\n            onMove && onMove(_this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = function (event, info) {\n            _this.lastMoveEvent = event;\n            _this.lastMoveEventInfo = transformPoint(info, _this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                _this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(_this.updatePoint, true);\n        };\n        this.handlePointerUp = function (event, info) {\n            _this.end();\n            var _a = _this.handlers, onEnd = _a.onEnd, onSessionEnd = _a.onSessionEnd;\n            var panInfo = getPanInfo(transformPoint(info, _this.transformPagePoint), _this.history);\n            if (_this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        var info = extractEventInfo(event);\n        var initialInfo = transformPoint(info, this.transformPagePoint);\n        var point = initialInfo.point;\n        var timestamp = getFrameData().timestamp;\n        this.history = [__assign(__assign({}, point), { timestamp: timestamp })];\n        var onSessionStart = handlers.onSessionStart;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    PanSession.prototype.updateHandlers = function (handlers) {\n        this.handlers = handlers;\n    };\n    PanSession.prototype.end = function () {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    };\n    return PanSession;\n}());\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo(_a, history) {\n    var point = _a.point;\n    return {\n        point: point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    var i = history.length - 1;\n    var timestampedPoint = null;\n    var lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    var currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    var lock = null;\n    return function () {\n        var openLock = function () {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nvar globalHorizontalLock = createLock(\"dragHorizontal\");\nvar globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    var lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        var openHorizontal_1 = globalHorizontalLock();\n        var openVertical_1 = globalVerticalLock();\n        if (openHorizontal_1 && openVertical_1) {\n            lock = function () {\n                openHorizontal_1();\n                openVertical_1();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal_1)\n                openHorizontal_1();\n            if (openVertical_1)\n                openVertical_1();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    var openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { mix, distance } from 'popmotion';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    if (target === void 0) { target = 0; }\n    if (maxDistance === void 0) { maxDistance = 0.01; }\n    return distance(value, target) < maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin) {\n    if (origin === void 0) { origin = 0.5; }\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { __read } from 'tslib';\nimport { clamp, mix, progress } from 'popmotion';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, _a, elastic) {\n    var min = _a.min, max = _a.max;\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, _a) {\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    var _a;\n    var min = constraintsAxis.min - layoutAxis.min;\n    var max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        _a = __read([max, min], 2), min = _a[0], max = _a[1];\n    }\n    return { min: min, max: max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    var origin = 0.5;\n    var sourceLength = calcLength(source);\n    var targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    var relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nvar defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic) {\n    if (dragElastic === void 0) { dragElastic = defaultElastic; }\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","var createAxisDelta = function () { return ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n}); };\nvar createDelta = function () { return ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n}); };\nvar createAxis = function () { return ({ min: 0, max: 0 }); };\nvar createBox = function () { return ({\n    x: createAxis(),\n    y: createAxis(),\n}); };\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox(_a) {\n    var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox(_a) {\n    var x = _a.x, y = _a.y;\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    var topLeft = transformPoint({ x: point.left, y: point.top });\n    var bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale(_a) {\n    var scale = _a.scale, scaleX = _a.scaleX, scaleY = _a.scaleY;\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        hasTranslate(values.x) ||\n        hasTranslate(values.y) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction hasTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { hasScale, hasTransform };\n","import { __read } from 'tslib';\nimport { mix } from 'popmotion';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    var distanceFromOrigin = point - originPoint;\n    var scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate, scale, originPoint, boxScale) {\n    if (translate === void 0) { translate = 0; }\n    if (scale === void 0) { scale = 1; }\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, _a) {\n    var x = _a.x, y = _a.y;\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition) {\n    var _a, _b;\n    if (isSharedTransition === void 0) { isSharedTransition = false; }\n    var treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    var node;\n    var delta;\n    for (var i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, { x: -node.scroll.x, y: -node.scroll.y });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, _a) {\n    var _b = __read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];\n    var axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    var originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nvar xKeys = [\"x\", \"scaleX\", \"originX\"];\nvar yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    var viewportBox = measureViewportBox(element, transformPagePoint);\n    var scroll = rootProjectionNode.scroll;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.x);\n        translateAxis(viewportBox.y, scroll.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { __assign } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { mix } from 'popmotion';\nimport { percent } from 'style-value-types';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\n\nvar elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nvar VisualElementDragControls = /** @class */ (function () {\n    function VisualElementDragControls(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    VisualElementDragControls.prototype.start = function (originEvent, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, _c = _b.snapToCursor, snapToCursor = _c === void 0 ? false : _c;\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        var onSessionStart = function (event) {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            _this.stopAnimation();\n            if (snapToCursor) {\n                _this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        var onStart = function (event, info) {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            var _b = _this.getProps(), drag = _b.drag, dragPropagation = _b.dragPropagation, onDragStart = _b.onDragStart;\n            if (drag && !dragPropagation) {\n                if (_this.openGlobalLock)\n                    _this.openGlobalLock();\n                _this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!_this.openGlobalLock)\n                    return;\n            }\n            _this.isDragging = true;\n            _this.currentDirection = null;\n            _this.resolveConstraints();\n            if (_this.visualElement.projection) {\n                _this.visualElement.projection.isAnimationBlocked = true;\n                _this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis(function (axis) {\n                var _a, _b;\n                var current = _this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    var measuredAxis = (_b = (_a = _this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.actual[axis];\n                    if (measuredAxis) {\n                        var length_1 = calcLength(measuredAxis);\n                        current = length_1 * (parseFloat(current) / 100);\n                    }\n                }\n                _this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = _this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        var onMove = function (event, info) {\n            // latestPointerEvent = event\n            var _a = _this.getProps(), dragPropagation = _a.dragPropagation, dragDirectionLock = _a.dragDirectionLock, onDirectionLock = _a.onDirectionLock, onDrag = _a.onDrag;\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !_this.openGlobalLock)\n                return;\n            var offset = info.offset;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && _this.currentDirection === null) {\n                _this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (_this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(_this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            _this.updateAxis(\"x\", info.point, offset);\n            _this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            _this.visualElement.syncRender();\n            /**\n             * This must fire after the syncRender call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        var onSessionEnd = function (event, info) {\n            return _this.stop(event, info);\n        };\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart: onSessionStart,\n            onStart: onStart,\n            onMove: onMove,\n            onSessionEnd: onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    };\n    VisualElementDragControls.prototype.stop = function (event, info) {\n        var isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        var velocity = info.velocity;\n        this.startAnimation(velocity);\n        var onDragEnd = this.getProps().onDragEnd;\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    };\n    VisualElementDragControls.prototype.cancel = function () {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        var dragPropagation = this.getProps().dragPropagation;\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    };\n    VisualElementDragControls.prototype.updateAxis = function (axis, _point, offset) {\n        var drag = this.getProps().drag;\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        var axisValue = this.getAxisMotionValue(axis);\n        var next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    };\n    VisualElementDragControls.prototype.resolveConstraints = function () {\n        var _this = this;\n        var _a = this.getProps(), dragConstraints = _a.dragConstraints, dragElastic = _a.dragElastic;\n        var layout = (this.visualElement.projection || {}).layout;\n        var prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.actual, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis(function (axis) {\n                if (_this.getAxisMotionValue(axis)) {\n                    _this.constraints[axis] = rebaseAxisConstraints(layout.actual[axis], _this.constraints[axis]);\n                }\n            });\n        }\n    };\n    VisualElementDragControls.prototype.resolveRefConstraints = function () {\n        var _a = this.getProps(), constraints = _a.dragConstraints, onMeasureDragConstraints = _a.onMeasureDragConstraints;\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        var constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        var projection = this.visualElement.projection;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        var constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        var measuredConstraints = calcViewportConstraints(projection.layout.actual, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            var userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    };\n    VisualElementDragControls.prototype.startAnimation = function (velocity) {\n        var _this = this;\n        var _a = this.getProps(), drag = _a.drag, dragMomentum = _a.dragMomentum, dragElastic = _a.dragElastic, dragTransition = _a.dragTransition, dragSnapToOrigin = _a.dragSnapToOrigin, onDragTransitionEnd = _a.onDragTransitionEnd;\n        var constraints = this.constraints || {};\n        var momentumAnimations = eachAxis(function (axis) {\n            var _a;\n            if (!shouldDrag(axis, drag, _this.currentDirection)) {\n                return;\n            }\n            var transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            var bounceStiffness = dragElastic ? 200 : 1000000;\n            var bounceDamping = dragElastic ? 40 : 10000000;\n            var inertia = __assign(__assign({ type: \"inertia\", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness: bounceStiffness, bounceDamping: bounceDamping, timeConstant: 750, restDelta: 1, restSpeed: 10 }, dragTransition), transition);\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return _this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    };\n    VisualElementDragControls.prototype.startAxisValueAnimation = function (axis, transition) {\n        var axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    };\n    VisualElementDragControls.prototype.stopAnimation = function () {\n        var _this = this;\n        eachAxis(function (axis) { return _this.getAxisMotionValue(axis).stop(); });\n    };\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    VisualElementDragControls.prototype.getAxisMotionValue = function (axis) {\n        var _a, _b;\n        var dragKey = \"_drag\" + axis.toUpperCase();\n        var externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n    };\n    VisualElementDragControls.prototype.snapToCursor = function (point) {\n        var _this = this;\n        eachAxis(function (axis) {\n            var drag = _this.getProps().drag;\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, _this.currentDirection))\n                return;\n            var projection = _this.visualElement.projection;\n            var axisValue = _this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                var _a = projection.layout.actual[axis], min = _a.min, max = _a.max;\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    };\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    VisualElementDragControls.prototype.scalePositionWithinConstraints = function () {\n        var _this = this;\n        var _a;\n        var _b = this.getProps(), drag = _b.drag, dragConstraints = _b.dragConstraints;\n        var projection = this.visualElement.projection;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        var boxProgress = { x: 0, y: 0 };\n        eachAxis(function (axis) {\n            var axisValue = _this.getAxisMotionValue(axis);\n            if (axisValue) {\n                var latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, _this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        var transformTemplate = this.visualElement.getProps().transformTemplate;\n        this.visualElement.getInstance().style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis(function (axis) {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            var axisValue = _this.getAxisMotionValue(axis);\n            var _a = _this.constraints[axis], min = _a.min, max = _a.max;\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    };\n    VisualElementDragControls.prototype.addListeners = function () {\n        var _this = this;\n        var _a;\n        elementDragControls.set(this.visualElement, this);\n        var element = this.visualElement.getInstance();\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        var stopPointerListener = addPointerEvent(element, \"pointerdown\", function (event) {\n            var _a = _this.getProps(), drag = _a.drag, _b = _a.dragListener, dragListener = _b === void 0 ? true : _b;\n            drag && dragListener && _this.start(event);\n        });\n        var measureDragConstraints = function () {\n            var dragConstraints = _this.getProps().dragConstraints;\n            if (isRefObject(dragConstraints)) {\n                _this.constraints = _this.resolveRefConstraints();\n            }\n        };\n        var projection = this.visualElement.projection;\n        var stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        var stopResizeListener = addDomEvent(window, \"resize\", function () {\n            return _this.scalePositionWithinConstraints();\n        });\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        projection.addEventListener(\"didUpdate\", (function (_a) {\n            var delta = _a.delta, hasLayoutChanged = _a.hasLayoutChanged;\n            if (_this.isDragging && hasLayoutChanged) {\n                eachAxis(function (axis) {\n                    var motionValue = _this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    _this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                _this.visualElement.syncRender();\n            }\n        }));\n        return function () {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n        };\n    };\n    VisualElementDragControls.prototype.getProps = function () {\n        var props = this.visualElement.getProps();\n        var _a = props.drag, drag = _a === void 0 ? false : _a, _b = props.dragDirectionLock, dragDirectionLock = _b === void 0 ? false : _b, _c = props.dragPropagation, dragPropagation = _c === void 0 ? false : _c, _d = props.dragConstraints, dragConstraints = _d === void 0 ? false : _d, _e = props.dragElastic, dragElastic = _e === void 0 ? defaultElastic : _e, _f = props.dragMomentum, dragMomentum = _f === void 0 ? true : _f;\n        return __assign(__assign({}, props), { drag: drag, dragDirectionLock: dragDirectionLock, dragPropagation: dragPropagation, dragConstraints: dragConstraints, dragElastic: dragElastic, dragMomentum: dragMomentum });\n    };\n    return VisualElementDragControls;\n}());\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold) {\n    if (lockThreshold === void 0) { lockThreshold = 10; }\n    var direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(function () { return function () { return callback(); }; }, []);\n}\n\nexport { useUnmountEffect };\n","var makeRenderlessComponent = function (hook) { return function (props) {\n    hook(props);\n    return null;\n}; };\n\nexport { makeRenderlessComponent };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nvar drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture(_a) {\n    var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart, visualElement = _a.visualElement;\n    var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    var panSession = useRef(null);\n    var transformPagePoint = useContext(MotionConfigContext).transformPagePoint;\n    var handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: function (event, info) {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(function () {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint: transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(function () { return panSession.current && panSession.current.end(); });\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    var groupDragControls = props.dragControls, visualElement = props.visualElement;\n    var dragControls = useConstant(function () { return new VisualElementDragControls(visualElement); });\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(function () { return groupDragControls && groupDragControls.subscribe(dragControls); }, [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(function () { return dragControls.addListeners(); }, [dragControls]);\n}\n\nexport { useDrag };\n","import { useConstant } from './use-constant.mjs';\n\nvar counter = 0;\nvar incrementId = function () { return counter++; };\nvar useId = function () { return useConstant(incrementId); };\n/**\n * Ideally we'd use the following code to support React 18 optionally.\n * But this fairly fails in Webpack (otherwise treeshaking wouldn't work at all).\n * Need to come up with a different way of figuring this out.\n */\n// export const useId = (React as any).useId\n//     ? (React as any).useId\n//     : () => useConstant(incrementId)\n\nexport { useId };\n","import { useContext, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useId } from '../../utils/use-id.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    var context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    var isPresent = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    var id = useId();\n    useEffect(function () { return register(id); }, []);\n    var safeToRemove = function () { return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id); };\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { px } from 'style-value-types';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nvar correctBorderRadius = {\n    correct: function (latest, node) {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        var x = pixelsToPercent(latest, node.target.x);\n        var y = pixelsToPercent(latest, node.target.y);\n        return \"\".concat(x, \"% \").concat(y, \"%\");\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { __rest, __assign, __read } from 'tslib';\nimport { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nvar cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    var match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    var _a = __read(match, 3), token = _a[1], fallback = _a[2];\n    return [token, fallback];\n}\nvar maxDepth = 4;\nfunction getVariableValue(current, element, depth) {\n    if (depth === void 0) { depth = 1; }\n    invariant(depth <= maxDepth, \"Max CSS variable fallback depth detected in property \\\"\".concat(current, \"\\\". This may indicate a circular fallback dependency.\"));\n    var _a = __read(parseCSSVariable(current), 2), token = _a[0], fallback = _a[1];\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    var resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, _a, transitionEnd) {\n    var _b;\n    var target = __rest(_a, []);\n    var element = visualElement.getInstance();\n    if (!(element instanceof Element))\n        return { target: target, transitionEnd: transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = __assign({}, transitionEnd);\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.forEachValue(function (value) {\n        var current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        var resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (var key in target) {\n        var current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        var resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd)\n            (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : (transitionEnd[key] = current);\n    }\n    return { target: target, transitionEnd: transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { mix } from 'popmotion';\nimport { complex } from 'style-value-types';\nimport { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\n\nvar varToken = \"_$css\";\nvar correctBoxShadow = {\n    correct: function (latest, _a) {\n        var treeScale = _a.treeScale, projectionDelta = _a.projectionDelta;\n        var original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        var containsCSSVariables = latest.includes(\"var(\");\n        var cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, function (match) {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        var shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        var template = complex.createTransformer(latest);\n        var offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        var xScale = projectionDelta.x.scale * treeScale.x;\n        var yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        var averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        var output = template(shadow);\n        if (containsCSSVariables) {\n            var i_1 = 0;\n            output = output.replace(varToken, function () {\n                var cssVariable = cssVariables[i_1];\n                i_1++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { __extends, __assign, __read } from 'tslib';\nimport sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nvar MeasureLayoutWithContext = /** @class */ (function (_super) {\n    __extends(MeasureLayoutWithContext, _super);\n    function MeasureLayoutWithContext() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    MeasureLayoutWithContext.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a = this.props, visualElement = _a.visualElement, layoutGroup = _a.layoutGroup, switchLayoutGroup = _a.switchLayoutGroup, layoutId = _a.layoutId;\n        var projection = visualElement.projection;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if ((switchLayoutGroup === null || switchLayoutGroup === void 0 ? void 0 : switchLayoutGroup.register) && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", function () {\n                _this.safeToRemove();\n            });\n            projection.setOptions(__assign(__assign({}, projection.options), { onExitComplete: function () { return _this.safeToRemove(); } }));\n        }\n        globalProjectionState.hasEverUpdated = true;\n    };\n    MeasureLayoutWithContext.prototype.getSnapshotBeforeUpdate = function (prevProps) {\n        var _this = this;\n        var _a = this.props, layoutDependency = _a.layoutDependency, visualElement = _a.visualElement, drag = _a.drag, isPresent = _a.isPresent;\n        var projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(function () {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        _this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    };\n    MeasureLayoutWithContext.prototype.componentDidUpdate = function () {\n        var projection = this.props.visualElement.projection;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    };\n    MeasureLayoutWithContext.prototype.componentWillUnmount = function () {\n        var _a = this.props, visualElement = _a.visualElement, layoutGroup = _a.layoutGroup, promoteContext = _a.switchLayoutGroup;\n        var projection = visualElement.projection;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    };\n    MeasureLayoutWithContext.prototype.safeToRemove = function () {\n        var safeToRemove = this.props.safeToRemove;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    };\n    MeasureLayoutWithContext.prototype.render = function () {\n        return null;\n    };\n    return MeasureLayoutWithContext;\n}(React__default.Component));\nfunction MeasureLayout(props) {\n    var _a = __read(usePresence(), 2), isPresent = _a[0], safeToRemove = _a[1];\n    var layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, __assign({}, props, { layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove })));\n}\nvar defaultScaleCorrectors = {\n    borderRadius: __assign(__assign({}, correctBorderRadius), { applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ] }),\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nvar layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    var prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (var i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { __spreadArray, __read, __assign, __rest } from 'tslib';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { AnimationType } from './types.mjs';\nimport { isVariantLabels, resolveVariant, isVariantLabel } from './variants.mjs';\n\nvar variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nvar reversePriorityOrder = __spreadArray([], __read(variantPriorityOrder), false).reverse();\nvar numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return function (animations) {\n        return Promise.all(animations.map(function (_a) {\n            var animation = _a.animation, options = _a.options;\n            return animateVisualElement(visualElement, animation, options);\n        }));\n    };\n}\nfunction createAnimationState(visualElement) {\n    var animate = animateList(visualElement);\n    var state = createState();\n    var allAnimatedKeys = {};\n    var isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    var buildResolvedTypeValues = function (acc, definition) {\n        var resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            resolved.transition; var transitionEnd = resolved.transitionEnd, target = __rest(resolved, [\"transition\", \"transitionEnd\"]);\n            acc = __assign(__assign(__assign({}, acc), target), transitionEnd);\n        }\n        return acc;\n    };\n    function isAnimated(key) {\n        return allAnimatedKeys[key] !== undefined;\n    }\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        var props = visualElement.getProps();\n        var context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        var animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        var removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        var encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        var removedVariantIndex = Infinity;\n        var _loop_1 = function (i) {\n            var type = reversePriorityOrder[i];\n            var typeState = state[type];\n            var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            var propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            var activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = __assign({}, encounteredKeys);\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                return \"continue\";\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            var variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            var shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            var definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;\n            var allKeys = __assign(__assign({}, prevResolvedValues), resolvedValues);\n            var markToAnimate = function (key) {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (var key in allKeys) {\n                var next = resolvedValues[key];\n                var prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = __assign(__assign({}, encounteredKeys), resolvedValues);\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push.apply(animations, __spreadArray([], __read(definitionList.map(function (animation) { return ({\n                    animation: animation,\n                    options: __assign({ type: type }, options),\n                }); })), false));\n            }\n        };\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (var i = 0; i < numAnimationTypes; i++) {\n            _loop_1(i);\n        }\n        allAnimatedKeys = __assign({}, encounteredKeys);\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            var fallbackAnimation_1 = {};\n            removedKeys.forEach(function (key) {\n                var fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation_1[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation_1 });\n        }\n        var shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        var animations = animateChanges(options, type);\n        for (var key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        isAnimated: isAnimated,\n        animateChanges: animateChanges,\n        setActive: setActive,\n        setAnimateFunction: setAnimateFunction,\n        getState: function () { return state; },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (isVariantLabels(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive) {\n    if (isActive === void 0) { isActive = false; }\n    return {\n        isActive: isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    var _a;\n    return _a = {},\n        _a[AnimationType.Animate] = createTypeState(true),\n        _a[AnimationType.InView] = createTypeState(),\n        _a[AnimationType.Hover] = createTypeState(),\n        _a[AnimationType.Tap] = createTypeState(),\n        _a[AnimationType.Drag] = createTypeState(),\n        _a[AnimationType.Focus] = createTypeState(),\n        _a[AnimationType.Exit] = createTypeState(),\n        _a;\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { __read } from 'tslib';\nimport { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nvar animations = {\n    animation: makeRenderlessComponent(function (_a) {\n        var visualElement = _a.visualElement, animate = _a.animate;\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(function () { return animate.subscribe(visualElement); }, [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent(function (props) {\n        var custom = props.custom, visualElement = props.visualElement;\n        var _a = __read(usePresence(), 2), isPresent = _a[0], safeToRemove = _a[1];\n        var presenceContext = useContext(PresenceContext);\n        useEffect(function () {\n            var _a, _b;\n            visualElement.isPresent = isPresent;\n            var animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });\n            !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(safeToRemove));\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return function (event, info) {\n        var _a;\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Hover, isActive);\n        callback === null || callback === void 0 ? void 0 : callback(event, info);\n    };\n}\nfunction useHoverGesture(_a) {\n    var onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, whileHover = _a.whileHover, visualElement = _a.visualElement;\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nvar isNodeOrChild = function (parent, child) {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","var warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","import { __rest, __assign } from 'tslib';\n\n/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nvar observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nvar observers = new WeakMap();\nvar fireObserverCallback = function (entry) {\n    var _a;\n    (_a = observerCallbacks.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n};\nvar fireAllObserverCallbacks = function (entries) {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver(_a) {\n    var root = _a.root, options = __rest(_a, [\"root\"]);\n    var lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    var rootObservers = observers.get(lookupRoot);\n    var key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, __assign({ root: root }, options));\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    var rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return function () {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport(_a) {\n    var visualElement = _a.visualElement, whileInView = _a.whileInView, onViewportEnter = _a.onViewportEnter, onViewportLeave = _a.onViewportLeave, _b = _a.viewport, viewport = _b === void 0 ? {} : _b;\n    var state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    var shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    var useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nvar thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, _a) {\n    var root = _a.root, rootMargin = _a.margin, _b = _a.amount, amount = _b === void 0 ? \"some\" : _b, once = _a.once;\n    useEffect(function () {\n        if (!shouldObserve)\n            return;\n        var options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin: rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        var intersectionCallback = function (entry) {\n            var _a;\n            var isIntersecting = entry.isIntersecting;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.InView, isIntersecting);\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            var props = visualElement.getProps();\n            var callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback === null || callback === void 0 ? void 0 : callback(entry);\n        };\n        return observeIntersection(visualElement.getInstance(), options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, _a) {\n    var _b = _a.fallback, fallback = _b === void 0 ? true : _b;\n    useEffect(function () {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(function () {\n            var _a;\n            state.hasEnteredView = true;\n            var onViewportEnter = visualElement.getProps().onViewportEnter;\n            onViewportEnter === null || onViewportEnter === void 0 ? void 0 : onViewportEnter(null);\n            (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.InView, true);\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nvar gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { pipe } from 'popmotion';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture(_a) {\n    var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap, visualElement = _a.visualElement;\n    var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    var isPressing = useRef(false);\n    var cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    var eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        var _a;\n        (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        var _a;\n        removePointerEndListener();\n        isPressing.current = false;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.getInstance(), event.target)\n            ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info)\n            : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, true);\n        onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture(_a) {\n    var whileFocus = _a.whileFocus, visualElement = _a.visualElement;\n    var onFocus = function () {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Focus, true);\n    };\n    var onBlur = function () {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { __spreadArray, __read } from 'tslib';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\n\nvar names = [\n    \"LayoutMeasure\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutUpdate\",\n    \"ViewportBoxUpdate\",\n    \"Update\",\n    \"Render\",\n    \"AnimationComplete\",\n    \"LayoutAnimationComplete\",\n    \"AnimationStart\",\n    \"LayoutAnimationStart\",\n    \"SetAxisTarget\",\n    \"Unmount\",\n];\nfunction createLifecycles() {\n    var managers = names.map(function () { return new SubscriptionManager(); });\n    var propSubscriptions = {};\n    var lifecycles = {\n        clearAllListeners: function () { return managers.forEach(function (manager) { return manager.clear(); }); },\n        updatePropListeners: function (props) {\n            names.forEach(function (name) {\n                var _a;\n                var on = \"on\" + name;\n                var propListener = props[on];\n                // Unsubscribe existing subscription\n                (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);\n                // Add new subscription\n                if (propListener) {\n                    propSubscriptions[name] = lifecycles[on](propListener);\n                }\n            });\n        },\n    };\n    managers.forEach(function (manager, i) {\n        lifecycles[\"on\" + names[i]] = function (handler) { return manager.add(handler); };\n        lifecycles[\"notify\" + names[i]] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return manager.notify.apply(manager, __spreadArray([], __read(args), false));\n        };\n    });\n    return lifecycles;\n}\n\nexport { createLifecycles };\n","import { __assign, __spreadArray, __read } from 'tslib';\nimport sync, { cancelSync } from 'framesync';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { createLifecycles } from './utils/lifecycles.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { checkIfControllingVariants, checkIfVariantNode, isVariantLabel } from './utils/variants.mjs';\n\nvar visualElement = function (_a) {\n    var _b = _a.treeType, treeType = _b === void 0 ? \"\" : _b, build = _a.build, getBaseTarget = _a.getBaseTarget, makeTargetAnimatable = _a.makeTargetAnimatable, measureViewportBox = _a.measureViewportBox, renderInstance = _a.render, readValueFromInstance = _a.readValueFromInstance, removeValueFromRenderState = _a.removeValueFromRenderState, sortNodePosition = _a.sortNodePosition, scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps;\n    return function (_a, options) {\n        var parent = _a.parent, props = _a.props, presenceId = _a.presenceId, blockInitialAnimation = _a.blockInitialAnimation, visualState = _a.visualState, shouldReduceMotion = _a.shouldReduceMotion;\n        if (options === void 0) { options = {}; }\n        var isMounted = false;\n        var latestValues = visualState.latestValues, renderState = visualState.renderState;\n        /**\n         * The instance of the render-specific node that will be hydrated by the\n         * exposed React ref. So for example, this visual element can host a\n         * HTMLElement, plain object, or Three.js object. The functions provided\n         * in VisualElementConfig allow us to interface with this instance.\n         */\n        var instance;\n        /**\n         * Manages the subscriptions for a visual element's lifecycle, for instance\n         * onRender\n         */\n        var lifecycles = createLifecycles();\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        var values = new Map();\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        var valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        var prevMotionValues = {};\n        /**\n         * When values are removed from all animation props we need to search\n         * for a fallback value to animate to. These values are tracked in baseTarget.\n         */\n        var baseTarget = __assign({}, latestValues);\n        // Internal methods ========================\n        /**\n         * On mount, this will be hydrated with a callback to disconnect\n         * this visual element from its parent on unmount.\n         */\n        var removeFromVariantTree;\n        /**\n         * Render the element with the latest styles outside of the React\n         * render lifecycle\n         */\n        function render() {\n            if (!instance || !isMounted)\n                return;\n            triggerBuild();\n            renderInstance(instance, renderState, props.style, element.projection);\n        }\n        function triggerBuild() {\n            build(element, renderState, latestValues, options, props);\n        }\n        function update() {\n            lifecycles.notifyUpdate(latestValues);\n        }\n        /**\n         *\n         */\n        function bindToMotionValue(key, value) {\n            var removeOnChange = value.onChange(function (latestValue) {\n                latestValues[key] = latestValue;\n                props.onUpdate && sync.update(update, false, true);\n            });\n            var removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);\n            valueSubscriptions.set(key, function () {\n                removeOnChange();\n                removeOnRenderRequest();\n            });\n        }\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        var initialMotionValues = scrapeMotionValuesFromProps(props);\n        for (var key in initialMotionValues) {\n            var value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        var isControllingVariants = checkIfControllingVariants(props);\n        var isVariantNode = checkIfVariantNode(props);\n        var element = __assign(__assign({ treeType: treeType, \n            /**\n             * This is a mirror of the internal instance prop, which keeps\n             * VisualElement type-compatible with React's RefObject.\n             */\n            current: null, \n            /**\n             * The depth of this visual element within the visual element tree.\n             */\n            depth: parent ? parent.depth + 1 : 0, parent: parent, children: new Set(), \n            /**\n             *\n             */\n            presenceId: presenceId, shouldReduceMotion: shouldReduceMotion, \n            /**\n             * If this component is part of the variant tree, it should track\n             * any children that are also part of the tree. This is essentially\n             * a shadow tree to simplify logic around how to stagger over children.\n             */\n            variantChildren: isVariantNode ? new Set() : undefined, \n            /**\n             * Whether this instance is visible. This can be changed imperatively\n             * by the projection tree, is analogous to CSS's visibility in that\n             * hidden elements should take up layout, and needs enacting by the configured\n             * render function.\n             */\n            isVisible: undefined, \n            /**\n             * Normally, if a component is controlled by a parent's variants, it can\n             * rely on that ancestor to trigger animations further down the tree.\n             * However, if a component is created after its parent is mounted, the parent\n             * won't trigger that mount animation so the child needs to.\n             *\n             * TODO: This might be better replaced with a method isParentMounted\n             */\n            manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()), \n            /**\n             * This can be set by AnimatePresence to force components that mount\n             * at the same time as it to mount as if they have initial={false} set.\n             */\n            blockInitialAnimation: blockInitialAnimation, \n            /**\n             * Determine whether this component has mounted yet. This is mostly used\n             * by variant children to determine whether they need to trigger their\n             * own animations on mount.\n             */\n            isMounted: function () { return Boolean(instance); }, mount: function (newInstance) {\n                isMounted = true;\n                instance = element.current = newInstance;\n                if (element.projection) {\n                    element.projection.mount(newInstance);\n                }\n                if (isVariantNode && parent && !isControllingVariants) {\n                    removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\n                }\n                values.forEach(function (value, key) { return bindToMotionValue(key, value); });\n                parent === null || parent === void 0 ? void 0 : parent.children.add(element);\n                element.setProps(props);\n            }, \n            /**\n             *\n             */\n            unmount: function () {\n                var _a;\n                (_a = element.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n                cancelSync.update(update);\n                cancelSync.render(render);\n                valueSubscriptions.forEach(function (remove) { return remove(); });\n                removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\n                parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\n                lifecycles.clearAllListeners();\n                instance = undefined;\n                isMounted = false;\n            }, \n            /**\n             * Add a child visual element to our set of children.\n             */\n            addVariantChild: function (child) {\n                var _a;\n                var closestVariantNode = element.getClosestVariantNode();\n                if (closestVariantNode) {\n                    (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n                    return function () {\n                        return closestVariantNode.variantChildren.delete(child);\n                    };\n                }\n            }, sortNodePosition: function (other) {\n                /**\n                 * If these nodes aren't even of the same type we can't compare their depth.\n                 */\n                if (!sortNodePosition || treeType !== other.treeType)\n                    return 0;\n                return sortNodePosition(element.getInstance(), other.getInstance());\n            }, \n            /**\n             * Returns the closest variant node in the tree starting from\n             * this visual element.\n             */\n            getClosestVariantNode: function () {\n                return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();\n            }, \n            /**\n             * Expose the latest layoutId prop.\n             */\n            getLayoutId: function () { return props.layoutId; }, \n            /**\n             * Returns the current instance.\n             */\n            getInstance: function () { return instance; }, \n            /**\n             * Get/set the latest static values.\n             */\n            getStaticValue: function (key) { return latestValues[key]; }, setStaticValue: function (key, value) { return (latestValues[key] = value); }, \n            /**\n             * Returns the latest motion value state. Currently only used to take\n             * a snapshot of the visual element - perhaps this can return the whole\n             * visual state\n             */\n            getLatestValues: function () { return latestValues; }, \n            /**\n             * Set the visiblity of the visual element. If it's changed, schedule\n             * a render to reflect these changes.\n             */\n            setVisibility: function (visibility) {\n                if (element.isVisible === visibility)\n                    return;\n                element.isVisible = visibility;\n                element.scheduleRender();\n            }, \n            /**\n             * Make a target animatable by Popmotion. For instance, if we're\n             * trying to animate width from 100px to 100vw we need to measure 100vw\n             * in pixels to determine what we really need to animate to. This is also\n             * pluggable to support Framer's custom value types like Color,\n             * and CSS variables.\n             */\n            makeTargetAnimatable: function (target, canMutate) {\n                if (canMutate === void 0) { canMutate = true; }\n                return makeTargetAnimatable(element, target, props, canMutate);\n            }, \n            /**\n             * Measure the current viewport box with or without transforms.\n             * Only measures axis-aligned boxes, rotate and skew must be manually\n             * removed with a re-render to work.\n             */\n            measureViewportBox: function () {\n                return measureViewportBox(instance, props);\n            }, \n            // Motion values ========================\n            /**\n             * Add a motion value and bind it to this visual element.\n             */\n            addValue: function (key, value) {\n                // Remove existing value if it exists\n                if (element.hasValue(key))\n                    element.removeValue(key);\n                values.set(key, value);\n                latestValues[key] = value.get();\n                bindToMotionValue(key, value);\n            }, \n            /**\n             * Remove a motion value and unbind any active subscriptions.\n             */\n            removeValue: function (key) {\n                var _a;\n                values.delete(key);\n                (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n                valueSubscriptions.delete(key);\n                delete latestValues[key];\n                removeValueFromRenderState(key, renderState);\n            }, \n            /**\n             * Check whether we have a motion value for this key\n             */\n            hasValue: function (key) { return values.has(key); }, \n            /**\n             * Get a motion value for this key. If called with a default\n             * value, we'll create one if none exists.\n             */\n            getValue: function (key, defaultValue) {\n                var value = values.get(key);\n                if (value === undefined && defaultValue !== undefined) {\n                    value = motionValue(defaultValue);\n                    element.addValue(key, value);\n                }\n                return value;\n            }, \n            /**\n             * Iterate over our motion values.\n             */\n            forEachValue: function (callback) { return values.forEach(callback); }, \n            /**\n             * If we're trying to animate to a previously unencountered value,\n             * we need to check for it in our state and as a last resort read it\n             * directly from the instance (which might have performance implications).\n             */\n            readValue: function (key) {\n                var _a;\n                return (_a = latestValues[key]) !== null && _a !== void 0 ? _a : readValueFromInstance(instance, key, options);\n            }, \n            /**\n             * Set the base target to later animate back to. This is currently\n             * only hydrated on creation and when we first read a value.\n             */\n            setBaseTarget: function (key, value) {\n                baseTarget[key] = value;\n            }, \n            /**\n             * Find the base target for a value thats been removed from all animation\n             * props.\n             */\n            getBaseTarget: function (key) {\n                if (getBaseTarget) {\n                    var target = getBaseTarget(props, key);\n                    if (target !== undefined && !isMotionValue(target))\n                        return target;\n                }\n                return baseTarget[key];\n            } }, lifecycles), { \n            /**\n             * Build the renderer state based on the latest visual state.\n             */\n            build: function () {\n                triggerBuild();\n                return renderState;\n            }, \n            /**\n             * Schedule a render on the next animation frame.\n             */\n            scheduleRender: function () {\n                sync.render(render, false, true);\n            }, \n            /**\n             * Synchronously fire render. It's prefered that we batch renders but\n             * in many circumstances, like layout measurement, we need to run this\n             * synchronously. However in those instances other measures should be taken\n             * to batch reads/writes.\n             */\n            syncRender: render, \n            /**\n             * Update the provided props. Ensure any newly-added motion values are\n             * added to our map, old ones removed, and listeners updated.\n             */\n            setProps: function (newProps) {\n                if (newProps.transformTemplate || props.transformTemplate) {\n                    element.scheduleRender();\n                }\n                props = newProps;\n                lifecycles.updatePropListeners(newProps);\n                prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);\n            }, getProps: function () { return props; }, \n            // Variants ==============================\n            /**\n             * Returns the variant definition with a given name.\n             */\n            getVariant: function (name) { var _a; return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name]; }, \n            /**\n             * Returns the defined default transition on this component.\n             */\n            getDefaultTransition: function () { return props.transition; }, getTransformPagePoint: function () {\n                return props.transformPagePoint;\n            }, \n            /**\n             * Used by child variant nodes to get the closest ancestor variant props.\n             */\n            getVariantContext: function (startAtParent) {\n                if (startAtParent === void 0) { startAtParent = false; }\n                if (startAtParent)\n                    return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n                if (!isControllingVariants) {\n                    var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\n                    if (props.initial !== undefined) {\n                        context_1.initial = props.initial;\n                    }\n                    return context_1;\n                }\n                var context = {};\n                for (var i = 0; i < numVariantProps; i++) {\n                    var name_1 = variantProps[i];\n                    var prop = props[name_1];\n                    if (isVariantLabel(prop) || prop === false) {\n                        context[name_1] = prop;\n                    }\n                }\n                return context;\n            } });\n        return element;\n    };\n};\nvar variantProps = __spreadArray([\"initial\"], __read(variantPriorityOrder), false);\nvar numVariantProps = variantProps.length;\n\nexport { visualElement };\n","import { __assign, __read } from 'tslib';\nimport { number, px } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformProps } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\n\nvar positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nvar isPositionalKey = function (key) { return positionalKeys.has(key); };\nvar hasPositionalKey = function (target) {\n    return Object.keys(target).some(isPositionalKey);\n};\nvar setAndResetVelocity = function (value, to) {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nvar isNumOrPxType = function (v) {\n    return v === number || v === px;\n};\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nvar getPosFromMatrix = function (matrix, pos) {\n    return parseFloat(matrix.split(\", \")[pos]);\n};\nvar getTranslateFromMatrix = function (pos2, pos3) {\n    return function (_bbox, _a) {\n        var transform = _a.transform;\n        if (transform === \"none\" || !transform)\n            return 0;\n        var matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n        if (matrix3d) {\n            return getPosFromMatrix(matrix3d[1], pos3);\n        }\n        else {\n            var matrix = transform.match(/^matrix\\((.+)\\)$/);\n            if (matrix) {\n                return getPosFromMatrix(matrix[1], pos2);\n            }\n            else {\n                return 0;\n            }\n        }\n    };\n};\nvar transformKeys = new Set([\"x\", \"y\", \"z\"]);\nvar nonTranslationalTransformKeys = transformProps.filter(function (key) { return !transformKeys.has(key); });\nfunction removeNonTranslationalTransform(visualElement) {\n    var removedTransforms = [];\n    nonTranslationalTransformKeys.forEach(function (key) {\n        var value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.syncRender();\n    return removedTransforms;\n}\nvar positionalValues = {\n    // Dimensions\n    width: function (_a, _b) {\n        var x = _a.x;\n        var _c = _b.paddingLeft, paddingLeft = _c === void 0 ? \"0\" : _c, _d = _b.paddingRight, paddingRight = _d === void 0 ? \"0\" : _d;\n        return x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight);\n    },\n    height: function (_a, _b) {\n        var y = _a.y;\n        var _c = _b.paddingTop, paddingTop = _c === void 0 ? \"0\" : _c, _d = _b.paddingBottom, paddingBottom = _d === void 0 ? \"0\" : _d;\n        return y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom);\n    },\n    top: function (_bbox, _a) {\n        var top = _a.top;\n        return parseFloat(top);\n    },\n    left: function (_bbox, _a) {\n        var left = _a.left;\n        return parseFloat(left);\n    },\n    bottom: function (_a, _b) {\n        var y = _a.y;\n        var top = _b.top;\n        return parseFloat(top) + (y.max - y.min);\n    },\n    right: function (_a, _b) {\n        var x = _a.x;\n        var left = _b.left;\n        return parseFloat(left) + (x.max - x.min);\n    },\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nvar convertChangedValueTypes = function (target, visualElement, changedKeys) {\n    var originBbox = visualElement.measureViewportBox();\n    var element = visualElement.getInstance();\n    var elementComputedStyle = getComputedStyle(element);\n    var display = elementComputedStyle.display;\n    var origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach(function (key) {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.syncRender();\n    var targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach(function (key) {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        var value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nvar checkAndConvertChangedValueTypes = function (visualElement, target, origin, transitionEnd) {\n    if (origin === void 0) { origin = {}; }\n    if (transitionEnd === void 0) { transitionEnd = {}; }\n    target = __assign({}, target);\n    transitionEnd = __assign({}, transitionEnd);\n    var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    var removedTransformValues = [];\n    var hasAttemptedToRemoveTransformValues = false;\n    var changedValueTypeKeys = [];\n    targetPositionalKeys.forEach(function (key) {\n        var value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        var from = origin[key];\n        var fromType = findDimensionValueType(from);\n        var to = target[key];\n        var toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            var numKeyframes = to.length;\n            var fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (var i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                var current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        var scrollY_1 = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        var convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(function (_a) {\n                var _b = __read(_a, 2), key = _b[0], value = _b[1];\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.syncRender();\n        // Restore scroll position\n        if (scrollY_1 !== null)\n            window.scrollTo({ top: scrollY_1 });\n        return { target: convertedTarget, transitionEnd: transitionEnd };\n    }\n    else {\n        return { target: target, transitionEnd: transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target: target, transitionEnd: transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    var _a;\n    for (var key in next) {\n        var nextValue = next[key];\n        var prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"6.5.1\", \"Attempting to mix Framer Motion versions \".concat(nextValue.version, \" with 6.5.1 may not work as expected.\"));\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping to a new motion value, create a new motion value\n             * from that\n             */\n            element.addValue(key, motionValue(nextValue));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                var existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (var key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nvar parseDomVariant = function (visualElement, target, origin, transitionEnd) {\n    var resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","import { __rest, __assign } from 'tslib';\nimport { visualElement } from '../index.mjs';\nimport { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { parseDomVariant } from '../dom/utils/parse-dom-variant.mjs';\nimport { isTransformProp } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nvar htmlConfig = {\n    treeType: \"dom\",\n    readValueFromInstance: function (domElement, key) {\n        if (isTransformProp(key)) {\n            var defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            var computedStyle = getComputedStyle(domElement);\n            return ((isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0);\n        }\n    },\n    sortNodePosition: function (a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    },\n    getBaseTarget: function (props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    },\n    measureViewportBox: function (element, _a) {\n        var transformPagePoint = _a.transformPagePoint;\n        return measureViewportBox(element, transformPagePoint);\n    },\n    /**\n     * Reset the transform on the current Element. This is called as part\n     * of a batched process across the entire layout tree. To remove this write\n     * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n     * works\n     */\n    resetTransform: function (element, domElement, props) {\n        var transformTemplate = props.transformTemplate;\n        domElement.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        // Ensure that whatever happens next, we restore our transform on the next frame\n        element.scheduleRender();\n    },\n    restoreTransform: function (instance, mutableState) {\n        instance.style.transform = mutableState.style.transform;\n    },\n    removeValueFromRenderState: function (key, _a) {\n        var vars = _a.vars, style = _a.style;\n        delete vars[key];\n        delete style[key];\n    },\n    /**\n     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n     * can be animated by Motion.\n     */\n    makeTargetAnimatable: function (element, _a, _b, isMounted) {\n        var transformValues = _b.transformValues;\n        if (isMounted === void 0) { isMounted = true; }\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n        var origin = getOrigin(target, transition || {}, element);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(element, target, origin);\n            var parsed = parseDomVariant(element, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return __assign({ transition: transition, transitionEnd: transitionEnd }, target);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (element, renderState, latestValues, options, props) {\n        if (element.isVisible !== undefined) {\n            renderState.style.visibility = element.isVisible\n                ? \"visible\"\n                : \"hidden\";\n        }\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    },\n    render: renderHTML,\n};\nvar htmlVisualElement = visualElement(htmlConfig);\n\nexport { getComputedStyle, htmlConfig, htmlVisualElement };\n","import { __assign } from 'tslib';\nimport { visualElement } from '../index.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { htmlConfig } from '../html/visual-element.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isTransformProp } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\n\nvar svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), { getBaseTarget: function (props, key) {\n        return props[key];\n    }, readValueFromInstance: function (domElement, key) {\n        var _a;\n        if (isTransformProp(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    }, scrapeMotionValuesFromProps: scrapeMotionValuesFromProps, build: function (_element, renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n    }, render: renderSVG }));\n\nexport { svgVisualElement };\n","import { __assign } from 'tslib';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nvar domAnimation = __assign(__assign({ renderer: createDomVisualElement }, animations), gestureAnimations);\n\nexport { domAnimation };\n","import { htmlVisualElement } from '../html/visual-element.mjs';\nimport { svgVisualElement } from '../svg/visual-element.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nvar createDomVisualElement = function (Component, options) {\n    return isSVGComponent(Component)\n        ? svgVisualElement(options, { enableHardwareAcceleration: false })\n        : htmlVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { mix, progress, linear, circOut } from 'popmotion';\nimport { px, percent } from 'style-value-types';\n\nvar borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nvar numBorders = borders.length;\nvar asNumber = function (value) {\n    return typeof value === \"string\" ? parseFloat(value) : value;\n};\nvar isPx = function (value) {\n    return typeof value === \"number\" || px.test(value);\n};\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (var i = 0; i < numBorders; i++) {\n        var borderLabel = \"border\".concat(borders[i], \"Radius\");\n        var followRadius = getRadius(follow, borderLabel);\n        var leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        var canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nvar easeCrossfadeIn = compress(0, 0.5, circOut);\nvar easeCrossfadeOut = compress(0.5, 0.95, linear);\nfunction compress(min, max, easing) {\n    return function (p) {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { __read } from 'tslib';\nimport { mix } from 'popmotion';\nimport { percent } from 'style-value-types';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate, scale, origin, boxScale, originAxis, sourceAxis) {\n    if (translate === void 0) { translate = 0; }\n    if (scale === void 0) { scale = 1; }\n    if (origin === void 0) { origin = 0.5; }\n    if (originAxis === void 0) { originAxis = axis; }\n    if (sourceAxis === void 0) { sourceAxis = axis; }\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        var relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    var originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, _a, origin, sourceAxis) {\n    var _b = __read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nvar xKeys = [\"x\", \"scaleX\", \"originX\"];\nvar yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","function isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\n\nexport { boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nvar NodeStack = /** @class */ (function () {\n    function NodeStack() {\n        this.members = [];\n    }\n    NodeStack.prototype.add = function (node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    };\n    NodeStack.prototype.remove = function (node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            var prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    };\n    NodeStack.prototype.relegate = function (node) {\n        var indexOfNode = this.members.findIndex(function (member) { return node === member; });\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        var prevLead;\n        for (var i = indexOfNode; i >= 0; i--) {\n            var member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    NodeStack.prototype.promote = function (node, preserveFollowOpacity) {\n        var _a;\n        var prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n                node.snapshot.isShared = true;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            var crossfade = node.options.crossfade;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    };\n    NodeStack.prototype.exitAnimationComplete = function () {\n        this.members.forEach(function (node) {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    };\n    NodeStack.prototype.scheduleRender = function () {\n        this.members.forEach(function (node) {\n            node.instance && node.scheduleRender(false);\n        });\n    };\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    NodeStack.prototype.removeLeadSnapshot = function () {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    };\n    return NodeStack;\n}());\n\nexport { NodeStack };\n","var identityProjection = \"translate3d(0px, 0px, 0) scale(1, 1) scale(1, 1)\";\nfunction buildProjectionTransform(delta, treeScale, latestTransform) {\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    var xTranslate = delta.x.translate / treeScale.x;\n    var yTranslate = delta.y.translate / treeScale.y;\n    var transform = \"translate3d(\".concat(xTranslate, \"px, \").concat(yTranslate, \"px, 0) \");\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    transform += \"scale(\".concat(1 / treeScale.x, \", \").concat(1 / treeScale.y, \") \");\n    if (latestTransform) {\n        var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;\n        if (rotate)\n            transform += \"rotate(\".concat(rotate, \"deg) \");\n        if (rotateX)\n            transform += \"rotateX(\".concat(rotateX, \"deg) \");\n        if (rotateY)\n            transform += \"rotateY(\".concat(rotateY, \"deg) \");\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    var elementScaleX = delta.x.scale * treeScale.x;\n    var elementScaleY = delta.y.scale * treeScale.y;\n    transform += \"scale(\".concat(elementScaleX, \", \").concat(elementScaleY, \")\");\n    return transform === identityProjection ? \"none\" : transform;\n}\n\nexport { buildProjectionTransform, identityProjection };\n","var compareByDepth = function (a, b) {\n    return a.depth - b.depth;\n};\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nvar FlatTree = /** @class */ (function () {\n    function FlatTree() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    FlatTree.prototype.add = function (child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.remove = function (child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.forEach = function (callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    };\n    return FlatTree;\n}());\n\nexport { FlatTree };\n","import { __spreadArray, __read, __assign } from 'tslib';\nimport sync, { cancelSync, flushSync } from 'framesync';\nimport { mix } from 'popmotion';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale } from '../utils/has-transform.mjs';\nimport { transformAxes } from '../../render/html/utils/transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\n\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nvar animationTarget = 1000;\nfunction createProjectionNode(_a) {\n    var attachResizeListener = _a.attachResizeListener, defaultParent = _a.defaultParent, measureScroll = _a.measureScroll, checkIsScrollRoot = _a.checkIsScrollRoot, resetTransform = _a.resetTransform;\n    return /** @class */ (function () {\n        function ProjectionNode(id, latestValues, parent) {\n            var _this = this;\n            if (latestValues === void 0) { latestValues = {}; }\n            if (parent === void 0) { parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent(); }\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to actually\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = function () {\n                if (_this.isUpdating) {\n                    _this.isUpdating = false;\n                    _this.clearAllSnapshots();\n                }\n            };\n            this.updateProjection = function () {\n                _this.nodes.forEach(resolveTargetDelta);\n                _this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.id = id;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? __spreadArray(__spreadArray([], __read(parent.path), false), [parent], false) : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            id && this.root.registerPotentialNode(id, this);\n            for (var i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        ProjectionNode.prototype.addEventListener = function (name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        };\n        ProjectionNode.prototype.notifyListeners = function (name) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            var subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify.apply(subscriptionManager, __spreadArray([], __read(args), false));\n        };\n        ProjectionNode.prototype.hasListeners = function (name) {\n            return this.eventHandlers.has(name);\n        };\n        ProjectionNode.prototype.registerPotentialNode = function (id, node) {\n            this.potentialNodes.set(id, node);\n        };\n        /**\n         * Lifecycles\n         */\n        ProjectionNode.prototype.mount = function (instance, isLayoutDirty) {\n            var _this = this;\n            var _a;\n            if (isLayoutDirty === void 0) { isLayoutDirty = false; }\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            var _b = this.options, layoutId = _b.layoutId, layout = _b.layout, visualElement = _b.visualElement;\n            if (visualElement && !visualElement.getInstance()) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.id && this.root.potentialNodes.delete(this.id);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                var unblockTimeout_1;\n                var resizeUnblockUpdate_1 = function () {\n                    return (_this.root.updateBlockedByResize = false);\n                };\n                attachResizeListener(instance, function () {\n                    _this.root.updateBlockedByResize = true;\n                    clearTimeout(unblockTimeout_1);\n                    unblockTimeout_1 = window.setTimeout(resizeUnblockUpdate_1, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        _this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", function (_a) {\n                    var _b, _c, _d, _e, _f;\n                    var delta = _a.delta, hasLayoutChanged = _a.hasLayoutChanged, hasRelativeTargetChanged = _a.hasRelativeTargetChanged, newLayout = _a.layout;\n                    if (_this.isTreeAnimationBlocked()) {\n                        _this.target = undefined;\n                        _this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    var layoutTransition = (_c = (_b = _this.options.transition) !== null && _b !== void 0 ? _b : visualElement.getDefaultTransition()) !== null && _c !== void 0 ? _c : defaultLayoutTransition;\n                    var _g = visualElement.getProps(), onLayoutAnimationStart = _g.onLayoutAnimationStart, onLayoutAnimationComplete = _g.onLayoutAnimationComplete;\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    var targetChanged = !_this.targetLayout ||\n                        !boxEquals(_this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    var hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_d = _this.resumeFrom) === null || _d === void 0 ? void 0 : _d.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !_this.currentAnimation))) {\n                        if (_this.resumeFrom) {\n                            _this.resumingFrom = _this.resumeFrom;\n                            _this.resumingFrom.resumingFrom = undefined;\n                        }\n                        _this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        var animationOptions = __assign(__assign({}, getValueTransition(layoutTransition, \"layout\")), { onPlay: onLayoutAnimationStart, onComplete: onLayoutAnimationComplete });\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        _this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            _this.animationProgress === 0) {\n                            _this.finishAnimation();\n                        }\n                        _this.isLead() && ((_f = (_e = _this.options).onExitComplete) === null || _f === void 0 ? void 0 : _f.call(_e));\n                    }\n                    _this.targetLayout = newLayout;\n                });\n            }\n        };\n        ProjectionNode.prototype.unmount = function () {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        };\n        // only on the root\n        ProjectionNode.prototype.blockUpdate = function () {\n            this.updateManuallyBlocked = true;\n        };\n        ProjectionNode.prototype.unblockUpdate = function () {\n            this.updateManuallyBlocked = false;\n        };\n        ProjectionNode.prototype.isUpdateBlocked = function () {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        };\n        ProjectionNode.prototype.isTreeAnimationBlocked = function () {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        };\n        // Note: currently only running on root node\n        ProjectionNode.prototype.startUpdate = function () {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n        };\n        ProjectionNode.prototype.willUpdate = function (shouldNotifyListeners) {\n            var _a, _b, _c;\n            if (shouldNotifyListeners === void 0) { shouldNotifyListeners = true; }\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (var i = 0; i < this.path.length; i++) {\n                var node = this.path[i];\n                node.shouldResetTransform = true;\n                /**\n                 * TODO: Check we haven't updated the scroll\n                 * since the last didUpdate\n                 */\n                node.updateScroll();\n            }\n            var _d = this.options, layoutId = _d.layoutId, layout = _d.layout;\n            if (layoutId === undefined && !layout)\n                return;\n            var transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        };\n        // Note: Currently only running on root node\n        ProjectionNode.prototype.didUpdate = function () {\n            var updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        };\n        ProjectionNode.prototype.clearAllSnapshots = function () {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        };\n        ProjectionNode.prototype.scheduleUpdateProjection = function () {\n            sync.preRender(this.updateProjection, false, true);\n        };\n        ProjectionNode.prototype.scheduleCheckAfterUnmount = function () {\n            var _this = this;\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(function () {\n                if (_this.isLayoutDirty) {\n                    _this.root.didUpdate();\n                }\n                else {\n                    _this.root.checkUpdateFailed();\n                }\n            });\n        };\n        /**\n         * Update measurements\n         */\n        ProjectionNode.prototype.updateSnapshot = function () {\n            if (this.snapshot || !this.instance)\n                return;\n            var measured = this.measure();\n            var layout = this.removeTransform(this.removeElementScroll(measured));\n            roundBox(layout);\n            this.snapshot = {\n                measured: measured,\n                layout: layout,\n                latestValues: {},\n            };\n        };\n        ProjectionNode.prototype.updateLayout = function () {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (var i = 0; i < this.path.length; i++) {\n                    var node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            var measured = this.measure();\n            roundBox(measured);\n            var prevLayout = this.layout;\n            this.layout = {\n                measured: measured,\n                actual: this.removeElementScroll(measured),\n            };\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.actual);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notifyLayoutMeasure(this.layout.actual, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.actual);\n        };\n        ProjectionNode.prototype.updateScroll = function () {\n            if (this.options.layoutScroll && this.instance) {\n                this.isScrollRoot = checkIsScrollRoot(this.instance);\n                this.scroll = measureScroll(this.instance);\n            }\n        };\n        ProjectionNode.prototype.resetTransform = function () {\n            var _a;\n            if (!resetTransform)\n                return;\n            var isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            var hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            var transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            var transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            var transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        };\n        ProjectionNode.prototype.measure = function () {\n            var visualElement = this.options.visualElement;\n            if (!visualElement)\n                return createBox();\n            var box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            var scroll = this.root.scroll;\n            if (scroll) {\n                translateAxis(box.x, scroll.x);\n                translateAxis(box.y, scroll.y);\n            }\n            return box;\n        };\n        ProjectionNode.prototype.removeElementScroll = function (box) {\n            var boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (var i = 0; i < this.path.length; i++) {\n                var node = this.path[i];\n                var scroll_1 = node.scroll, options = node.options, isScrollRoot = node.isScrollRoot;\n                if (node !== this.root && scroll_1 && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (isScrollRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        var rootScroll = this.root.scroll;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll_1.x);\n                    translateAxis(boxWithoutScroll.y, scroll_1.y);\n                }\n            }\n            return boxWithoutScroll;\n        };\n        ProjectionNode.prototype.applyTransform = function (box, transformOnly) {\n            if (transformOnly === void 0) { transformOnly = false; }\n            var withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (var i = 0; i < this.path.length; i++) {\n                var node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.x,\n                        y: -node.scroll.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        };\n        ProjectionNode.prototype.removeTransform = function (box) {\n            var _a;\n            var boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (var i = 0; i < this.path.length; i++) {\n                var node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                var sourceBox = createBox();\n                var nodeBox = node.measure();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layout, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        };\n        /**\n         *\n         */\n        ProjectionNode.prototype.setTargetDelta = function (delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n        };\n        ProjectionNode.prototype.setOptions = function (options) {\n            var _a;\n            this.options = __assign(__assign(__assign({}, this.options), options), { crossfade: (_a = options.crossfade) !== null && _a !== void 0 ? _a : true });\n        };\n        ProjectionNode.prototype.clearMeasurements = function () {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        };\n        /**\n         * Frame calculations\n         */\n        ProjectionNode.prototype.resolveTargetDelta = function () {\n            var _a;\n            var _b = this.options, layout = _b.layout, layoutId = _b.layoutId;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                this.relativeParent = this.getClosestProjectingParent();\n                if (this.relativeParent && this.relativeParent.layout) {\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.actual);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.actual);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.actual);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                this.relativeParent = this.getClosestProjectingParent();\n                if (this.relativeParent &&\n                    Boolean(this.relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !this.relativeParent.options.layoutScroll &&\n                    this.relativeParent.target) {\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, this.relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n            }\n        };\n        ProjectionNode.prototype.getClosestProjectingParent = function () {\n            if (!this.parent || hasTransform(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        };\n        ProjectionNode.prototype.calcProjection = function () {\n            var _a;\n            var _b = this.options, layout = _b.layout, layoutId = _b.layoutId;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            var lead = this.getLead();\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.actual);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);\n            var target = lead.target;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            var prevTreeScaleX = this.treeScale.x;\n            var prevTreeScaleY = this.treeScale.y;\n            var prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        };\n        ProjectionNode.prototype.hide = function () {\n            this.isVisible = false;\n            // TODO: Schedule render\n        };\n        ProjectionNode.prototype.show = function () {\n            this.isVisible = true;\n            // TODO: Schedule render\n        };\n        ProjectionNode.prototype.scheduleRender = function (notifyAll) {\n            var _a, _b, _c;\n            if (notifyAll === void 0) { notifyAll = true; }\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        };\n        ProjectionNode.prototype.setAnimationOrigin = function (delta, hasOnlyRelativeTargetChanged) {\n            var _this = this;\n            var _a;\n            if (hasOnlyRelativeTargetChanged === void 0) { hasOnlyRelativeTargetChanged = false; }\n            var snapshot = this.snapshot;\n            var snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            var mixedValues = __assign({}, this.latestValues);\n            var targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            var relativeLayout = createBox();\n            var isSharedLayoutAnimation = snapshot === null || snapshot === void 0 ? void 0 : snapshot.isShared;\n            var isOnlyMember = (((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.members.length) || 0) <= 1;\n            var shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = function (latest) {\n                var _a;\n                var progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                _this.setTargetDelta(targetDelta);\n                if (_this.relativeTarget &&\n                    _this.relativeTargetOrigin &&\n                    _this.layout &&\n                    ((_a = _this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, _this.layout.actual, _this.relativeParent.layout.actual);\n                    mixBox(_this.relativeTarget, _this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    _this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, _this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                _this.root.scheduleUpdateProjection();\n                _this.scheduleRender();\n                _this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        };\n        ProjectionNode.prototype.startAnimation = function (options) {\n            var _this = this;\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(function () {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                _this.currentAnimation = animate(0, animationTarget, __assign(__assign({}, options), { onUpdate: function (latest) {\n                        var _a;\n                        _this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    }, onComplete: function () {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        _this.completeAnimation();\n                    } }));\n                if (_this.resumingFrom) {\n                    _this.resumingFrom.currentAnimation = _this.currentAnimation;\n                }\n                _this.pendingAnimation = undefined;\n            });\n        };\n        ProjectionNode.prototype.completeAnimation = function () {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        };\n        ProjectionNode.prototype.finishAnimation = function () {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        };\n        ProjectionNode.prototype.applyTransformsToTarget = function () {\n            var _a = this.getLead(), targetWithTransforms = _a.targetWithTransforms, target = _a.target, layout = _a.layout, latestValues = _a.latestValues;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its actual layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        };\n        ProjectionNode.prototype.registerSharedNode = function (layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            var stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        };\n        ProjectionNode.prototype.isLead = function () {\n            var stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        };\n        ProjectionNode.prototype.getLead = function () {\n            var _a;\n            var layoutId = this.options.layoutId;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        };\n        ProjectionNode.prototype.getPrevLead = function () {\n            var _a;\n            var layoutId = this.options.layoutId;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        };\n        ProjectionNode.prototype.getStack = function () {\n            var layoutId = this.options.layoutId;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        };\n        ProjectionNode.prototype.promote = function (_a) {\n            var _b = _a === void 0 ? {} : _a, needsReset = _b.needsReset, transition = _b.transition, preserveFollowOpacity = _b.preserveFollowOpacity;\n            var stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition: transition });\n        };\n        ProjectionNode.prototype.relegate = function () {\n            var stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        };\n        ProjectionNode.prototype.resetRotation = function () {\n            var visualElement = this.options.visualElement;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            var hasRotate = false;\n            // Keep a record of all the values we've reset\n            var resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (var i = 0; i < transformAxes.length; i++) {\n                var axis = transformAxes[i];\n                var key = \"rotate\" + axis;\n                // If this rotation doesn't exist as a motion value, then we don't\n                // need to reset it\n                if (!visualElement.getStaticValue(key)) {\n                    continue;\n                }\n                hasRotate = true;\n                // Record the rotation and then temporarily set it to 0\n                resetValues[key] = visualElement.getStaticValue(key);\n                visualElement.setStaticValue(key, 0);\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender();\n            // Put back all the values we reset\n            for (var key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        };\n        ProjectionNode.prototype.getProjectionStyles = function (styleProp) {\n            var _a, _b, _c, _d, _e, _f;\n            if (styleProp === void 0) { styleProp = {}; }\n            // TODO: Return lifecycle-persistent object\n            var styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            var transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            var lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                var emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity = (_b = this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            var valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            var _g = this.projectionDelta, x = _g.x, y = _g.y;\n            styles.transformOrigin = \"\".concat(x.origin * 100, \"% \").concat(y.origin * 100, \"% 0\");\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_d = (_c = valuesToRender.opacity) !== null && _c !== void 0 ? _c : this.latestValues.opacity) !== null && _d !== void 0 ? _d : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its actual\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_e = valuesToRender.opacity) !== null && _e !== void 0 ? _e : \"\"\n                        : (_f = valuesToRender.opacityExit) !== null && _f !== void 0 ? _f : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (var key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                var _h = scaleCorrectors[key], correct = _h.correct, applyTo = _h.applyTo;\n                var corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    var num = applyTo.length;\n                    for (var i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        };\n        ProjectionNode.prototype.clearSnapshot = function () {\n            this.resumeFrom = this.snapshot = undefined;\n        };\n        // Only run on root\n        ProjectionNode.prototype.resetTree = function () {\n            this.root.nodes.forEach(function (node) { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        };\n        return ProjectionNode;\n    }());\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c, _d;\n    var snapshot = (_b = (_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) !== null && _b !== void 0 ? _b : node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        var _e = node.layout, layout_1 = _e.actual, measuredLayout = _e.measured;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (node.options.animationType === \"size\") {\n            eachAxis(function (axis) {\n                var axisSnapshot = snapshot.isShared\n                    ? snapshot.measured[axis]\n                    : snapshot.layout[axis];\n                var length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout_1[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (node.options.animationType === \"position\") {\n            eachAxis(function (axis) {\n                var axisSnapshot = snapshot.isShared\n                    ? snapshot.measured[axis]\n                    : snapshot.layout[axis];\n                var length = calcLength(layout_1[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        var layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout_1, snapshot.layout);\n        var visualDelta = createDelta();\n        if (snapshot.isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measured);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout_1, snapshot.layout);\n        }\n        var hasLayoutChanged = !isDeltaZero(layoutDelta);\n        var hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            node.relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (node.relativeParent && !node.relativeParent.resumeFrom) {\n                var _f = node.relativeParent, parentSnapshot = _f.snapshot, parentLayout = _f.layout;\n                if (parentSnapshot && parentLayout) {\n                    var relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layout, parentSnapshot.layout);\n                    var relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout_1, parentLayout.actual);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout: layout_1,\n            snapshot: snapshot,\n            delta: visualDelta,\n            layoutDelta: layoutDelta,\n            hasLayoutChanged: hasLayoutChanged,\n            hasRelativeTargetChanged: hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_d = (_c = node.options).onExitComplete) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    var visualElement = node.options.visualElement;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notifyBeforeLayoutMeasure();\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nvar defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, id) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    var searchNode = node.root;\n    for (var i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    var searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    var element = searchElement.querySelector(\"[data-projection-id=\\\"\".concat(id, \"\\\"]\"));\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox };\n","import { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { startAnimation } from './utils/transitions.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition) {\n    if (transition === void 0) { transition = {}; }\n    var value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: function () { return value.stop(); },\n        isAnimating: function () { return value.isAnimating(); },\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nvar DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: function (ref, notify) { return addDomEvent(ref, \"resize\", notify); },\n    measureScroll: function () { return ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }); },\n    checkIsScrollRoot: function () { return true; },\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nvar rootProjectionNode = {\n    current: undefined,\n};\nvar HTMLProjectionNode = createProjectionNode({\n    measureScroll: function (instance) { return ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }); },\n    defaultParent: function () {\n        if (!rootProjectionNode.current) {\n            var documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: function (instance, value) {\n        instance.style.transform = value !== null && value !== void 0 ? value : \"none\";\n    },\n    checkIsScrollRoot: function (instance) {\n        return Boolean(window.getComputedStyle(instance).position === \"fixed\");\n    },\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { __assign } from 'tslib';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { domAnimation } from './features-animation.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\n/**\n * @public\n */\nvar domMax = __assign(__assign(__assign(__assign({}, domAnimation), drag), layoutFeatures), { projectionNodeConstructor: HTMLProjectionNode });\n\nexport { domMax };\n"],"names":["isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","defaultPagePoint","pageX","pageY","pointFromTouch","e","pointType","point","changedTouches","x","y","pointFromMouse","extractEventInfo","wrapHandler","handler","shouldFilterPrimaryPointer","eventHandler","listener","button","addDomEvent","target","eventName","options","passive","addEventListener","removeEventListener","useDomEvent","ref","useEffect","element","current","supportsPointerEvents","isBrowser","window","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","name","addPointerEvent","usePointerEvent","isPoint","hasOwnProperty","isPoint3D","distance1D","a","b","Math","abs","distance","isNum","xDelta","yDelta","zDelta","z","sqrt","pow","PanSession","handlers","_a","_this","this","transformPagePoint","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","offset","timestamp","getFrameData","push","__assign","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","sync","end","onEnd","onSessionEnd","panInfo","length","initialInfo","onSessionStart","removeListeners","pipe","prototype","updateHandlers","cancelSync","subtractPoint","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","secondsToMilliseconds","time","currentVelocity","Infinity","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal_1","openVertical_1","isDragActive","openGestureLock","calcLength","axis","max","min","isNear","value","maxDistance","calcAxisDelta","source","origin","originPoint","mix","scale","isNaN","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","parent","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","undefined","calcViewportAxisConstraints","layoutAxis","constraintsAxis","__read","AnimationType","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","callback","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","values","hasTranslate","rotate","rotateX","rotateY","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","translateAxis","transformAxis","transforms","_b","key","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","transform","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","elementDragControls","WeakMap","VisualElementDragControls","visualElement","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","start","originEvent","_c","snapToCursor","isPresent","panSession","stopAnimation","getProps","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","get","percent","measuredAxis","actual","parseFloat","animationState","setActive","Drag","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","direction","getCurrentDirection","updateAxis","syncRender","stop","getTransformPagePoint","cancel","startAnimation","onDragEnd","_point","shouldDrag","axisValue","next","applyConstraints","set","dragConstraints","prevConstraints","isRefObject","resolveRefConstraints","layoutBox","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","invariant","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","transition","bounceStiffness","bounceDamping","inertia","type","timeConstant","restDelta","restSpeed","startAxisValueAnimation","Promise","all","then","dragKey","toUpperCase","externalMotionValue","getValue","initial","scalePositionWithinConstraints","boxProgress","latest","sourceLength","targetLength","progress","clamp","calcOrigin","transformTemplate","getInstance","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","hasLayoutChanged","motionValue","props","_d","_e","_f","useUnmountEffect","makeRenderlessComponent","hook","pan","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","useRef","useContext","MotionConfigContext","groupDragControls","dragControls","useConstant","subscribe","counter","incrementId","useId","usePresence","context","PresenceContext","onExitComplete","register","id","pixelsToPercent","pixels","correctBorderRadius","correct","node","px","concat","isCSSVariable","startsWith","cssVariableRegex","maxDepth","getVariableValue","depth","match","exec","parseCSSVariable","token","fallback","resolved","getComputedStyle","getPropertyValue","trim","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","includes","cssVariables","replace","shadow","complex","template","xScale","yScale","averageScale","output","i_1","cssVariable","MeasureLayoutWithContext","_super","apply","arguments","__extends","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","add","didUpdate","safeToRemove","setOptions","globalProjectionState","getSnapshotBeforeUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","render","React__default","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","measureLayout","LayoutGroupContext","SwitchLayoutGroupContext","shallowCompare","prev","Array","isArray","prevLength","variantPriorityOrder","Animate","InView","Focus","Hover","Tap","Exit","reversePriorityOrder","__spreadArray","reverse","numAnimationTypes","createAnimationState","animate","animations","map","animation","animateVisualElement","animateList","state","createTypeState","createState","allAnimatedKeys","isInitialRender","buildResolvedTypeValues","acc","definition","resolveVariant","transitionEnd","__rest","animateChanges","changedActiveType","getVariantContext","removedKeys","Set","encounteredKeys","removedVariantIndex","_loop_1","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","protectedKeys","prevProp","isAnimationControls","variantDidChange","isVariantLabels","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","delete","needsAnimating","isKeyframesTarget","has","blockInitialAnimation","size","fallbackAnimation_1","forEach","fallbackTarget","getBaseTarget","shouldAnimate","Boolean","resolve","isAnimated","variantChildren","child","setAnimateFunction","makeAnimator","getState","exit","custom","presenceContext","createHoverEvent","isNodeOrChild","parentElement","warned","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","some","useIntersectionObserver","shouldObserve","rootMargin","margin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","message","env","console","warn","requestAnimationFrame","gestureAnimations","inView","whileInView","viewport","tap","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","call","checkPointerEnd","onPointerUp","onPointerCancel","focus","whileFocus","hover","onHoverStart","onHoverEnd","whileHover","names","BoundingBoxDimension","treeType","build","makeTargetAnimatable","renderInstance","readValueFromInstance","removeValueFromRenderState","sortNodePosition","scrapeMotionValuesFromProps","presenceId","visualState","shouldReduceMotion","removeFromVariantTree","isMounted","latestValues","renderState","lifecycles","managers","SubscriptionManager","propSubscriptions","clearAllListeners","manager","clear","updatePropListeners","on","propListener","args","_i","notify","createLifecycles","Map","valueSubscriptions","prevMotionValues","baseTarget","triggerBuild","update","notifyUpdate","bindToMotionValue","removeOnChange","onChange","latestValue","onUpdate","removeOnRenderRequest","onRenderRequest","scheduleRender","initialMotionValues","isMotionValue","isControllingVariants","checkIfControllingVariants","isVariantNode","checkIfVariantNode","children","isVisible","mount","newInstance","addVariantChild","setProps","unmount","closestVariantNode","getClosestVariantNode","other","getLayoutId","getStaticValue","setStaticValue","getLatestValues","setVisibility","visibility","canMutate","addValue","hasValue","removeValue","defaultValue","forEachValue","readValue","setBaseTarget","newProps","nextValue","prevValue","existingValue","hasAnimated","updateMotionValuesFromProps","getVariant","variants","getDefaultTransition","startAtParent","context_1","numVariantProps","name_1","variantProps","positionalKeys","isPositionalKey","hasPositionalKey","Object","keys","setAndResetVelocity","to","isNumOrPxType","v","number","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformProps","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","checkAndConvertChangedValueTypes","targetPositionalKeys","filter","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","from","fromType","findDimensionValueType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY_1","indexOf","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","targetBbox","convertChangedValueTypes","scrollTo","parseDomVariant","Element","resolveCSSVariables","unitConversion","htmlConfig","domElement","isTransformProp","defaultType","getDefaultValueType","default","computedStyle","compareDocumentPosition","resetTransform","restoreTransform","mutableState","vars","transformValues","getOrigin","checkTargetForNewValues","parsed","buildHTMLStyles","renderHTML","htmlVisualElement","svgVisualElement","camelCaseAttributes","camelToDash","getAttribute","_element","buildSVGAttrs","renderSVG","domAnimation","renderer","Component","isSVGComponent","enableHardwareAcceleration","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","circOut","easeCrossfadeOut","linear","easing","p","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","NodeStack","addUniqueItem","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isShared","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","identityProjection","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","sort","animationTarget","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","ProjectionNode","isTreeAnimating","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","resolveTargetDelta","calcProjection","hasProjected","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","unblockTimeout_1","resizeUnblockUpdate_1","clearTimeout","setTimeout","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_g","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","getValueTransition","onPlay","onComplete","delay","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measured","measure","removeTransform","removeElementScroll","roundBox","alwaysMeasureLayout","prevLayout","layoutCorrected","notifyLayoutMeasure","layoutScroll","isScrollRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","boxWithoutScroll","scroll_1","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","attemptToResolveRelativeTarget","pendingAnimation","getLead","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","applyTransformsToTarget","initialPromotionConfig","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","transformAxes","getProjectionStyles","styleProp","styles","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","transformOrigin","scaleCorrectors","_h","corrected","num","resetTree","layout_1","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","notifyBeforeLayoutMeasure","duration","ease","searchNode","querySelector","roundAxis","round","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","domMax","projectionNodeConstructor"],"sourceRoot":""}
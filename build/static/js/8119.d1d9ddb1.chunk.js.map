{"version":3,"file":"static/js/8119.d1d9ddb1.chunk.js","mappings":"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","sources":["components/app/LimitInvestAgree.js","components/upload/SingleInputFile.js","sections/@dashboard/profile/account/BasicInformation.js","sections/@dashboard/profile/account/BusinessInformation.js","sections/@dashboard/profile/account/InvestorInformation.js","sections/@dashboard/profile/PersonalInformation.js","sections/@dashboard/profile/Apperence.js","sections/@dashboard/profile/ChangeNotification.js","sections/@dashboard/profile/ChangeTimezone.js","sections/@dashboard/profile/TermAndCondition.js","sections/@dashboard/profile/ChangePassword.js","sections/@dashboard/profile/OrderHistory.js","sections/@dashboard/profile/LimitInvest.js","sections/@dashboard/profile/AccountAccess.js","sections/@dashboard/profile/InvestorProfile.js","pages/dashboard/Profile.js","utils/formatTime.js"],"sourcesContent":["import { Checkbox, FormControl, FormControlLabel, Paper, Radio, RadioGroup, Stack, TextField, Typography } from \"@mui/material\";\r\nimport { forwardRef, useImperativeHandle, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport useLocales from \"../../hooks/useLocales\";\r\nimport { FormProvider, RHFRadioGroup, RHFTextField } from \"../hook-form\";\r\nimport Iconify from \"../Iconify\";\r\n\r\n\r\nfunction _LimitInvestAgree(props, ref) {\r\n    const { translate } = useLocales();\r\n    const [pageState, setPageState] = useState({\r\n        investMode: 0,\r\n        gross: 0,\r\n        investOtherCheck: true,\r\n        investOtherAmount: 0,\r\n        declareCheck: false,\r\n    });\r\n    const getPageState = () => pageState;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        getPageState,\r\n\r\n    }));\r\n    return (\r\n\r\n        <Paper>\r\n            <Stack gap={4} padding={2}>\r\n                <Stack >\r\n                    <Typography variant=\"subtitle1\">{translate('profile.invest-limit')}</Typography>\r\n                    <Typography variant=\"body2\">{translate('profile.invest-limit-title')}</Typography>\r\n                </Stack>\r\n                <Stack gap={2}>\r\n                    <Typography variant=\"body2\" sx={{ mb: 2 }}>{translate('profile.invest-limit-desc')}</Typography>\r\n                    <RadioGroup value={pageState.investMode} onChange={(evt, nv) => setPageState({ ...pageState, investMode: nv })}>\r\n                        <FormControlLabel sx={{ mb: 1 }} control={<Radio value={0} />} label={translate('profile.invest-mode-0')} />\r\n\r\n                        <FormControlLabel sx={{ mb: 1 }} control={<Radio value={1} />} label={translate('profile.invest-mode-1')} />\r\n                        {`${pageState.investMode}` === `1` &&\r\n                            <Stack ml={2}>\r\n                                <Typography variant=\"body2\">{translate('profile.invest-mode-1-label')}</Typography>\r\n                                <TextField value={pageState.gross} onChange={(evt) => setPageState({ ...pageState, gross: evt.target.value })} />\r\n                                <Typography sx={{ alignItems: 'center', display: 'flex', mb: 2 }}><Iconify icon=\"mdi:information-variant-circle-outline\" />{translate('profile.invest-limit-gross-desc')}</Typography>\r\n                            </Stack>\r\n                        }\r\n\r\n                        <FormControlLabel control={<Radio value={2} />} mb={1} label={translate('profile.invest-mode-2')} />\r\n\r\n                    </RadioGroup>\r\n                    <FormControlLabel label={translate('profile.invest-other')} control={<Checkbox checked={pageState.investOtherCheck} />} value={pageState.investOtherCheck} onChange={(evt) => setPageState({ ...pageState, investOtherCheck: evt.target.checked })} />\r\n                    {pageState.investOtherCheck &&\r\n                        <Stack ml={2}>\r\n                            <Typography variant=\"body2\">{translate('profile.invest-other-label')}</Typography>\r\n                            <TextField value={pageState.investOtherAmount} onChange={(evt) => setPageState({ ...pageState, investOtherAmount: evt.target.value })} sx={{ mb: 2 }} />\r\n\r\n                        </Stack>\r\n                    }\r\n                    <Stack>\r\n                        <Typography variant=\"subtitle2\" sx={{ mb: 2 }}>{translate('profile.invest-limit-footer-1')}</Typography>\r\n                        <Typography variant=\"subtitle2\" sx={{ mb: 2 }}>{translate('profile.invest-limit-footer-2')}</Typography>\r\n                    </Stack>\r\n                    <FormControlLabel label={translate('profile.invest-declare')} control={<Checkbox checked={pageState.declareCheck} />} value={pageState.declareCheck} onChange={(evt) => setPageState({ ...pageState, declareCheck: evt.target.checked })} sx={{ mb: 2 }} />\r\n                    {props.children}\r\n                </Stack>\r\n            </Stack>\r\n        </Paper >\r\n\r\n    )\r\n}\r\n\r\nconst LimitInvestAgree = forwardRef(_LimitInvestAgree);\r\n\r\nexport default LimitInvestAgree;","import { Icon } from \"@iconify/react\";\r\nimport { useState } from \"react\";\r\nimport { Button, Stack, Typography, useTheme } from \"@mui/material\";\r\n\r\n\r\nexport default function SingleInputFile() {\r\n    const theme = useTheme();\r\n    const [selectedFile, setSelectedFile] = useState('');\r\n    const backgroundColor = theme.palette.mode === 'light' ? 'grey.200' : 'grey.800';\r\n    return (\r\n        <Stack borderRadius={1} border={1} borderColor=\"text.secondary\"\r\n            direction=\"row\"\r\n        >\r\n            <Button component=\"label\"\r\n                sx={{ backgroundColor,color:\"text.secondary\",paddingX:4 }}\r\n                \r\n            >\r\n                <Icon icon=\"material-symbols:attach-file-add\" />\r\n                <Typography >Upload File</Typography>\r\n\r\n                <input type=\"file\" hidden />\r\n            </Button>\r\n            <Typography>\r\n                {selectedFile}\r\n            </Typography>\r\n\r\n        </Stack>\r\n    )\r\n}","import { useMemo, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Accordion, AccordionDetails, AccordionSummary, Button, FormGroup, FormLabel, Grid, Input, OutlinedInput, Stack, Typography, useTheme } from \"@mui/material\";\r\nimport { useForm } from 'react-hook-form';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n\r\nimport { FormProvider, RHFSelect, RHFSwitch, RHFTextField, RHFUploadAvatar } from \"../../../../components/hook-form\";\r\nimport useAuth from '../../../../hooks/useAuth';\r\nimport SingleInputFile from '../../../../components/upload/SingleInputFile';\r\nimport useLocales from '../../../../hooks/useLocales';\r\nimport { GradientButtonStyle } from '../../../../components/AppStyledComponent';\r\n\r\n\r\nexport default function BasicInformation() {\r\n    const { user } = useAuth();\r\n    const [expanded, setExpanded] = useState('panel1');\r\n    const theme = useTheme();\r\n\r\n    const { translate } = useLocales();\r\n    const [birthday, setBirthday] = useState(new Date());\r\n    const FormSchema = Yup.object().shape({\r\n        fullname: Yup.string().required('Fullname is required'),\r\n    });\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    const defaultValues = useMemo(() => {\r\n        return {\r\n            fullname: user?.fullname || '',\r\n            email: user?.email || '',\r\n            avatar: user?.avatar || '',\r\n            cpf: '',\r\n            phone: '',\r\n\r\n        }\r\n    }, [user]);\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(FormSchema),\r\n        defaultValues,\r\n    });\r\n\r\n    const {\r\n        reset,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { errors, isSubmitting },\r\n    } = methods;\r\n\r\n    const onSubmit = async (data) => {\r\n        console.log(data);\r\n    };\r\n    return (\r\n        <Stack spacing={2}>\r\n            <FormProvider methods={methods}>\r\n                <Accordion onChange={ handleChange(\"panel1\")} expanded={expanded === 'panel1'}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Stack>\r\n                            <Typography variant=\"h6\">\r\n                                Personal Information\r\n                            </Typography>\r\n                            <Typography>You can add or update your personal information</Typography>\r\n                        </Stack>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        {/* basic */}\r\n                        <Stack gap={1} mb={2}>\r\n                            <RHFUploadAvatar name=\"avatar\" />\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>FullName</FormLabel>\r\n                                        <RHFTextField name=\"fullname\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>CPF</FormLabel>\r\n                                        <RHFTextField name=\"cpf\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>Birthday</FormLabel>\r\n                                        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                            <DatePicker renderInput={(props) => (<OutlinedInput\r\n                                                size='small'\r\n                                                type=\"text\"\r\n                                                inputRef={props.inputRef}\r\n                                                inputProps={props.inputProps}\r\n                                                value={props.value}\r\n                                                onClick={props.onClick}\r\n                                                onChange={props.onChange}\r\n                                                endAdornment={props.InputProps?.endAdornment}\r\n                                            />)} value={birthday} onChange={(newValue) => setBirthday(newValue)} />\r\n                                        </LocalizationProvider>\r\n\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>Gender</FormLabel>\r\n                                        <RHFSelect name=\"gender\" size=\"small\">\r\n                                            <option>Male</option>\r\n                                            <option>Female</option>\r\n                                        </RHFSelect>\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>Phone</FormLabel>\r\n                                        <RHFTextField name=\"phone\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>Email</FormLabel>\r\n                                        <RHFTextField name=\"email\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>Document Type</FormLabel>\r\n                                        <RHFSelect name=\"documentType\" size=\"small\">\r\n                                            <option>Select document type</option>\r\n                                        </RHFSelect>\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>Document Number</FormLabel>\r\n                                        <RHFTextField name=\"documentNumber\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>Political Exposure</FormLabel>\r\n                                        <RHFSelect name=\"political\" size=\"small\">\r\n                                            <option>Select document type</option>\r\n                                        </RHFSelect>\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>Attach File of Document</FormLabel>\r\n                                        <SingleInputFile />\r\n                                        <Typography variant='caption'>Please upload the required file to identify verification of payment (tax) information. Images (JPG/JPEG/PNG) or PDF, max. from 5mb file</Typography>\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>Selfie Holding Document Next to Face</FormLabel>\r\n                                        <SingleInputFile />\r\n                                        <Typography variant='caption'>Please upload the required file to identify verification of payment (tax) information. Images (JPG/JPEG/PNG) or PDF, max. from 5mb file</Typography>\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>Mother’s Name</FormLabel>\r\n                                        <RHFTextField name=\"mother\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>Father’s Name (Optional)</FormLabel>\r\n                                        <RHFTextField name=\"father\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>Nationality</FormLabel>\r\n                                        <RHFSelect name=\"national\" size=\"small\">\r\n                                            <option>select your nationality</option>\r\n\r\n                                        </RHFSelect>\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>Naturality</FormLabel>\r\n                                        <RHFSelect name=\"natural\" size=\"small\">\r\n                                            <option>Yes</option>\r\n                                            <option>No</option>\r\n                                        </RHFSelect>\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>Marital Status</FormLabel>\r\n                                        <RHFSelect name=\"marry\" size=\"small\">\r\n                                            <option>Before</option>\r\n                                            <option>Yes</option>\r\n                                            <option>Alone</option>\r\n\r\n                                        </RHFSelect>\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Stack>\r\n                        {/* address */}\r\n                        <Stack gap={1} mb={2}>\r\n                            <Typography variant='h6'>{translate('t.address')}</Typography>\r\n                            <Typography variant=\"caption\">{translate('t.Record information related to your residence.')}</Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.CEP')}</FormLabel>\r\n                                        <RHFTextField name=\"cep\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.UF')}</FormLabel>\r\n                                        <RHFTextField name=\"uf\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.City')}</FormLabel>\r\n                                        <RHFTextField name=\"city\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Public Place')}</FormLabel>\r\n                                        <RHFTextField name=\"place\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.District')}</FormLabel>\r\n                                        <RHFTextField name=\"district\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Number')}</FormLabel>\r\n                                        <RHFTextField name=\"number\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Stack>\r\n\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion onChange={ handleChange(\"panel2\")} expanded={expanded === 'panel2'}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Stack>\r\n                            <Typography variant=\"h6\">\r\n                                {translate('t.Additional Information')}\r\n                            </Typography>\r\n                            <Typography>{translate('t.Income statement and bank details')}</Typography>\r\n                        </Stack>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n\r\n                        {/* address */}\r\n                        <Stack gap={1} mb={2}>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Professional Occupation')}</FormLabel>\r\n                                        <RHFTextField name=\"occupation\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Employer CNPJ (Optional)')}</FormLabel>\r\n                                        <RHFTextField name=\"cnpj\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate(\"t.Employer's Corporate Name (Optional)\")}</FormLabel>\r\n                                        <RHFTextField name=\"ecn\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Annual Income')}</FormLabel>\r\n                                        <RHFTextField name=\"annualIncome\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Book Value')}</FormLabel>\r\n                                        <RHFTextField name=\"bookValue\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Stack>\r\n\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion onChange={ handleChange(\"panel3\")} expanded={expanded === 'panel3'}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Stack>\r\n                            <Typography variant=\"h6\">\r\n                                {translate('t.Bank Data')}\r\n                            </Typography>\r\n                            <Typography>{translate('t.Enter your bank details')}</Typography>\r\n                        </Stack>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n\r\n                        {/* address */}\r\n                        <Stack gap={1} mb={2}>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} md={6} lg={3} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Bank')}</FormLabel>\r\n                                        <RHFSelect name=\"bank\" label=\"\" size=\"small\" >\r\n                                            <option>Bank - 1</option>\r\n                                        </RHFSelect>\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} lg={3} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Agency')}</FormLabel>\r\n                                        <RHFTextField name=\"bankAgency\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate(\"t.Current Account\")}</FormLabel>\r\n                                        <RHFTextField name=\"bankAccount\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Digit')}</FormLabel>\r\n                                        <RHFTextField name=\"bankNumber\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Stack>\r\n\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n\r\n            </FormProvider>\r\n            <Stack direction={'row'} justifyContent={'space-between'} gap={1}>\r\n                <Button variant='outlined' sx={{ flexGrow: 1, backgroundColor: 'paper' }}>{translate('words.cancle')}</Button>\r\n                <GradientButtonStyle sx={{ flexGrow: 1 }} >{translate('words.save')}</GradientButtonStyle>\r\n            </Stack>\r\n        </Stack>\r\n    )\r\n}","import { useMemo, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Accordion, AccordionDetails, AccordionSummary, Button, FormGroup, FormLabel, Grid, Input, OutlinedInput, Stack, Typography, useTheme } from \"@mui/material\";\r\nimport { useForm } from 'react-hook-form';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n\r\nimport { FormProvider, RHFCheckbox, RHFSelect, RHFSwitch, RHFTextField, RHFUploadAvatar } from \"../../../../components/hook-form\";\r\nimport useAuth from '../../../../hooks/useAuth';\r\nimport SingleInputFile from '../../../../components/upload/SingleInputFile';\r\nimport useLocales from '../../../../hooks/useLocales';\r\nimport { GradientButtonStyle } from '../../../../components/AppStyledComponent';\r\n\r\n\r\nexport default function BusinessInformation() {\r\n    const { user } = useAuth();\r\n    const [expanded, setExpanded] = useState('panel1');\r\n    const theme = useTheme();\r\n\r\n    const { translate } = useLocales();\r\n    const [incorporationDate, setIncorporationDate] = useState(new Date());\r\n    const FormSchema = Yup.object().shape({\r\n        coporateName: Yup.string().required('Fullname is required'),\r\n    });\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    const defaultValues = useMemo(() => {\r\n        return {\r\n            coporateName: user?.coporateName || '',\r\n            cnpj: user?.cnpj || '',\r\n            cname: user?.cname || '',\r\n            officeAddress: '',\r\n            officeCEP: '',\r\n            checkedOption1: true,\r\n            checkedOption2: false,\r\n            checkedOption3: false,\r\n            checkedOption4: true,\r\n\r\n        }\r\n    }, [user]);\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(FormSchema),\r\n        defaultValues,\r\n    });\r\n\r\n    const {\r\n        reset,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { errors, isSubmitting },\r\n    } = methods;\r\n\r\n    const onSubmit = async (data) => {\r\n        console.log(data);\r\n    };\r\n    return (\r\n        <Stack spacing={2}>\r\n            <FormProvider methods={methods}>\r\n                <Accordion onChange={handleChange(\"panel1\")} expanded={expanded === 'panel1'}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Stack>\r\n                            <Typography variant=\"h6\">\r\n                                Personal Information\r\n                            </Typography>\r\n                            <Typography>Identification data for legal person registration form.</Typography>\r\n                        </Stack>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        {/* basic */}\r\n                        <Stack gap={1} mb={2}>\r\n                            <RHFUploadAvatar name=\"avatar\" />\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Corporate Name')}</FormLabel>\r\n                                        <RHFTextField name=\"corporateName\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.CNPJ')}</FormLabel>\r\n                                        <RHFTextField name=\"cnpj\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.CNAE')}</FormLabel>\r\n                                        <RHFTextField name=\"cnae\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Head Office Address')}</FormLabel>\r\n                                        <RHFTextField name=\"officeAddress\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Head Office CEP')}</FormLabel>\r\n                                        <RHFTextField name=\"officeCep\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Head Office District')}</FormLabel>\r\n                                        <RHFTextField name=\"officeCep\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Head Office City')}</FormLabel>\r\n                                        <RHFTextField name=\"officeCity\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Contact Number')}</FormLabel>\r\n                                        <RHFTextField name=\"contactNumber\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Email')}</FormLabel>\r\n                                        <RHFTextField name=\"email\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Revenue For the Last 12 (Twelve) Months')}</FormLabel>\r\n                                        <RHFTextField name=\"revenue\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Equity Situation')}</FormLabel>\r\n                                        <RHFTextField name=\"equity\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Date of Incorporation of the Company')}</FormLabel>\r\n                                        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                            <DatePicker renderInput={(props) => (<OutlinedInput\r\n                                                size='small'\r\n                                                type=\"text\"\r\n                                                inputRef={props.inputRef}\r\n                                                inputProps={props.inputProps}\r\n                                                value={props.value}\r\n                                                onClick={props.onClick}\r\n                                                onChange={props.onChange}\r\n                                                endAdornment={props.InputProps?.endAdornment}\r\n                                            />)} value={incorporationDate} onChange={(newValue) => setIncorporationDate(newValue)} />\r\n                                        </LocalizationProvider>\r\n\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>Corporate Type</FormLabel>\r\n                                        <RHFSelect name=\"corporationType\" size=\"small\">\r\n                                            <option>Select corporation type</option>\r\n                                        </RHFSelect>\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>Email</FormLabel>\r\n                                        <RHFTextField name=\"email\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Attach Photo of Company Incorporation Document or CNPJ Card')}</FormLabel>\r\n                                        <SingleInputFile />\r\n                                        <Typography variant='caption'>Please upload the required file to identify verification of payment (tax) information. Images (JPG/JPEG/PNG) or PDF, max. from 5mb file</Typography>\r\n                                    </FormGroup>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={12} md={12} padding={1}>\r\n                                    <FormGroup>\r\n                                        <RHFCheckbox name=\"checkedOption1\" label={translate('t.I declare that I have the corporate minutes of the administrators (Optional)')} />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} padding={1}>\r\n                                    <FormGroup>\r\n                                        <RHFCheckbox name=\"checkedOption2\" label={translate('t.I declare that I have the corporate minutes of the administrators (Optional)')} />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} padding={1}>\r\n                                    <FormGroup>\r\n                                        <RHFCheckbox name=\"checkedOption3\" label={translate('t.I declare that I have the corporate minutes of the administrators (Optional)')} />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} padding={1}>\r\n                                    <FormGroup>\r\n                                        <RHFCheckbox name=\"checkedOption4\" label={translate('t.I declare that I have the corporate minutes of the administrators (Optional)')} />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Stack>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <Accordion onChange={handleChange(\"panel2\")} expanded={expanded === 'panel2'}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Stack>\r\n                            <Typography variant=\"h6\">\r\n                                {translate('t.Bank Data')}\r\n                            </Typography>\r\n                            <Typography>{translate('t.Enter your bank details')}</Typography>\r\n                        </Stack>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n\r\n                        {/* address */}\r\n                        <Stack gap={1} mb={2}>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} md={6}padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Bank')}</FormLabel>\r\n                                        <RHFSelect name=\"bank\" label=\"\" size=\"small\" >\r\n                                            <option>Bank - 1</option>\r\n                                        </RHFSelect>\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6}padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Agency')}</FormLabel>\r\n                                        <RHFTextField name=\"bankAgency\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate(\"t.Current Account\")}</FormLabel>\r\n                                        <RHFTextField name=\"bankAccount\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Digit')}</FormLabel>\r\n                                        <RHFTextField name=\"bankNumber\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Stack>\r\n\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion onChange={handleChange(\"panel3\")} expanded={expanded === 'panel3'}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Stack>\r\n                            <Typography variant=\"h6\">\r\n                                {translate('t.Beneficiaries')}\r\n                            </Typography>\r\n                            <Typography>{translate('t.Final beneficiaries of the legal person.')}</Typography>\r\n                        </Stack>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n\r\n                        {/* beneficiary */}\r\n                        <Stack gap={1} mb={2}>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Full Name/Corporate Name')}</FormLabel>\r\n                                        <RHFTextField name=\"corporateName\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6}padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.CPF/CNPJ')}</FormLabel>\r\n                                        <RHFTextField name=\"bankAgency\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate(\"t.Corporate Name\")}</FormLabel>\r\n                                        <RHFTextField name=\"bankAccount\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.CNPJ')}</FormLabel>\r\n                                        <RHFTextField name=\"bankNumber\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Participation Percentage (%)')}</FormLabel>\r\n                                        <RHFTextField name=\"bankNumber\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Political Exposure')}</FormLabel>\r\n                                        <RHFTextField name=\"bankNumber\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Stack>\r\n\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </FormProvider>\r\n            <Stack direction={'row'} justifyContent={'space-between'} gap={1}>\r\n                <Button variant='outlined' sx={{ flexGrow: 1, backgroundColor: 'paper' }}>{translate('words.cancle')}</Button>\r\n                <GradientButtonStyle sx={{ flexGrow: 1 }} >{translate('words.save')}</GradientButtonStyle>\r\n            </Stack>\r\n        </Stack>\r\n    )\r\n}","import { useMemo, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Accordion, AccordionDetails, AccordionSummary, Button, FormGroup, FormLabel, Grid, Input, OutlinedInput, Stack, Typography, useTheme } from \"@mui/material\";\r\nimport { useForm } from 'react-hook-form';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n\r\nimport { FormProvider, RHFSelect, RHFSwitch, RHFTextField, RHFUploadAvatar } from \"../../../../components/hook-form\";\r\nimport useAuth from '../../../../hooks/useAuth';\r\nimport SingleInputFile from '../../../../components/upload/SingleInputFile';\r\nimport useLocales from '../../../../hooks/useLocales';\r\nimport { GradientButtonStyle } from '../../../../components/AppStyledComponent';\r\n\r\n\r\nexport default function InvestorInformation() {\r\n    const { user } = useAuth();\r\n    const [expanded, setExpanded] = useState('panel1');\r\n    const theme = useTheme();\r\n\r\n    const { translate } = useLocales();\r\n    const [birthday, setBirthday] = useState(new Date());\r\n    const FormSchema = Yup.object().shape({\r\n        fullname: Yup.string().required('Fullname is required'),\r\n    });\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    const defaultValues = useMemo(() => {\r\n        return {\r\n            fullname: user?.fullname || '',\r\n            email: user?.email || '',\r\n            avatar: user?.avatar || '',\r\n            cpf: '',\r\n            phone: '',\r\n\r\n        }\r\n    }, [user]);\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(FormSchema),\r\n        defaultValues,\r\n    });\r\n\r\n    const {\r\n        reset,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { errors, isSubmitting },\r\n    } = methods;\r\n\r\n    const onSubmit = async (data) => {\r\n        console.log(data);\r\n    };\r\n    return (\r\n        <Stack spacing={2}>\r\n            <FormProvider methods={methods}>\r\n                <Accordion onChange={handleChange(\"panel1\")} expanded={expanded === 'panel1'}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Stack>\r\n                            <Typography variant=\"h6\">\r\n                                Personal Information\r\n                            </Typography>\r\n                            <Typography>Registration form of investment funds.</Typography>\r\n                        </Stack>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        {/* basic */}\r\n                        <Stack gap={1} mb={2}>\r\n                            <RHFUploadAvatar name=\"avatar\" />\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Corporate Name')}</FormLabel>\r\n                                        <RHFTextField name=\"corporateName\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.CNPJ')}</FormLabel>\r\n                                        <RHFTextField name=\"cnpj\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={4} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Fund Formation Date (Opening)')}</FormLabel>\r\n                                        <RHFTextField name=\"fundFormationDate\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Head Office Address')}</FormLabel>\r\n                                        <RHFTextField name=\"officeAddress\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Head Office CEP')}</FormLabel>\r\n                                        <RHFTextField name=\"officeCep\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Head Office District')}</FormLabel>\r\n                                        <RHFTextField name=\"officeCep\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Head Office City')}</FormLabel>\r\n                                        <RHFTextField name=\"officeCity\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Contact Number')}</FormLabel>\r\n                                        <RHFTextField name=\"contactNumber\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Email')}</FormLabel>\r\n                                        <RHFTextField name=\"email\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Attach file of the investment fund constitution document')}</FormLabel>\r\n                                        <SingleInputFile />\r\n                                        <Typography variant='caption'>Please upload the required file to identify verification of payment (tax) information. Images (JPG/JPEG/PNG) or PDF, max. from 5mb file</Typography>\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Attach file of CNPJ card')}</FormLabel>\r\n                                        <SingleInputFile />\r\n                                        <Typography variant='caption'>Please upload the required file to identify verification of payment (tax) information. Images (JPG/JPEG/PNG) or PDF, max. from 5mb file</Typography>\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Stack>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                {/* bank */}\r\n                <Accordion onChange={handleChange(\"panel2\")} expanded={expanded === 'panel2'}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Stack>\r\n                            <Typography variant=\"h6\">\r\n                                {translate('t.Bank Data')}\r\n                            </Typography>\r\n                            <Typography>{translate('t.Enter your bank details')}</Typography>\r\n                        </Stack>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n\r\n                        {/* address */}\r\n                        <Stack gap={1} mb={2}>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} md={6} lg={3} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Bank')}</FormLabel>\r\n                                        <RHFSelect name=\"bank\" label=\"\" size=\"small\" >\r\n                                            <option>Bank - 1</option>\r\n                                        </RHFSelect>\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} lg={3} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Agency')}</FormLabel>\r\n                                        <RHFTextField name=\"bankAgency\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate(\"t.Current Account\")}</FormLabel>\r\n                                        <RHFTextField name=\"bankAccount\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Digit')}</FormLabel>\r\n                                        <RHFTextField name=\"bankNumber\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Stack>\r\n\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion onChange={handleChange(\"panel3\")} expanded={expanded === 'panel3'}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Stack>\r\n                            <Typography variant=\"h6\">\r\n                                {translate('t.Investors')}\r\n                            </Typography>\r\n                            <Typography>{translate('t.Insert the investor identification data')}</Typography>\r\n                        </Stack>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n\r\n                        {/* Investment Fund Administrator Data */}\r\n\r\n                        <Stack gap={1} mb={2}>\r\n                            <Typography variant='h6'>{translate('t.Investment Fund Administrator Data')}</Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Corporate Name')}</FormLabel>\r\n                                        <RHFTextField name=\"corporationName\" label=\"\" size=\"small\" />\r\n\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.CNPJ')}</FormLabel>\r\n                                        <RHFTextField name=\"cnpj\" label=\"\" size=\"small\" />\r\n\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate(\"t.Administrator Responsible Name\")}</FormLabel>\r\n                                        <RHFTextField name=\"adminResponsibleName\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.RG')}</FormLabel>\r\n                                        <RHFTextField name=\"rg\" label=\"\" size=\"small\" />\r\n\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.CPF')}</FormLabel>\r\n                                        <RHFTextField name=\"cpf\" label=\"\" size=\"small\" />\r\n\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Phone Number of Administrator Responsible')}</FormLabel>\r\n                                        <RHFTextField name=\"adminPhonenumber\" label=\"\" size=\"small\" />\r\n\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Administrator Responsible Email')}</FormLabel>\r\n                                        <RHFTextField name=\"adminEmail\" label=\"\" size=\"small\" />\r\n\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                              \r\n                            </Grid>\r\n                            <Typography variant='h6'>{translate('t.Investment Fund Manager Data')}</Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Corporate Name')}</FormLabel>\r\n                                        <RHFTextField name=\"corporationName\" label=\"\" size=\"small\" />\r\n\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.CNPJ')}</FormLabel>\r\n                                        <RHFTextField name=\"cnpj\" label=\"\" size=\"small\" />\r\n\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate(\"t.Full Name of Manager Responsible\")}</FormLabel>\r\n                                        <RHFTextField name=\"managerName\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.CPF')}</FormLabel>\r\n                                        <RHFTextField name=\"managrCpf\" label=\"\" size=\"small\" />\r\n\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Contact Number of the Person in Charge of the Manager')}</FormLabel>\r\n                                        <RHFTextField name=\"managerPhonenumber\" label=\"\" size=\"small\" />\r\n\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Email of Manager Responsible')}</FormLabel>\r\n                                        <RHFTextField name=\"managerEmail\" label=\"\" size=\"small\" />\r\n\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Typography variant='h6'>{translate('t.Investment Fund Custodian')}</Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Full Name of the Person in Charge of the Custodian')}</FormLabel>\r\n                                        <RHFTextField name=\"corporationName\" label=\"\" size=\"small\" />\r\n\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.CNPJ')}</FormLabel>\r\n                                        <RHFTextField name=\"cnpj\" label=\"\" size=\"small\" />\r\n\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate(\"t.Full Name\")}</FormLabel>\r\n                                        <RHFTextField name=\"adminResponsibleName\" label=\"\" size=\"small\" />\r\n                                    </FormGroup>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.RG of the Person in Charge of the Custodian')}</FormLabel>\r\n                                        <RHFTextField name=\"rg\" label=\"\" size=\"small\" />\r\n\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.CPF of the Person in Charge of the Custodian')}</FormLabel>\r\n                                        <RHFTextField name=\"cpf\" label=\"\" size=\"small\" />\r\n\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Contact Number')}</FormLabel>\r\n                                        <RHFTextField name=\"adminPhonenumber\" label=\"\" size=\"small\" />\r\n\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} padding={1}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{translate('t.Email')}</FormLabel>\r\n                                        <RHFTextField name=\"adminEmail\" label=\"\" size=\"small\" />\r\n\r\n                                    </FormGroup>\r\n\r\n                                </Grid>\r\n                              \r\n                            </Grid>\r\n                        </Stack>\r\n\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </FormProvider>\r\n            <Stack direction={'row'} justifyContent={'space-between'} gap={1}>\r\n                <Button variant='outlined' sx={{ flexGrow: 1, backgroundColor: 'paper' }}>{translate('words.cancle')}</Button>\r\n                <GradientButtonStyle sx={{ flexGrow: 1 }} >{translate('words.save')}</GradientButtonStyle>\r\n            </Stack>\r\n        </Stack>\r\n    )\r\n}","import { Stack } from \"@mui/material\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport BasicInformation from \"./account/BasicInformation\";\r\nimport BusinessInformation from \"./account/BusinessInformation\";\r\nimport InvestorInformation from \"./account/InvestorInformation\";\r\n\r\nexport default function PersonalInformation() {\r\n    const { user, isAuthenticated } = useAuth();\r\n    const dy = Date.now() % 3;\r\n    return (\r\n        <Stack>\r\n            {dy === 0 && <BasicInformation />}\r\n            {dy === 1 && <BusinessInformation />}\r\n            {dy === 2 && <InvestorInformation />}\r\n\r\n        </Stack>\r\n    )\r\n}","import { Button, Card, CardActionArea, CardContent, CardHeader, Divider, FormControlLabel, RadioGroup, Stack, useTheme } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\nimport useSettings from \"../../../hooks/useSettings\";\r\nimport useLocales from \"../../../hooks/useLocales\";\r\nimport { BoxMaskComponent } from \"../../../pages/dashboard/Profile\";\r\nimport Iconify from \"../../../components/Iconify\";\r\nimport { GradientButtonStyle } from \"../../../components/AppStyledComponent\";\r\n\r\nconst AppearenceModeItem = styled(CardActionArea)(({ theme }) => ({\r\n    width: 200,\r\n    position: 'relative',\r\n    height: 148,\r\n    backgroundSize: 'contain',\r\n    padding: 0,\r\n    display: 'flex',\r\n    borderRadius: 8,\r\n}));\r\n\r\n\r\n\r\nexport default function Apperence() {\r\n    const { translate } = useLocales();\r\n    const { themeMode, onChangeMode } = useSettings();\r\n    const theme = useTheme();\r\n    \r\n    const selectedBorder = {\r\n        borderWidth: 2,\r\n        borderRadius: 1,\r\n        borderStyle: 'solid',\r\n\r\n        borderColor: theme.palette.primary.main\r\n    }\r\n\r\n    return (\r\n        <Stack >\r\n            <Card>\r\n                <CardHeader title={translate('profile.system-appearence')} subheader={translate('profile.system-apperence-desc')} />\r\n                <CardContent>\r\n                    <Stack gap={2}>\r\n                        <RadioGroup name=\"themeMode\" value={themeMode} onChange={onChangeMode} sx = {{mb:2}}>\r\n                            <Stack direction={{ xs: 'column', sm: 'row' }} gap={2}>\r\n                                <AppearenceModeItem sx={{ backgroundImage: 'url(/images/light-mode.png)', ...(themeMode === 'light' && selectedBorder) }}>\r\n                                    {themeMode === 'light' &&\r\n                                        <Iconify icon=\"material-symbols:check-circle-outline-rounded\" sx={{ position: 'absolute', borderRadius: '50%', right: -10, top: -10, color: theme.palette.primary.main, bgcolor: theme.palette.background.paper }} width={28} height={28} />\r\n                                    }\r\n                                    <BoxMaskComponent value={'light'} />\r\n                                </AppearenceModeItem>\r\n                                <AppearenceModeItem sx={{ backgroundImage: 'url(/images/dark-mode.png)', ...(themeMode === 'dark' && selectedBorder) }}>\r\n                                    {themeMode === 'dark' &&\r\n                                        <Iconify icon=\"material-symbols:check-circle-outline-rounded\" sx={{ position: 'absolute', borderRadius: '50%', right: -10, top: -10, color: theme.palette.primary.main, bgcolor: theme.palette.background.paper }} width={28} height={28} />\r\n                                    }\r\n                                    <BoxMaskComponent value={'dark'} />\r\n                                </AppearenceModeItem>\r\n                            </Stack>\r\n\r\n                        </RadioGroup>\r\n                        <Divider sx = {{mb:2}}/>\r\n                        <Stack direction=\"row\" gap={2}>\r\n                            <Button sx={{ width: 200 }} variant={'outlined'}>{translate('words.cancle')}</Button>\r\n                            <GradientButtonStyle sx={{ width: 200 }} >{translate('words.save')}</GradientButtonStyle>\r\n                        </Stack>\r\n                    </Stack>\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </Stack>\r\n    )\r\n}","import { Button, Card, CardActionArea, CardContent, CardHeader, Divider, FormControlLabel, Grid, RadioGroup, Stack, Switch, Typography, useTheme } from \"@mui/material\";\r\nimport * as Yup from 'yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport { FormProvider, RHFSwitch, RHFIOSSwitch } from '../../../components/hook-form';\r\nimport useSettings from \"../../../hooks/useSettings\";\r\nimport useLocales from \"../../../hooks/useLocales\";\r\nimport { BoxMaskComponent } from \"../../../pages/dashboard/Profile\";\r\nimport Iconify from \"../../../components/Iconify\";\r\nimport { GradientButtonStyle } from \"../../../components/AppStyledComponent\";\r\n\r\n\r\n\r\nexport default function ChangeNotification() {\r\n    const { translate } = useLocales();\r\n    const { themeMode, onChangeMode } = useSettings();\r\n    const theme = useTheme();\r\n \r\n\r\n    const defaultValues = {\r\n        emailNotification: true,\r\n        investEmailNotification: true,\r\n    };\r\n\r\n    const methods = useForm({\r\n        defaultValues,\r\n\r\n    });\r\n\r\n    const {\r\n        reset,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { errors, isSubmitting },\r\n    } = methods;\r\n\r\n    const onSubmit = (data) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <Stack >\r\n            <Card>\r\n                <CardHeader title={translate('profile.notification')} subheader={translate('profile.notification-desc')} />\r\n                <CardContent>\r\n                    <Stack gap={2}>\r\n                        <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n                            <Stack justifyContent={'space-between'} alignItems={'center'} direction = \"row\" mb={2}>\r\n                                <Stack gap = {1}>\r\n                                    <Typography variant = {\"title1\"} sx={{fontWeight:'bold'}}>{translate('profile.receive-email')}</Typography>\r\n                                    <Typography variant = {\"body2\"}>{translate('profile.receive-email-desc')}</Typography>\r\n                                </Stack>\r\n                                <Switch name = \"emailNotification\" label = \"\" />\r\n                            </Stack>\r\n                            <Stack justifyContent={'space-between'} alignItems={'center'} direction = \"row\" mb= {5}>\r\n                                <Stack gap = {1}>\r\n                                    <Typography variant = {\"title1\"} sx={{fontWeight:'bold'}}>{translate('profile.receive-invest-email')}</Typography>\r\n                                    <Typography variant = {\"body2\"}>{translate('profile.receive-invest-email-desc')}</Typography>\r\n                                </Stack>\r\n                                <Switch name = \"investEmailNotification\" label = \"\" />\r\n                            </Stack>\r\n                            <Divider sx={{ mb: 2 }} />\r\n                            <Stack direction=\"row\" gap={2}>\r\n                                <Button sx = {{flexGrow:1}}  variant={'outlined'}>{translate('words.cancle')}</Button>\r\n                                <GradientButtonStyle sx = {{flexGrow:1}}>{translate('words.save')}</GradientButtonStyle>\r\n                            </Stack>\r\n                        </FormProvider>\r\n\r\n\r\n                    </Stack>\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </Stack>\r\n    )\r\n}","import { Button, Card, CardActionArea, CardContent, CardHeader, Divider, FormControlLabel, Grid, Radio, RadioGroup, Stack, Typography, useTheme } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\nimport useSettings from \"../../../hooks/useSettings\";\r\nimport useLocales from \"../../../hooks/useLocales\";\r\nimport { BoxMaskComponent } from \"../../../pages/dashboard/Profile\";\r\nimport Iconify from \"../../../components/Iconify\";\r\nimport { GradientButtonStyle } from \"../../../components/AppStyledComponent\";\r\n\r\nconst TimezoneItem = styled(CardActionArea)(({ theme }) => ({\r\n    width: 240,\r\n    position: 'relative',\r\n    height: 148,\r\n    padding: 8,\r\n    borderRadius: 8,\r\n  \r\n}));\r\n\r\n\r\nexport default function ChangeTimezone() {\r\n    const { translate } = useLocales();\r\n    const [selectedTimezone, setSelectedTimezone] = useState('br');\r\n    const theme = useTheme();\r\n    const timezones = [\r\n        {\r\n            value: 'br',\r\n            timezone: 'UTC-3(BRA)',\r\n            title: 'Brazillia, BR'\r\n        },\r\n        {\r\n            value: 'uk',\r\n            timezone: 'UTC-3(BRA)',\r\n            title: 'London, UK'\r\n        },\r\n        {\r\n            value: 'eua',\r\n            timezone: 'UTC-5(NYT)',\r\n            title: 'New York, EUA'\r\n        },\r\n        {\r\n            value: 'chi',\r\n            timezone: 'UTC+8(CHI)',\r\n            title: 'Xianghai, CHI'\r\n        },\r\n        {\r\n            value: 'jp',\r\n            timezone: 'UTC+9(TIK)',\r\n            title: 'Tokyo, JP'\r\n        },\r\n        {\r\n            value: 'fr',\r\n            timezone: 'UTC+1(PAR)',\r\n            title: 'Paris,FRA'\r\n        }\r\n    ]\r\n\r\n    const onChangeTimezone = (evt, n) => {\r\n       \r\n        setSelectedTimezone(n);\r\n    }\r\n    const selectedBorder = {\r\n        borderWidth: 2,\r\n        borderRadius: 1,\r\n        borderStyle: 'solid',\r\n        borderColor: theme.palette.primary.main\r\n    }\r\n    const normalBorder = {\r\n        borderWidth: 1,\r\n        borderRadius: 1,\r\n        borderStyle: 'solid',\r\n        borderColor: theme.palette.divider\r\n    }\r\n    return (\r\n        <Stack >\r\n            <Card>\r\n                <CardHeader title={translate('profile.system-timezone')} subheader={translate('profile.system-timezone-desc')} />\r\n                <CardContent>\r\n                    <Stack gap={2}>\r\n                        <RadioGroup name=\"themeMode\" value={selectedTimezone} onChange={onChangeTimezone} sx={{ mb: 2 }}>\r\n\r\n                            <Stack direction={{ xs: 'column', sm: 'row', }} gap={2} flexWrap={'wrap'}>\r\n                                {timezones.map((timezone, index) => (\r\n                                    <TimezoneItem key={index} sx={{ ...(selectedTimezone === timezone.value && selectedBorder || normalBorder) }}>\r\n                                        <Stack mb={2} direction=\"row\" width={'100%'} justifyContent={'space-between'} alignItems={'center'}>\r\n                                            <Typography>{timezone.title}</Typography>\r\n                                            <Radio checked={selectedTimezone === timezone.value} />\r\n                                        </Stack>\r\n                                        <Typography variant=\"h6\">{timezone.timezone}</Typography>\r\n                                        <BoxMaskComponent value={timezone.value} />\r\n                                    </TimezoneItem>\r\n                                ))}\r\n\r\n\r\n                            </Stack>\r\n\r\n                        </RadioGroup>\r\n                        <Divider sx={{ mb: 2 }} />\r\n                        <Stack direction=\"row\" gap={2}>\r\n                            <Button sx={{ width: 200 }} variant={'outlined'}>{translate('words.cancle')}</Button>\r\n                            <GradientButtonStyle sx={{ width: 200 }} >{translate('words.save')}</GradientButtonStyle>\r\n                        </Stack>\r\n                    </Stack>\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </Stack>\r\n    )\r\n}","import { Box, Card, CardContent, CardHeader, Stack } from \"@mui/material\";\r\nimport Scrollbar from \"../../../components/Scrollbar\";\r\nimport useLocales from \"../../../hooks/useLocales\";\r\n\r\nexport default function TermAndCondition() {\r\n    const { translate } = useLocales();\r\n    return (\r\n        <Stack>\r\n            <Card>\r\n                <CardHeader title={translate('profile.term')} subheader={translate('profile.term-desc')} />\r\n                <CardContent>\r\n                    <Scrollbar sx = {{maxHeight:500}}>\r\n                        <Box component={'p'} >\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Venenatis vulputate ut sodales etiam aliquet quis enim et nisi. Orci id in duis bibendum odio a proin justo accumsan. Pellentesque viverra id blandit egestas tempor, tristique porttitor faucibus. Quisque pretium arcu lacinia sed volutpat. Suspendisse arcu mattis iaculis consequat. Dui mauris turpis pellentesque morbi bibendum. Sit cursus egestas cras mauris viverra ut. Tristique et id egestas vestibulum habitant lectus integer mattis nisi. Turpis viverra egestas nullam lacinia elit lacus scelerisque tristique. Odio dignissim nibh tincidunt eu iaculis. Pellentesque nisl habitant ut iaculis enim, ut non. Fringilla mollis magnis amet quis.\r\n                            Sit nec malesuada amet ipsum eget. Pellentesque nunc, hac a arcu quis blandit pretium viverra et. Ut sit fringilla et, proin ac, mauris. Diam pulvinar a elementum cras eleifend morbi. Urna quam eu, sit posuere commodo. Risus ipsum morbi ultrices felis dolor non. Dictum egestas magnis est aliquam. Maecenas vitae, amet dui pulvinar massa arcu enim faucibus.\r\n                            In porta sit quis enim, libero donec non lectus. Ullamcorper lobortis ornare porttitor pharetra, arcu. Quis euismod amet morbi enim, tincidunt nibh facilisis. Tortor nulla auctor morbi odio id lorem. Sagittis, vulputate integer convallis tortor vitae, montes, eget. Nam eget quis cursus tortor ac at sagittis, congue. Turpis massa adipiscing sit laoreet id quam nisi elementum, eu. Facilisi laoreet ornare tellus purus ac. Metus blandit vitae fringilla feugiat magna adipiscing facilisis. Ut amet consequat pharetra, sit imperdiet purus lacus, commodo. Tempor sit lacus, nulla viverra nunc, sit.\r\n                            Commodo metus, mauris a netus arcu lectus. Dui turpis dui nulla in. Suspendisse volutpat tristique in lorem consectetur vel tristique ut. Vel nulla egestas tempus, cursus. Nulla adipiscing enim fusce morbi. Est sapien, nisl amet netus ullamcorper turpis aliquam, blandit. Massa non lobortis non nunc id posuere aenean velit habitasse. In malesuada semper in hendrerit vel. Nisi, faucibus rhoncus tellus aliquet proin arcu odio enim. Diam venenatis, ullamcorper posuere augue semper. Non eu consectetur lacinia aliquet gravida morbi at. Mollis facilisis vitae, tempus, scelerisque.\r\n                            Turpis sed accumsan feugiat massa lobortis pellentesque. Sit gravida nisi odio euismod sit aenean.\r\n                        </Box>\r\n                    </Scrollbar>\r\n                </CardContent>\r\n            </Card>\r\n        </Stack>\r\n    )\r\n}","import { Button, Card, CardActionArea, CardContent, CardHeader, Divider, FormControlLabel, RadioGroup, Stack, useTheme } from \"@mui/material\";\r\nimport * as Yup from 'yup';\r\n// form\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\n\r\nimport useSettings from \"../../../hooks/useSettings\";\r\nimport useLocales from \"../../../hooks/useLocales\";\r\nimport { BoxMaskComponent } from \"../../../pages/dashboard/Profile\";\r\nimport Iconify from \"../../../components/Iconify\";\r\nimport { GradientButtonStyle } from \"../../../components/AppStyledComponent\";\r\nimport { FormProvider, RHFTextField, RHFCheckbox } from '../../../components/hook-form';\r\nimport useAuth from \"../../../hooks/useAuth\";\r\n\r\n\r\n\r\nexport default function ChangePassword() {\r\n    const { user, isAuthenticated } = useAuth();\r\n    const { translate } = useLocales();\r\n    const { themeMode, onChangeMode } = useSettings();\r\n    const theme = useTheme();\r\n    const SecurityScheme = Yup.object().shape({\r\n        repassword: Yup.string().required('Password is required'),\r\n        password: Yup.string().required('Password is required'),\r\n    });\r\n\r\n    const defaultValues = {\r\n        password: '',\r\n        repassword: '',\r\n    };\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(SecurityScheme),\r\n        defaultValues,\r\n\r\n    });\r\n\r\n    const {\r\n        reset,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { errors, isSubmitting },\r\n    } = methods;\r\n\r\n    const onSubmit = (data) => {\r\n\r\n    }\r\n    return (\r\n        <Stack >\r\n            <Card>\r\n                <CardHeader title={translate('profile.security')} subheader={translate('profile.security-desc')} />\r\n                <CardContent>\r\n\r\n                    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n                        <Stack gap={2}>\r\n                            <Stack gap={3} mb = {2} sx = {{maxWidth:400}}>\r\n                                <RHFTextField name={'password'} type=\"password\" label = {translate('profile.current-pwd')} />\r\n                                <RHFTextField name={'newPassword'} type=\"password\" label = {translate('profile.new-pwd')} />\r\n                                <RHFTextField name={'rePassword'} type=\"password\" label = {translate('profile.re-pwd')} />\r\n                            </Stack>\r\n                            <Divider sx={{ mb: 2,  }} />\r\n                            <Stack direction=\"row\" gap={2}>\r\n                                <Button sx={{ width: 200 }} variant={'outlined'}>{translate('words.cancle')}</Button>\r\n                                <GradientButtonStyle sx={{ width: 200 }} >{translate('words.save')}</GradientButtonStyle>\r\n                            </Stack>\r\n                        </Stack>\r\n                    </FormProvider>\r\n\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </Stack>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Button, Card, CardContent, CardHeader, Checkbox, Stack, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel, Tabs, Typography } from \"@mui/material\";\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport useLocales from \"../../../hooks/useLocales\";\r\nimport { fShortDate } from \"../../../utils/formatTime\";\r\nimport { fNumber } from \"../../../utils/formatNumber\";\r\n\r\nEnhancedTableHead.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n    checkbox: PropTypes.bool,\r\n};\r\nfunction EnhancedTableHead(props) {\r\n    const { translate } = useLocales();\r\n\r\n    const headCells = [\r\n        {\r\n            id: 'coin',\r\n            numeric: false,\r\n            disablePadding: true,\r\n            label: translate('order-history.table.coin'),\r\n        },\r\n        {\r\n            id: 'amount',\r\n            numeric: true,\r\n            disablePadding: false,\r\n            label: translate('order-history.table.amount'),\r\n        },\r\n        {\r\n            id: 'payment',\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: translate('order-history.table.payment'),\r\n        },\r\n        {\r\n            id: 'date',\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: translate('order-history.table.date'),\r\n        },\r\n\r\n    ];\r\n    const { checkbox, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n        props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {checkbox &&\r\n                    <TableCell padding=\"checkbox\">\r\n\r\n                        <Checkbox\r\n                            color=\"primary\"\r\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                            checked={rowCount > 0 && numSelected === rowCount}\r\n                            onChange={onSelectAllClick}\r\n                            inputProps={{\r\n                                'aria-label': 'select all desserts',\r\n                            }}\r\n                        />\r\n                    </TableCell>\r\n                }\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <Box component=\"span\" sx={visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </Box>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\n\r\nfunction createData(coin, amount, payment, date) {\r\n    return {\r\n        coin, amount, payment, date\r\n    };\r\n}\r\n\r\nconst rows = [\r\n    createData('Euro()', 2400, 'Visa', new Date()),\r\n    createData('Dollar()', 2400, 'Master Card', new Date()),\r\n    createData('Real()', 2400, 'Visa', new Date()),\r\n    createData('Real()', 2400, 'Visa', new Date()),\r\n    createData('Real()', 2400, 'Pix', new Date()),\r\n    createData('Real()', 2400, 'Visa', new Date()),\r\n    createData('Real()', 2400, 'Visa', new Date()),\r\n    createData('Real()', 2400, 'Visa', new Date()),\r\n    createData('Real()', 2400, 'Visa', new Date()),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\n\r\nexport default function OrderHistory() {\r\n    const [selectedTab, setSelectedTab] = useState('deposit');\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('calories');\r\n    const [selected, setSelected] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const { translate } = useLocales();\r\n    const onChange = (evt, newValue) => {\r\n        setSelectedTab(newValue);\r\n    }\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const emptyRows =\r\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    return (\r\n        <Stack>\r\n            <Card>\r\n                <CardHeader title={translate('profile.order-history')} subheader={translate('profile.order-history-desc')} />\r\n                <CardContent>\r\n                    <Stack sx={{ borderBottomWidth: 1, borderBottomColor: 'divider', borderBottomStyle: 'solid' }} mb={2} direction={{ xs: 'column', sm: 'row' }} justifyContent={'space-between'}>\r\n                        <Tabs value={selectedTab} onChange={onChange}>\r\n                            <Tab value={\"deposit\"} label={translate('words.deposit')} />\r\n                            <Tab value={\"withdraw\"} label={translate('words.withdraw')} />\r\n                        </Tabs>\r\n                        <Stack direction=\"row\" gap={1} alignItems={'center'}>\r\n                            <Typography variant={'body2'}>\r\n                                {translate('words.order-type')}\r\n                            </Typography>\r\n                            <Button variant='contained' size=\"small\" sx={{ py: 1 }}>{translate('words.fiduciary')}</Button>\r\n                            <Button variant='outlined' size=\"small\" sx={{ py: 1 }}>{translate('words.crypto')}</Button>\r\n\r\n                        </Stack>\r\n                    </Stack>\r\n                    <Stack >\r\n                        <TableContainer sx={{ padding: 2, borderTopLeftRadius: '8px', borderTopRightRadius: '8px', borderWidth: '1px', borderStyle: 'solid', borderColor: 'divider' }}>\r\n                            <Table\r\n                                sx={{ minWidth: 500, }}\r\n                                aria-labelledby=\"tableTitle\"\r\n\r\n                            >\r\n                                <EnhancedTableHead\r\n                                    numSelected={selected.length}\r\n                                    order={order}\r\n                                    orderBy={orderBy}\r\n\r\n                                    onRequestSort={handleRequestSort}\r\n                                    rowCount={rows.length}\r\n                                    checkbox={false}\r\n                                />\r\n                                <TableBody>\r\n                                    {stableSort(rows, getComparator(order, orderBy))\r\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        .map((row, index) => (\r\n                                            <TableRow\r\n                                                hover\r\n                                                tabIndex={-1}\r\n                                                key={index}\r\n\r\n                                            >\r\n\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                    padding=\"none\"\r\n                                                >\r\n                                                    {row.coin}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">{fNumber(row.amount)}</TableCell>\r\n                                                <TableCell >{row.payment}</TableCell>\r\n                                                <TableCell >{fShortDate(row.date)}</TableCell>\r\n                                            </TableRow>\r\n                                        )\r\n                                        )}\r\n                                    {emptyRows > 0 && (\r\n                                        <TableRow\r\n                                            style={{\r\n                                                height: 33 * emptyRows,\r\n                                            }}\r\n                                        >\r\n                                            <TableCell colSpan={4} />\r\n                                        </TableRow>\r\n                                    )}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 25]}\r\n                            component=\"div\"\r\n                            count={rows.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Stack>\r\n                </CardContent>\r\n            </Card>\r\n        </Stack>\r\n    )\r\n}","import { Button, Card, CardContent, Divider, Stack } from \"@mui/material\";\r\nimport { useRef } from \"react\";\r\nimport { GradientButtonStyle } from \"../../../components/AppStyledComponent\";\r\nimport LimitInvestAgree from \"../../../components/app/LimitInvestAgree\";\r\nimport useLocales from \"../../../hooks/useLocales\";\r\n\r\nconst LimitInvestToolbar = ({ onNext = () => { }, onCancel = () => { }, translate }) => {\r\n    return (\r\n        <Stack>\r\n            <Divider sx={{ mb: 2, }} />\r\n            <Stack direction=\"row\" gap={2} justifyContent={'flex-end'}>\r\n                <Button sx={{ width: 160 }} variant={'outlined'}>{translate('words.cancle')}</Button>\r\n                <GradientButtonStyle sx={{ width: 160 }} onClick = {onNext}>{translate('words.save')}</GradientButtonStyle>\r\n            </Stack>\r\n        </Stack>\r\n    )\r\n}\r\nexport default function LimitInvest() {\r\n    const ref = useRef();\r\n    const {translate} = useLocales();\r\n    const onNext = () => {\r\n        if(ref.current.getPageState){\r\n            console.log(ref.current.getPageState());\r\n        }\r\n    }\r\n    const onCancel = () => {\r\n\r\n    }\r\n    return (\r\n        <Stack>\r\n            <Card>\r\n                <CardContent>\r\n                    <LimitInvestAgree ref={ref}>\r\n                        <LimitInvestToolbar translate = {translate} onNext={onNext} onCancel={onCancel} />\r\n                    </LimitInvestAgree>\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </Stack>\r\n    )\r\n}","\r\nimport { Avatar, Box, Button, Card, CardContent, CardHeader, Divider, FormGroup, FormLabel, IconButton, MenuItem, Stack, TextField, Typography } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport * as Yup from 'yup';\r\nimport { Icon } from \"@iconify/react\";\r\n// form\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport Scrollbar from \"../../../components/Scrollbar\";\r\nimport useLocales from \"../../../hooks/useLocales\";\r\nimport { FormProvider, RHFSelect, RHFTextField } from \"../../../components/hook-form\";\r\nimport { GradientButtonStyle } from \"../../../components/AppStyledComponent\";\r\n\r\n\r\nconst users = [\r\n    {\r\n        avatar: '/images/avatar.png',\r\n        fullname: 'John Doe',\r\n        email: 'johndoe@123.com',\r\n        permission: 'Full',\r\n    },\r\n    {\r\n        avatar: '/images/avatar.png',\r\n        fullname: 'John Doe',\r\n        email: 'johndoe@123.com',\r\n        permission: 'Parcial',\r\n    }\r\n]\r\nexport default function AccountAccess() {\r\n    const { translate } = useLocales();\r\n    const [mode, setMode] = useState('view');\r\n    const FormScheme = Yup.object().shape({\r\n        email: Yup.string().required('Email is required'),\r\n        fullname: Yup.string().required('Fullname is required'),\r\n        cpf: Yup.string().required('CPF/CNPJ is required'),\r\n        phone: Yup.string().required('Password is required'),\r\n    });\r\n\r\n    const defaultValues = {\r\n        email: '',\r\n        fullname: '',\r\n        cpf: '',\r\n        phone: '',\r\n        political: ''\r\n    };\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(FormScheme),\r\n        defaultValues,\r\n\r\n    });\r\n\r\n    const {\r\n        reset,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { errors, isSubmitting },\r\n    } = methods;\r\n\r\n    const onSubmit = (data) => {\r\n\r\n    }\r\n    return (\r\n        <Stack>\r\n            <Card>\r\n                <CardHeader title={translate('profile.access')} subheader={translate('profile.access-desc')} />\r\n                <CardContent>\r\n                    {mode === 'view' &&\r\n                        <Stack gap={2}>\r\n                            {users.map((user, index) => (\r\n                                <React.Fragment key={index}>\r\n                                    <Stack direction={'row'} gap={2} justifyContent={'space-between'} >\r\n                                        <Stack direction={'row'} gap={2}>\r\n                                            <Avatar src={user?.avatar} />\r\n                                            <Stack>\r\n                                                <Typography variant=\"subtitle1\">{user?.fullname}</Typography>\r\n                                                <Typography variant=\"body2\">{user?.email}</Typography>\r\n                                            </Stack>\r\n                                        </Stack>\r\n                                        <Stack direction={'row'} gap={2}>\r\n                                            <Stack>\r\n                                                <Typography >Permission</Typography>\r\n                                                <Stack direction=\"row\" alignItems={'center'}>\r\n                                                    <Icon icon=\"ant-design:rise-outlined\" />\r\n                                                    <Typography>{user?.permission}</Typography>\r\n                                                </Stack>\r\n                                            </Stack>\r\n                                            <Stack>\r\n                                                <IconButton>\r\n                                                    <Icon icon=\"material-symbols:edit-sharp\" />\r\n                                                </IconButton>\r\n                                            </Stack>\r\n                                        </Stack>\r\n\r\n                                    </Stack>\r\n                                    <Divider />\r\n                                </React.Fragment>\r\n                            ))}\r\n                            <Stack alignItems={'center'} mb={6}>\r\n                                <Button onClick={()=>setMode('edit')}>+ {translate('profile.add-new-user')}</Button>\r\n                            </Stack>\r\n                        </Stack>\r\n                    }\r\n                    {mode === 'edit' &&\r\n                        <FormProvider methods={methods} >\r\n\r\n                            <Stack direction={{ xs: 'column', sm: 'row' }} gap={1} mb={2}>\r\n                                <FormGroup sx={{ flexGrow: 1 }}>\r\n                                    <FormLabel>{translate('profile.fullname')}</FormLabel>\r\n                                    <RHFTextField name={'fullname'} label=\"\" />\r\n                                </FormGroup>\r\n                                <FormGroup sx={{ flexGrow: 1 }}>\r\n                                    <FormLabel>{translate('profile.cpf')}</FormLabel>\r\n                                    <RHFTextField name={'cpf'} label=\"\" />\r\n                                </FormGroup>\r\n\r\n                            </Stack>\r\n                            <Stack direction={{ xs: 'column', sm: 'row' }} gap={1} mb={2}>\r\n                                <FormGroup sx={{ flexGrow: 1 }} >\r\n                                    <FormLabel>{translate('profile.email')}</FormLabel>\r\n                                    <RHFTextField name={'email'} label=\"\" />\r\n                                </FormGroup>\r\n                                <FormGroup sx={{ flexGrow: 1 }}>\r\n                                    <FormLabel>{translate('profile.phone')}</FormLabel>\r\n                                    <RHFTextField name={'phone'} label=\"\" />\r\n                                </FormGroup>\r\n\r\n                                <FormGroup sx={{ flexGrow: 1 }}>\r\n                                    <FormLabel>{translate('profile.fullname')}</FormLabel>\r\n                                    <RHFSelect name={'political'}  >\r\n                                        <option value={\"\"}>Select Political</option>\r\n                                    </RHFSelect>\r\n                                </FormGroup>\r\n\r\n                            </Stack>\r\n\r\n                            <Stack>\r\n                                <Divider sx={{ mb: 2, }} />\r\n                                <Stack direction=\"row\" gap={2} justifyContent=\"end\">\r\n                                    <Button onClick={()=>setMode('view')} sx={{ width: 160 }} variant={'outlined'}>{translate('words.cancle')}</Button>\r\n                                    <GradientButtonStyle sx={{ width: 160 }}>{translate('words.save')}</GradientButtonStyle>\r\n                                </Stack>\r\n                            </Stack>\r\n\r\n                        </FormProvider>\r\n                    }\r\n                </CardContent>\r\n            </Card>\r\n        </Stack>\r\n    )\r\n}","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\nimport { Stack, Card, CardHeader, CardContent, Typography, useTheme, Button, Divider } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { FormProvider, RHFRadioGroup } from '../../../components/hook-form';\r\n\r\nimport useLocales from '../../../hooks/useLocales';\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport { GradientButtonStyle } from '../../../components/AppStyledComponent';\r\n\r\nexport default function InvestorProfile() {\r\n\r\n    const optionGroup1 = useMemo(() => {\r\n        return [\r\n            {\r\n                id: '1',\r\n                value: '1',\r\n                label: 'Less than 1 year'\r\n            },\r\n            {\r\n                id: '2',\r\n                value: '2',\r\n                label: 'From 1 to 3 years'\r\n            },\r\n            {\r\n                id: '3',\r\n                value: '3',\r\n                label: 'Over 3 years'\r\n            }\r\n        ]\r\n    }, []);\r\n    const optionGroup2 = useMemo(() => {\r\n        return [\r\n            {\r\n                id: '1',\r\n                value: '1',\r\n                label: 'Less than 1 year'\r\n            },\r\n            {\r\n                id: '2',\r\n                value: '2',\r\n                label: 'From 1 to 3 years'\r\n            },\r\n            {\r\n                id: '3',\r\n                value: '3',\r\n                label: 'Over 3 years'\r\n            }\r\n        ]\r\n    }, []);\r\n    const optionGroup3 = useMemo(() => {\r\n        return [\r\n            {\r\n                id: '1',\r\n                value: '1',\r\n                label: 'I did not complete higher education and my professional experience did not improve my knowledge of the financial market'\r\n            },\r\n            {\r\n                id: '2',\r\n                value: '2',\r\n                label: 'I completed higher education, but my professional experience did not improve my knowledge of the financial market'\r\n            },\r\n            {\r\n                id: '3',\r\n                value: '3',\r\n                label: 'I did not complete higher education, but my professional experience has developed enough knowledge about financial products'\r\n            },\r\n            {\r\n                id: '4',\r\n                value: '4',\r\n                label: 'I have completed higher education and my professional experience has developed enough knowledge about financial products'\r\n            },\r\n\r\n        ]\r\n    }, []);\r\n    const { translate } = useLocales();\r\n\r\n    const { user } = useAuth();\r\n    const theme = useTheme();\r\n\r\n\r\n    const FormSchema = Yup.object().shape({\r\n        option1: Yup.string().required('Option1 is required'),\r\n    });\r\n\r\n    const defaultValues = useMemo(() => {\r\n        return {\r\n            option1: '',\r\n            option2: '',\r\n            option3: '',\r\n            option4: '',\r\n            option5: '',\r\n            option6: '',\r\n            option7: '',\r\n            option8: '',\r\n            option9: '',\r\n\r\n        }\r\n    }, []);\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(FormSchema),\r\n        defaultValues,\r\n    });\r\n\r\n    const {\r\n        reset,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { errors, isSubmitting },\r\n    } = methods;\r\n\r\n    const onSubmit = async (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <Stack>\r\n            <FormProvider methods={methods}>\r\n\r\n                <Card>\r\n                    <CardHeader title={translate('t.Define your investor profile')} subheader={translate('t.Complete the form so that we can understand your investment profile.')} />\r\n                    <CardContent>\r\n                        <Stack mb={2} gap={2}>\r\n                            <Typography variant={'subtitle1'}>1.{translate('t.How long do you intend to leave your investments with us?')}</Typography>\r\n                            <RHFRadioGroup sx={{ flexDirection: \"column\" }} options={optionGroup1} name=\"option1\" />\r\n                        </Stack>\r\n                        <Stack mb={2} gap={2}>\r\n                            <Typography variant={'subtitle1'}>2.{translate('t.How long do you intend to leave your investments with us?')}</Typography>\r\n                            <RHFRadioGroup sx={{ flexDirection: \"column\" }} options={optionGroup2} name=\"option1\" />\r\n                        </Stack>\r\n                        <Stack mb={2} gap={2}>\r\n                            <Typography variant={'subtitle1'}>3.{translate('t.How long do you intend to leave your investments with us?')}</Typography>\r\n                            <RHFRadioGroup sx={{ flexDirection: \"column\" }} options={optionGroup1} name=\"option1\" />\r\n                        </Stack>\r\n                        <Stack mb={2} gap={2}>\r\n                            <Typography variant={'subtitle1'}>4.{translate('t.How long do you intend to leave your investments with us?')}</Typography>\r\n                            <RHFRadioGroup sx={{ flexDirection: \"column\" }} options={optionGroup1} name=\"option1\" />\r\n                        </Stack>\r\n                        <Stack mb={2} gap={2}>\r\n                            <Typography variant={'subtitle1'}>5.{translate('t.How long do you intend to leave your investments with us?')}</Typography>\r\n                            <RHFRadioGroup sx={{ flexDirection: \"column\" }} options={optionGroup1} name=\"option1\" />\r\n                        </Stack>\r\n                        <Stack mb={2} gap={2}>\r\n                            <Typography variant={'subtitle1'}>6.{translate('t.How long do you intend to leave your investments with us?')}</Typography>\r\n                            <RHFRadioGroup sx={{ flexDirection: \"column\" }} options={optionGroup1} name=\"option1\" />\r\n                        </Stack>\r\n                        <Stack mb={2} gap={2}>\r\n                            <Typography variant={'subtitle1'}>7.{translate('t.How long do you intend to leave your investments with us?')}</Typography>\r\n                            <RHFRadioGroup sx={{ flexDirection: \"column\" }} options={optionGroup1} name=\"option1\" />\r\n                        </Stack>\r\n                        <Stack mb={2} gap={2}>\r\n                            <Typography variant={'subtitle1'}>8.{translate('t.How long do you intend to leave your investments with us?')}</Typography>\r\n                            <RHFRadioGroup sx={{ flexDirection: \"column\" }} options={optionGroup1} name=\"option1\" />\r\n                        </Stack>\r\n                        <Stack mb={2} gap={2}>\r\n                            <Typography variant={'subtitle1'}>9.{translate('t.How long do you intend to leave your investments with us?')}</Typography>\r\n                            <RHFRadioGroup sx={{ flexDirection: \"column\" }} options={optionGroup3} name=\"option9\" />\r\n                        </Stack>\r\n                        <Divider sx={{ mb: 2 }} />\r\n                        <Stack direction=\"row\" gap={2} mb={2}>\r\n                            <Button sx={{ flexGrow: 1 }} variant={'outlined'}>{translate('words.cancle')}</Button>\r\n                            <GradientButtonStyle sx={{ flexGrow: 1 }}>{translate('words.save')}</GradientButtonStyle>\r\n                        </Stack>\r\n\r\n                    </CardContent>\r\n\r\n                </Card>\r\n            </FormProvider>\r\n        </Stack>\r\n    )\r\n}","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\r\nimport PermContactCalendarOutlinedIcon from '@mui/icons-material/PermContactCalendarOutlined';\r\nimport DesktopWindowsOutlined from '@mui/icons-material/DesktopWindowsOutlined';\r\nimport VerifiedUserOutlinedIcon from '@mui/icons-material/VerifiedUserOutlined';\r\nimport RestoreOutlinedIcon from '@mui/icons-material/RestoreOutlined';\r\nimport PublicOutlinedIcon from '@mui/icons-material/PublicOutlined';\r\nimport NotificationsOutlinedIcon from '@mui/icons-material/NotificationsOutlined';\r\nimport ArticleOutlinedIcon from '@mui/icons-material/ArticleOutlined';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nimport { Box, Container, FormControlLabel, Grid, List, Radio, Stack, Tab, Tabs } from '@mui/material';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\n// sections\r\nimport {\r\n  PersonalInformation,\r\n  Apperence,\r\n  ChangePassword,\r\n  ChangeNotification,\r\n  ChangeTimezone,\r\n  TermAndCondition,\r\n  AccountAccess,\r\n  OrderHistory,\r\n  LimitInvest,\r\n  InvestorProfile\r\n} from '../../sections/@dashboard/profile';\r\nimport useResponsive from '../../hooks/useResponsive';\r\nimport Scrollbar from '../../components/Scrollbar';\r\nimport { NavListRoot } from '../../components/nav-section/vertical/NavList';\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Profile() {\r\n  const { user } = useAuth();\r\n  const theme = useTheme();\r\n  const { themeStretch } = useSettings();\r\n  const { page } = useParams();\r\n  const [value, setValue] = useState(page);\r\n  const isTablet = useResponsive('up', 'md');\r\n  const navigate = useNavigate();\r\n\r\n  const ProfileMenus = [\r\n    { value: 'basic', path: '/dashboard/profile/basic', icon: <PersonOutlineOutlinedIcon />, title: 'Basic Information' },\r\n    { value: 'appear', path: '/dashboard/profile/appear', icon: <DesktopWindowsOutlined />, title: 'System Appearence' },\r\n    { value: 'invest-profile', path: '/dashboard/profile/investor-profile', icon: <PermContactCalendarOutlinedIcon />, title: 'Investor Profile' },\r\n\r\n    { value: 'security', path: '/dashboard/profile/security', icon: <VerifiedUserOutlinedIcon />, title: 'Account Security' },\r\n    { value: 'order-history', path: '/dashboard/profile/order-history', icon: <RestoreOutlinedIcon />, title: 'Order History' },\r\n    { value: 'timezone', path: '/dashboard/profile/timezone', icon: <PublicOutlinedIcon />, title: 'Time Zone' },\r\n    { value: 'notification', path: '/dashboard/profile/notification', icon: <NotificationsOutlinedIcon />, title: 'Notification' },\r\n    { value: 'TAC', path: '/dashboard/profile/TAC', icon: <ArticleOutlinedIcon />, title: 'Terms and conditions' },\r\n    { value: 'invest-agree', path: '/dashboard/profile/invest-agree', icon: <Icon icon=\"arcticons:timelimit\" />, title: 'Investment Limit' },\r\n    { value: 'account-access', path: '/dashboard/profile/account-access', icon: <Icon icon=\"mdi:account-security-outline\" />, title: 'Account Access' },\r\n  ]\r\n\r\n\r\n  return (\r\n    <Page title=\"Profile\">\r\n      <Container maxWidth={themeStretch ? false : 'xl'} sx={{ padding: 2 }}>\r\n        <Stack direction={{ xs: 'column', sm: 'column', md: 'row' }} gap={2}>\r\n          <Box sx={{ minWidth: { xs: '100%', sm: '100%', md: '260px' }, width: { xs: '100%', sm: '100%', md: '260px' }, background: theme.palette.background.paper }} padding={2} borderRadius={1}>\r\n            {isTablet &&\r\n              <Scrollbar>\r\n                <List>\r\n                  {\r\n                    ProfileMenus.map((profile, index) => (\r\n                      <NavListRoot list={profile} key={index} isCollapse={false} />\r\n                    ))\r\n                  }\r\n                </List>\r\n              </Scrollbar>\r\n            }\r\n            {\r\n              !isTablet &&\r\n              <Tabs scrollButtons=\"auto\"\r\n                onChange={(evt, newValue) => {\r\n                  setValue(newValue);\r\n                  navigate(ProfileMenus.filter((m) => m.value === newValue)[0].path);\r\n                }} value={page} variant=\"scrollable\"\r\n              >\r\n                {\r\n                  ProfileMenus.map((profile, index) => (\r\n                    <Tab value={profile.value} key={index} label={profile.title} />\r\n                  ))\r\n                }\r\n              </Tabs>\r\n            }\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            {page === \"basic\" &&\r\n              <PersonalInformation />\r\n            }\r\n            {page === \"appear\" &&\r\n              <Apperence />\r\n            }\r\n            {page === \"security\" &&\r\n              <ChangePassword />\r\n            }\r\n            {page === \"order-history\" &&\r\n              <OrderHistory />\r\n            }\r\n            {page === 'timezone' && <ChangeTimezone />}\r\n            {page === \"notification\" &&\r\n              <ChangeNotification />\r\n            }\r\n            {page === \"TAC\" && <TermAndCondition />}\r\n            {page === \"invest-agree\" && <LimitInvest />}\r\n            {page === \"account-access\" && <AccountAccess />}\r\n            {page === \"investor-profile\" && <InvestorProfile />}\r\n\r\n          </Box>\r\n        </Stack>\r\n\r\n\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBoxMaskComponent.propTypes = {\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport function BoxMaskComponent({ value }) {\r\n  return (\r\n    <FormControlLabel\r\n      label=\"\"\r\n      value={value}\r\n      control={<Radio sx={{ display: 'none' }} />}\r\n      sx={{\r\n        m: 0,\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        position: 'absolute',\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\n\n// ----------------------------------------------------------------------\n\nexport function fDate(date) {\n  return format(new Date(date), 'dd MMMM yyyy');\n}\n\n\nexport function fShortDate(date) {\n  return format(new Date(date), 'dd MMM yyyy');\n}\n\nexport function fDateTime(date) {\n  return format(new Date(date), 'dd MMM yyyy HH:mm');\n}\n\nexport function fTimestamp(date) {\n  return getTime(new Date(date));\n}\n\nexport function fDateTimeSuffix(date) {\n  return format(new Date(date), 'dd/MM/yyyy hh:mm p');\n}\n\nexport function fToNow(date) {\n  return formatDistanceToNow(new Date(date), {\n    addSuffix: true\n  });\n}\n"],"names":["_LimitInvestAgree","props","ref","translate","useLocales","_useState","useState","investMode","gross","investOtherCheck","investOtherAmount","declareCheck","_useState2","_slicedToArray","pageState","setPageState","getPageState","useImperativeHandle","_jsx","Paper","children","_jsxs","Stack","gap","padding","Typography","variant","sx","mb","RadioGroup","value","onChange","evt","nv","_objectSpread","FormControlLabel","control","Radio","label","concat","ml","TextField","target","alignItems","display","Iconify","icon","Checkbox","checked","LimitInvestAgree","forwardRef","SingleInputFile","theme","useTheme","selectedFile","backgroundColor","palette","mode","borderRadius","border","borderColor","direction","Button","component","color","paddingX","Icon","type","hidden","BasicInformation","user","useAuth","expanded","setExpanded","_useState3","Date","_useState4","birthday","setBirthday","FormSchema","Yup","shape","fullname","required","handleChange","panel","event","isExpanded","defaultValues","useMemo","email","avatar","cpf","phone","methods","useForm","resolver","yupResolver","_methods$formState","reset","setError","handleSubmit","formState","errors","isSubmitting","spacing","FormProvider","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","RHFUploadAvatar","name","Grid","container","item","xs","sm","md","FormGroup","FormLabel","RHFTextField","size","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","renderInput","_props$InputProps","OutlinedInput","inputRef","inputProps","onClick","endAdornment","InputProps","newValue","RHFSelect","lg","justifyContent","flexGrow","GradientButtonStyle","BusinessInformation","incorporationDate","setIncorporationDate","coporateName","cnpj","cname","officeAddress","officeCEP","checkedOption1","checkedOption2","checkedOption3","checkedOption4","RHFCheckbox","InvestorInformation","PersonalInformation","_useAuth","dy","isAuthenticated","now","AppearenceModeItem","styled","CardActionArea","_ref","width","position","height","backgroundSize","Apperence","_useSettings","useSettings","themeMode","onChangeMode","selectedBorder","borderWidth","borderStyle","primary","main","Card","CardHeader","title","subheader","CardContent","backgroundImage","right","top","bgcolor","background","paper","BoxMaskComponent","Divider","ChangeNotification","emailNotification","investEmailNotification","onSubmit","data","fontWeight","Switch","TimezoneItem","ChangeTimezone","selectedTimezone","setSelectedTimezone","normalBorder","divider","n","flexWrap","timezone","map","index","TermAndCondition","Scrollbar","maxHeight","Box","ChangePassword","SecurityScheme","repassword","password","maxWidth","EnhancedTableHead","headCells","id","numeric","disablePadding","checkbox","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","indeterminate","headCell","align","sortDirection","TableSortLabel","active","property","visuallyHidden","createData","coin","amount","payment","date","rows","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","sort","OrderHistory","selectedTab","setSelectedTab","setOrder","_useState5","_useState6","setOrderBy","_useState7","_useState8","selected","_useState9","_useState10","page","setPage","_useState11","_useState12","rowsPerPage","setRowsPerPage","emptyRows","Math","max","length","borderBottomWidth","borderBottomColor","borderBottomStyle","Tabs","Tab","py","TableContainer","borderTopLeftRadius","borderTopRightRadius","Table","minWidth","TableBody","slice","row","hover","tabIndex","scope","fNumber","fShortDate","style","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","LimitInvestToolbar","_ref$onNext","onNext","onCancel","LimitInvest","useRef","current","console","log","users","permission","AccountAccess","setMode","FormScheme","political","React","Avatar","src","IconButton","InvestorProfile","optionGroup1","optionGroup2","optionGroup3","option1","option2","option3","option4","option5","option6","option7","option8","option9","RHFRadioGroup","flexDirection","options","Profile","themeStretch","useParams","setValue","isTablet","useResponsive","navigate","useNavigate","ProfileMenus","path","PersonOutlineOutlinedIcon","DesktopWindowsOutlined","PermContactCalendarOutlinedIcon","VerifiedUserOutlinedIcon","RestoreOutlinedIcon","PublicOutlinedIcon","NotificationsOutlinedIcon","ArticleOutlinedIcon","Page","Container","List","profile","NavListRoot","list","isCollapse","scrollButtons","filter","m","bottom","left","format","fDateTime"],"sourceRoot":""}
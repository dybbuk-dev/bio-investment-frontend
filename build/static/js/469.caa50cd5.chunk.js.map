{"version":3,"file":"static/js/469.caa50cd5.chunk.js","mappings":"udAEe,SAASA,IACpB,OACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAAAC,SAAC,gCAIf,C,sICAMC,GAAqBC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,EAAuB,SAAAE,GAAQA,EAALC,MAAK,MAAQ,CAC9DC,MAAO,IACPC,SAAU,WACVC,OAAQ,IACRC,eAAgB,UAChBC,QAAS,EACTC,QAAS,OACTC,aAAc,EACjB,IAIc,SAASC,IACpB,IAAQC,GAAcC,EAAAA,EAAAA,KAAdD,UACRE,GAAoCC,EAAAA,EAAAA,KAA5BC,EAASF,EAATE,UAAWC,EAAYH,EAAZG,aACbd,GAAQe,EAAAA,EAAAA,KAERC,EAAiB,CACnBC,YAAa,EACbV,aAAc,EACdW,YAAa,QAEbC,YAAanB,EAAMoB,QAAQC,QAAQC,MAGvC,OACI7B,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAAAC,UACF4B,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAA7B,SAAA,EACDF,EAAAA,EAAAA,KAACgC,EAAAA,EAAU,CAACC,MAAOjB,EAAU,6BAA8BkB,UAAWlB,EAAU,oCAChFhB,EAAAA,EAAAA,KAACmC,EAAAA,EAAW,CAAAjC,UACR4B,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAACmC,IAAK,EAAElC,SAAA,EACVF,EAAAA,EAAAA,KAACqC,EAAAA,EAAU,CAACC,KAAK,YAAYC,MAAOnB,EAAWoB,SAAUnB,EAAcoB,GAAM,CAACC,GAAG,GAAGxC,UAChF4B,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAAC0C,UAAW,CAAEC,GAAI,SAAUC,GAAI,OAAST,IAAK,EAAElC,SAAA,EAClD4B,EAAAA,EAAAA,MAAC3B,EAAkB,CAACsC,IAAEK,EAAAA,EAAAA,GAAA,CAAIC,gBAAiB,+BAAiD,UAAd3B,GAAyBG,GAAkBrB,SAAA,CACtG,UAAdkB,IACGpB,EAAAA,EAAAA,KAACgD,EAAAA,EAAO,CAACC,KAAK,gDAAgDR,GAAI,CAAEhC,SAAU,WAAYK,aAAc,MAAOoC,OAAQ,GAAIC,KAAM,GAAIC,MAAO7C,EAAMoB,QAAQC,QAAQC,KAAMwB,QAAS9C,EAAMoB,QAAQ2B,WAAWC,OAAS/C,MAAO,GAAIE,OAAQ,MAE1OV,EAAAA,EAAAA,KAACwD,GAAgB,CAACjB,MAAO,cAE7BT,EAAAA,EAAAA,MAAC3B,EAAkB,CAACsC,IAAEK,EAAAA,EAAAA,GAAA,CAAIC,gBAAiB,8BAAgD,SAAd3B,GAAwBG,GAAkBrB,SAAA,CACpG,SAAdkB,IACGpB,EAAAA,EAAAA,KAACgD,EAAAA,EAAO,CAACC,KAAK,gDAAgDR,GAAI,CAAEhC,SAAU,WAAYK,aAAc,MAAOoC,OAAQ,GAAIC,KAAM,GAAIC,MAAO7C,EAAMoB,QAAQC,QAAQC,KAAMwB,QAAS9C,EAAMoB,QAAQ2B,WAAWC,OAAS/C,MAAO,GAAIE,OAAQ,MAE1OV,EAAAA,EAAAA,KAACwD,GAAgB,CAACjB,MAAO,kBAKrCvC,EAAAA,EAAAA,KAACyD,EAAAA,EAAO,CAAChB,GAAM,CAACC,GAAG,MACnBZ,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAAC0C,UAAU,MAAMP,IAAK,EAAElC,SAAA,EAC1BF,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CAACjB,GAAI,CAAEjC,MAAO,KAAOmD,QAAS,WAAWzD,SAAEc,EAAU,mBAC5DhB,EAAAA,EAAAA,KAAC4D,EAAAA,GAAmB,CAACnB,GAAI,CAAEjC,MAAO,KAAMN,SAAGc,EAAU,4BAQjF,C,0DCrDe,SAAS6C,IACpB,IAAQ7C,GAAcC,EAAAA,EAAAA,KAAdD,UACRE,GAAoCC,EAAAA,EAAAA,KAS9B2C,GATW5C,EAATE,UAAuBF,EAAZG,cACLC,EAAAA,EAAAA,MAQEyC,EAAAA,EAAAA,IAAQ,CACpBC,cANkB,CAClBC,mBAAmB,EACnBC,yBAAyB,MAWzBC,GAEAL,EAJAM,MAIAN,EAHAO,SAGAP,EAFAK,cAAYG,EAEZR,EADAS,UAAmBD,EAANE,OAAoBF,EAAZG,aAOzB,OACIzE,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAAAC,UACF4B,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAA7B,SAAA,EACDF,EAAAA,EAAAA,KAACgC,EAAAA,EAAU,CAACC,MAAOjB,EAAU,wBAAyBkB,UAAWlB,EAAU,gCAC3EhB,EAAAA,EAAAA,KAACmC,EAAAA,EAAW,CAAAjC,UACRF,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACmC,IAAK,EAAElC,UACV4B,EAAAA,EAAAA,MAAC4C,EAAAA,GAAY,CAACZ,QAASA,EAASa,SAAUR,GAV7C,SAACS,GAElB,IAQqF1E,SAAA,EAC7D4B,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAAC4E,eAAgB,gBAAiBC,WAAY,SAAUnC,UAAY,MAAMD,GAAI,EAAExC,SAAA,EAClF4B,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAACmC,IAAO,EAAElC,SAAA,EACZF,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CAACpB,QAAW,SAAUlB,GAAI,CAACuC,WAAW,QAAQ9E,SAAEc,EAAU,4BACrEhB,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CAACpB,QAAW,QAAQzD,SAAEc,EAAU,oCAE/ChB,EAAAA,EAAAA,KAACiF,EAAAA,EAAM,CAAC3C,KAAO,oBAAoB4C,MAAQ,SAE/CpD,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAAC4E,eAAgB,gBAAiBC,WAAY,SAAUnC,UAAY,MAAMD,GAAK,EAAExC,SAAA,EACnF4B,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAACmC,IAAO,EAAElC,SAAA,EACZF,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CAACpB,QAAW,SAAUlB,GAAI,CAACuC,WAAW,QAAQ9E,SAAEc,EAAU,mCACrEhB,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CAACpB,QAAW,QAAQzD,SAAEc,EAAU,2CAE/ChB,EAAAA,EAAAA,KAACiF,EAAAA,EAAM,CAAC3C,KAAO,0BAA0B4C,MAAQ,SAErDlF,EAAAA,EAAAA,KAACyD,EAAAA,EAAO,CAAChB,GAAI,CAAEC,GAAI,MACnBZ,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAAC0C,UAAU,MAAMP,IAAK,EAAElC,SAAA,EAC1BF,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CAACjB,GAAM,CAAC0C,SAAS,GAAKxB,QAAS,WAAWzD,SAAEc,EAAU,mBAC7DhB,EAAAA,EAAAA,KAAC4D,EAAAA,GAAmB,CAACnB,GAAM,CAAC0C,SAAS,GAAGjF,SAAEc,EAAU,8BAWpF,ECpE2BZ,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,EAAuB,SAAAE,GAAQA,EAALC,MAAK,MAAQ,CAC9DC,MAAO,IACPC,SAAU,WACVC,OAAQ,IACRC,eAAgB,UAChBC,QAAS,EACTC,QAAS,OACTC,aAAc,EACjB,I,eCZc,SAASsE,IACpB,IAAOpE,GAAaC,EAAAA,EAAAA,KAAbD,UACP,OACIhB,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAAAC,UACF4B,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAA7B,SAAA,EACDF,EAAAA,EAAAA,KAACgC,EAAAA,EAAU,CAACC,MAAQjB,EAAU,gBAAiBkB,UAAalB,EAAU,wBACtEhB,EAAAA,EAAAA,KAACmC,EAAAA,EAAW,CAAAjC,UACRF,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,CAAAnF,UACNF,EAAAA,EAAAA,KAACsF,EAAAA,EAAG,CAACC,UAAW,IAAIrF,SAAC,sCAQ7C,C,eCAe,SAASsF,IACpB,IAAAC,GAAkCC,EAAAA,EAAAA,KAC1B1E,GADIyE,EAAJE,KAAqBF,EAAfG,iBACQ3E,EAAAA,EAAAA,KAAdD,WACRE,GAAoCC,EAAAA,EAAAA,KAE9B0E,GAFW3E,EAATE,UAAuBF,EAAZG,cACLC,EAAAA,EAAAA,KACSwE,EAAAA,KAAaC,MAAM,CACtCC,WAAYF,EAAAA,KAAaG,SAAS,wBAClCC,SAAUJ,EAAAA,KAAaG,SAAS,2BAQ9BnC,GAAUC,EAAAA,EAAAA,IAAQ,CACpBoC,UAAUC,EAAAA,EAAAA,GAAYP,GACtB7B,cAPkB,CAClBkC,SAAU,GACVF,WAAY,MAYZ7B,GAEAL,EAJAM,MAIAN,EAHAO,SAGAP,EAFAK,cAAYG,EAEZR,EADAS,UAAmBD,EAANE,OAAoBF,EAAZG,aAMzB,OACIzE,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAAAC,UACF4B,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAA7B,SAAA,EACDF,EAAAA,EAAAA,KAACgC,EAAAA,EAAU,CAACC,MAAOjB,EAAU,oBAAqBkB,UAAWlB,EAAU,4BACvEhB,EAAAA,EAAAA,KAACmC,EAAAA,EAAW,CAAAjC,UAERF,EAAAA,EAAAA,KAAC0E,EAAAA,GAAY,CAACZ,QAASA,EAASa,SAAUR,GATzC,SAACS,GAElB,IAOiF1E,UAC7D4B,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAACmC,IAAK,EAAElC,SAAA,EACV4B,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAACmC,IAAK,EAAGM,GAAM,EAAGD,GAAM,CAAC4D,SAAS,KAAKnG,SAAA,EACzCF,EAAAA,EAAAA,KAACsG,EAAAA,GAAY,CAAChE,KAAM,WAAYiE,KAAK,WAAWrB,MAASlE,EAAU,0BACnEhB,EAAAA,EAAAA,KAACsG,EAAAA,GAAY,CAAChE,KAAM,cAAeiE,KAAK,WAAWrB,MAASlE,EAAU,sBACtEhB,EAAAA,EAAAA,KAACsG,EAAAA,GAAY,CAAChE,KAAM,aAAciE,KAAK,WAAWrB,MAASlE,EAAU,wBAEzEhB,EAAAA,EAAAA,KAACyD,EAAAA,EAAO,CAAChB,GAAI,CAAEC,GAAI,MACnBZ,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAAC0C,UAAU,MAAMP,IAAK,EAAElC,SAAA,EAC1BF,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CAACjB,GAAI,CAAEjC,MAAO,KAAOmD,QAAS,WAAWzD,SAAEc,EAAU,mBAC5DhB,EAAAA,EAAAA,KAAC4D,EAAAA,GAAmB,CAACnB,GAAI,CAAEjC,MAAO,KAAMN,SAAGc,EAAU,8BAUrF,C,iJC5DA,SAASwF,GAAkBC,GACvB,IAAQzF,GAAcC,EAAAA,EAAAA,KAAdD,UAEF0F,EAAY,CACd,CACIC,GAAI,OACJC,SAAS,EACTC,gBAAgB,EAChB3B,MAAOlE,EAAU,6BAErB,CACI2F,GAAI,SACJC,SAAS,EACTC,gBAAgB,EAChB3B,MAAOlE,EAAU,+BAErB,CACI2F,GAAI,UACJC,SAAS,EACTC,gBAAgB,EAChB3B,MAAOlE,EAAU,gCAErB,CACI2F,GAAI,OACJC,SAAS,EACTC,gBAAgB,EAChB3B,MAAOlE,EAAU,8BAIjB8F,EACJL,EADIK,SAAUC,EACdN,EADcM,iBAAkBC,EAChCP,EADgCO,MAAOC,EACvCR,EADuCQ,QAASC,EAChDT,EADgDS,YAAaC,EAC7DV,EAD6DU,SAAUC,EACvEX,EADuEW,cAM3E,OACIpH,EAAAA,EAAAA,KAACqH,EAAAA,EAAS,CAAAnH,UACN4B,EAAAA,EAAAA,MAACwF,EAAAA,EAAQ,CAAApH,SAAA,CACJ4G,IACG9G,EAAAA,EAAAA,KAACuH,GAAAA,EAAS,CAAC3G,QAAQ,WAAUV,UAEzBF,EAAAA,EAAAA,KAACwH,GAAAA,EAAQ,CACLpE,MAAM,UACNqE,cAAeP,EAAc,GAAKA,EAAcC,EAChDO,QAASP,EAAW,GAAKD,IAAgBC,EACzC3E,SAAUuE,EACVY,WAAY,CACR,aAAc,2BAK7BjB,EAAUkB,KAAI,SAACC,GAAQ,OACpB7H,EAAAA,EAAAA,KAACuH,GAAAA,EAAS,CAENO,MAAOD,EAASjB,QAAU,QAAU,OACpChG,QAASiH,EAAShB,eAAiB,OAAS,SAC5CkB,cAAed,IAAYY,EAASlB,IAAKK,EAAc9G,UAEvD4B,EAAAA,EAAAA,MAACkG,GAAAA,EAAc,CACXC,OAAQhB,IAAYY,EAASlB,GAC7BhE,UAAWsE,IAAYY,EAASlB,GAAKK,EAAQ,MAC7CkB,SA/BGC,EA+BwBN,EAASlB,GA/BpB,SAACyB,GACrChB,EAAcgB,EAAOD,EACzB,GA6BgEjI,SAAA,CAEvC2H,EAAS3C,MACT+B,IAAYY,EAASlB,IAClB3G,EAAAA,EAAAA,KAACsF,EAAAA,EAAG,CAACC,UAAU,OAAO9C,GAAI4F,GAAAA,EAAenI,SAC1B,SAAV8G,EAAmB,oBAAsB,qBAE9C,SAfHa,EAASlB,IAvBR,IAACwB,CAwCC,QAKhC,CAGA,SAASG,GAAWC,EAAMC,EAAQC,EAASC,GACvC,MAAO,CACHH,KAAAA,EAAMC,OAAAA,EAAQC,QAAAA,EAASC,KAAAA,EAE/B,CAEA,IAAMC,GAAO,CACTL,GAAW,SAAU,KAAM,OAAQ,IAAIM,MACvCN,GAAW,WAAY,KAAM,cAAe,IAAIM,MAChDN,GAAW,SAAU,KAAM,OAAQ,IAAIM,MACvCN,GAAW,SAAU,KAAM,OAAQ,IAAIM,MACvCN,GAAW,SAAU,KAAM,MAAO,IAAIM,MACtCN,GAAW,SAAU,KAAM,OAAQ,IAAIM,MACvCN,GAAW,SAAU,KAAM,OAAQ,IAAIM,MACvCN,GAAW,SAAU,KAAM,OAAQ,IAAIM,MACvCN,GAAW,SAAU,KAAM,OAAQ,IAAIM,OAG3C,SAASC,GAAqBC,EAAGC,EAAG9B,GAChC,OAAI8B,EAAE9B,GAAW6B,EAAE7B,IACP,EAER8B,EAAE9B,GAAW6B,EAAE7B,GACR,EAEJ,CACX,CAEA,SAAS+B,GAAchC,EAAOC,GAC1B,MAAiB,SAAVD,EACD,SAAC8B,EAAGC,GAAC,OAAKF,GAAqBC,EAAGC,EAAG9B,EAAQ,EAC7C,SAAC6B,EAAGC,GAAC,OAAMF,GAAqBC,EAAGC,EAAG9B,EAAS,CACzD,CAGA,SAASgC,GAAWC,EAAOC,GACvB,IAAMC,EAAiBF,EAAMtB,KAAI,SAACyB,EAAIC,GAAK,MAAK,CAACD,EAAIC,EAAM,IAQ3D,OAPAF,EAAeG,MAAK,SAACT,EAAGC,GACpB,IAAM/B,EAAQmC,EAAWL,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAV/B,EACOA,EAEJ8B,EAAE,GAAKC,EAAE,EACpB,IACOK,EAAexB,KAAI,SAACyB,GAAE,OAAKA,EAAG,EAAE,GAC3C,CAIe,SAASG,KACpB,IAAAC,GAAsCC,EAAAA,EAAAA,UAAS,WAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA0BL,EAAAA,EAAAA,UAAS,OAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlC/C,EAAKgD,EAAA,GAAEC,EAAQD,EAAA,GACtBE,GAA8BR,EAAAA,EAAAA,UAAS,YAAWS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA3CjD,EAAOkD,EAAA,GAAEC,EAAUD,EAAA,GAC1BE,GAAgCX,EAAAA,EAAAA,UAAS,IAAGY,GAAAV,EAAAA,EAAAA,GAAAS,EAAA,GAArCE,EAAQD,EAAA,GACfE,GAD4BF,EAAA,IACJZ,EAAAA,EAAAA,UAAS,IAAEe,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAA5BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAsClB,EAAAA,EAAAA,UAAS,GAAEmB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAA1CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAC1B7J,GAAcC,EAAAA,EAAAA,KAAdD,UAkBFgK,EACFN,EAAO,EAAIO,KAAKC,IAAI,GAAI,EAAIR,GAAQI,EAAcnC,GAAKwC,QAAU,EAErE,OACInL,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAAAC,UACF4B,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAA7B,SAAA,EACDF,EAAAA,EAAAA,KAACgC,EAAAA,EAAU,CAACC,MAAOjB,EAAU,yBAA0BkB,UAAWlB,EAAU,iCAC5Ec,EAAAA,EAAAA,MAACK,EAAAA,EAAW,CAAAjC,SAAA,EACR4B,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAACwC,GAAI,CAAE2I,kBAAmB,EAAGC,kBAAmB,UAAWC,kBAAmB,SAAW5I,GAAI,EAAGC,UAAW,CAAEC,GAAI,SAAUC,GAAI,OAASgC,eAAgB,gBAAgB3E,SAAA,EAC1K4B,EAAAA,EAAAA,MAACyJ,EAAAA,EAAI,CAAChJ,MAAOsH,EAAarH,SA1B7B,SAACgJ,EAAKC,GACnB3B,EAAe2B,EACnB,EAwBiEvL,SAAA,EACzCF,EAAAA,EAAAA,KAAC0L,EAAAA,EAAG,CAACnJ,MAAO,UAAW2C,MAAOlE,EAAU,oBACxChB,EAAAA,EAAAA,KAAC0L,EAAAA,EAAG,CAACnJ,MAAO,WAAY2C,MAAOlE,EAAU,wBAE7Cc,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAAC0C,UAAU,MAAMP,IAAK,EAAG0C,WAAY,SAAS5E,SAAA,EAChDF,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CAACpB,QAAS,QAAQzD,SACxBc,EAAU,uBAEfhB,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CAACC,QAAQ,YAAYgI,KAAK,QAAQlJ,GAAI,CAAEmJ,GAAI,GAAI1L,SAAEc,EAAU,sBACnEhB,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CAACC,QAAQ,WAAWgI,KAAK,QAAQlJ,GAAI,CAAEmJ,GAAI,GAAI1L,SAAEc,EAAU,yBAI1Ec,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAAAC,SAAA,EACFF,EAAAA,EAAAA,KAAC6L,GAAAA,EAAc,CAACpJ,GAAI,CAAE7B,QAAS,EAAGkL,oBAAqB,MAAOC,qBAAsB,MAAOvK,YAAa,MAAOC,YAAa,QAASC,YAAa,WAAYxB,UAC1J4B,EAAAA,EAAAA,MAACkK,GAAAA,EAAK,CACFvJ,GAAI,CAAEwJ,SAAU,KAChB,kBAAgB,aAAY/L,SAAA,EAG5BF,EAAAA,EAAAA,KAACwG,GAAiB,CACdU,YAAaqD,EAASY,OACtBnE,MAAOA,EACPC,QAASA,EAETG,cAhDN,SAACgB,EAAOD,GAE9B8B,EADchD,IAAYkB,GAAsB,QAAVnB,EACrB,OAAS,OAC1BoD,EAAWjC,EACf,EA6CgChB,SAAUwB,GAAKwC,OACfrE,UAAU,KAEdhF,EAAAA,EAAAA,MAACoK,GAAAA,EAAS,CAAAhM,SAAA,CACL+I,GAAWN,GAAMK,GAAchC,EAAOC,IAClCkF,MAAMzB,EAAOI,EAAaJ,EAAOI,EAAcA,GAC/ClD,KAAI,SAACwE,EAAK9C,GAAK,OACZxH,EAAAA,EAAAA,MAACwF,EAAAA,EAAQ,CACL+E,OAAK,EACLC,UAAW,EAAEpM,SAAA,EAKbF,EAAAA,EAAAA,KAACuH,GAAAA,EAAS,CACNhC,UAAU,KACVgH,MAAM,MACN3L,QAAQ,OAAMV,SAEbkM,EAAI7D,QAETvI,EAAAA,EAAAA,KAACuH,GAAAA,EAAS,CAACO,MAAM,QAAO5H,UAAEsM,EAAAA,GAAAA,IAAQJ,EAAI5D,WACtCxI,EAAAA,EAAAA,KAACuH,GAAAA,EAAS,CAAArH,SAAGkM,EAAI3D,WACjBzI,EAAAA,EAAAA,KAACuH,GAAAA,EAAS,CAAArH,UAAGuM,EAAAA,GAAAA,IAAWL,EAAI1D,UAbvBY,EAcE,IAGlB0B,EAAY,IACThL,EAAAA,EAAAA,KAACsH,EAAAA,EAAQ,CACLoF,MAAO,CACHhM,OAAQ,GAAKsK,GACf9K,UAEFF,EAAAA,EAAAA,KAACuH,GAAAA,EAAS,CAACoF,QAAS,eAMxC3M,EAAAA,EAAAA,KAAC4M,GAAAA,EAAe,CACZC,mBAAoB,CAAC,EAAG,GAAI,IAC5BtH,UAAU,MACVuH,MAAOnE,GAAKwC,OACZL,YAAaA,EACbJ,KAAMA,EACNqC,aAzFC,SAAC3E,EAAO4E,GAC7BrC,EAAQqC,EACZ,EAwFwBC,oBAtFQ,SAAC7E,GAC7B2C,EAAemC,SAAS9E,EAAM+E,OAAO5K,MAAO,KAC5CoI,EAAQ,EACZ,cA0FJ,C,4BC3PA,SAASyC,GAAkB3G,EAAO4G,GAC9B,IAAQrM,GAAcC,EAAAA,EAAAA,KAAdD,UACRyI,GAAkCC,EAAAA,EAAAA,UAAS,CACvC4D,WAAY,EACZC,MAAO,EACPC,kBAAkB,EAClBC,kBAAmB,EACnBC,cAAc,IAChB/D,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GANKkE,EAAShE,EAAA,GAAEiE,EAAYjE,EAAA,GAOxBkE,EAAe,WAAH,OAASF,CAAU,EAMrC,OAJAG,EAAAA,EAAAA,qBAAoBT,GAAK,iBAAO,CAC5BQ,aAAAA,EAEH,KAGG7N,EAAAA,EAAAA,KAAC+N,GAAAA,EAAK,CAAA7N,UACF4B,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAACmC,IAAK,EAAGxB,QAAS,EAAEV,SAAA,EACtB4B,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAAAC,SAAA,EACFF,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CAACpB,QAAQ,YAAWzD,SAAEc,EAAU,2BAC3ChB,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CAACpB,QAAQ,QAAOzD,SAAEc,EAAU,oCAE3Cc,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAACmC,IAAK,EAAElC,SAAA,EACVF,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CAACpB,QAAQ,QAAQlB,GAAI,CAAEC,GAAI,GAAIxC,SAAEc,EAAU,gCACtDc,EAAAA,EAAAA,MAACO,EAAAA,EAAU,CAACE,MAAOoL,EAAUL,WAAY9K,SAAU,SAACgJ,EAAKwC,GAAE,OAAKJ,GAAY9K,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI6K,GAAS,IAAEL,WAAYU,IAAK,EAAC9N,SAAA,EAC3GF,EAAAA,EAAAA,KAACiO,EAAAA,EAAgB,CAACxL,GAAI,CAAEC,GAAI,GAAKwL,SAASlO,EAAAA,EAAAA,KAACmO,EAAAA,EAAK,CAAC5L,MAAO,IAAO2C,MAAOlE,EAAU,4BAEhFhB,EAAAA,EAAAA,KAACiO,EAAAA,EAAgB,CAACxL,GAAI,CAAEC,GAAI,GAAKwL,SAASlO,EAAAA,EAAAA,KAACmO,EAAAA,EAAK,CAAC5L,MAAO,IAAO2C,MAAOlE,EAAU,2BACxD,MAAvB,GAAAoN,OAAGT,EAAUL,cACVxL,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAACoO,GAAI,EAAEnO,SAAA,EACTF,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CAACpB,QAAQ,QAAOzD,SAAEc,EAAU,kCACvChB,EAAAA,EAAAA,KAACsO,GAAAA,EAAS,CAAC/L,MAAOoL,EAAUJ,MAAO/K,SAAU,SAACgJ,GAAG,OAAKoC,GAAY9K,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI6K,GAAS,IAAEJ,MAAO/B,EAAI2B,OAAO5K,QAAQ,KAC7GT,EAAAA,EAAAA,MAACiD,EAAAA,EAAU,CAACtC,GAAI,CAAEqC,WAAY,SAAUjE,QAAS,OAAQ6B,GAAI,GAAIxC,SAAA,EAACF,EAAAA,EAAAA,KAACgD,EAAAA,EAAO,CAACC,KAAK,2CAA4CjC,EAAU,0CAI9IhB,EAAAA,EAAAA,KAACiO,EAAAA,EAAgB,CAACC,SAASlO,EAAAA,EAAAA,KAACmO,EAAAA,EAAK,CAAC5L,MAAO,IAAOG,GAAI,EAAGwC,MAAOlE,EAAU,+BAG5EhB,EAAAA,EAAAA,KAACiO,EAAAA,EAAgB,CAAC/I,MAAOlE,EAAU,wBAAyBkN,SAASlO,EAAAA,EAAAA,KAACwH,GAAAA,EAAQ,CAACE,QAASiG,EAAUH,mBAAsBjL,MAAOoL,EAAUH,iBAAkBhL,SAAU,SAACgJ,GAAG,OAAKoC,GAAY9K,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI6K,GAAS,IAAEH,iBAAkBhC,EAAI2B,OAAOzF,UAAU,IACjPiG,EAAUH,mBACP1L,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAACoO,GAAI,EAAEnO,SAAA,EACTF,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CAACpB,QAAQ,QAAOzD,SAAEc,EAAU,iCACvChB,EAAAA,EAAAA,KAACsO,GAAAA,EAAS,CAAC/L,MAAOoL,EAAUF,kBAAmBjL,SAAU,SAACgJ,GAAG,OAAKoC,GAAY9K,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI6K,GAAS,IAAEF,kBAAmBjC,EAAI2B,OAAO5K,QAAQ,EAAEE,GAAI,CAAEC,GAAI,SAIzJZ,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAAAC,SAAA,EACFF,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CAACpB,QAAQ,YAAYlB,GAAI,CAAEC,GAAI,GAAIxC,SAAEc,EAAU,oCAC1DhB,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CAACpB,QAAQ,YAAYlB,GAAI,CAAEC,GAAI,GAAIxC,SAAEc,EAAU,uCAE9DhB,EAAAA,EAAAA,KAACiO,EAAAA,EAAgB,CAAC/I,MAAOlE,EAAU,0BAA2BkN,SAASlO,EAAAA,EAAAA,KAACwH,GAAAA,EAAQ,CAACE,QAASiG,EAAUD,eAAkBnL,MAAOoL,EAAUD,aAAclL,SAAU,SAACgJ,GAAG,OAAKoC,GAAY9K,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI6K,GAAS,IAAED,aAAclC,EAAI2B,OAAOzF,UAAU,EAAEjF,GAAI,CAAEC,GAAI,KACnP+D,EAAMvG,gBAM3B,CAEA,IAEA,IAFyBqO,EAAAA,EAAAA,YAAWnB,IC/D9BoB,GAAqB,SAAHlO,GAAiE,IAADmO,EAAAnO,EAA1DoO,OAAAA,OAAM,IAAAD,EAAG,WAAQ,EAACA,EAAwBzN,GAAxBV,EAAEqO,SAA+BrO,EAATU,WACpE,OACIc,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAAAC,SAAA,EACFF,EAAAA,EAAAA,KAACyD,EAAAA,EAAO,CAAChB,GAAI,CAAEC,GAAI,MACnBZ,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAAC0C,UAAU,MAAMP,IAAK,EAAGyC,eAAgB,WAAW3E,SAAA,EACtDF,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CAACjB,GAAI,CAAEjC,MAAO,KAAOmD,QAAS,WAAWzD,SAAEc,EAAU,mBAC5DhB,EAAAA,EAAAA,KAAC4D,EAAAA,GAAmB,CAACnB,GAAI,CAAEjC,MAAO,KAAO0H,QAAWwG,EAAOxO,SAAEc,EAAU,qBAIvF,EACe,SAAS4N,KACpB,IAAMvB,GAAMwB,EAAAA,EAAAA,UACL7N,GAAaC,EAAAA,EAAAA,KAAbD,UASP,OACIhB,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAAAC,UACFF,EAAAA,EAAAA,KAAC+B,EAAAA,EAAI,CAAA7B,UACDF,EAAAA,EAAAA,KAACmC,EAAAA,EAAW,CAAAjC,UACRF,EAAAA,EAAAA,KAAC8O,GAAgB,CAACzB,IAAKA,EAAInN,UACvBF,EAAAA,EAAAA,KAACwO,GAAkB,CAACxN,UAAaA,EAAW0N,OAbjD,WACRrB,EAAI0B,QAAQlB,cACXmB,QAAQC,IAAI5B,EAAI0B,QAAQlB,eAEhC,EASgFc,SAR/D,WAEjB,WAaJ,C,4BC1Be,SAASO,KACpB,IAAQlO,GAAcC,EAAAA,EAAAA,KAAdD,UACFmO,EAAarJ,EAAAA,KAAaC,MAAM,CAClCqJ,MAAOtJ,EAAAA,KAAaG,SAAS,qBAC7BoJ,SAAUvJ,EAAAA,KAAaG,SAAS,wBAChCqJ,IAAKxJ,EAAAA,KAAaG,SAAS,wBAC3BsJ,MAAOzJ,EAAAA,KAAaG,SAAS,0BAW3BnC,GAAUC,EAAAA,EAAAA,IAAQ,CACpBoC,UAAUC,EAAAA,EAAAA,GAAY+I,GACtBnL,cAVkB,CAClBoL,MAAO,GACPC,SAAU,GACVC,IAAK,GACLC,MAAO,GACPC,UAAW,MAYClL,GAEZR,EAJAM,MAIAN,EAHAO,SAGAP,EAFAK,aAEAL,EADAS,WAAmBD,EAANE,OAAoBF,EAAZG,aAMzB,OACIzE,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAAAC,UACFF,EAAAA,EAAAA,KAAC+B,EAAAA,EAAI,CAAA7B,UACD4B,EAAAA,EAAAA,MAAC4C,EAAAA,GAAY,CAACZ,QAASA,EAAQ5D,SAAA,EAC3BF,EAAAA,EAAAA,KAACgC,EAAAA,EAAU,CAACC,MAAOjB,EAAU,gBAAiBkB,UAAWlB,EAAU,wBACnEc,EAAAA,EAAAA,MAACK,EAAAA,EAAW,CAAAjC,SAAA,EACR4B,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAAC0C,UAAW,CAAEC,GAAI,SAAUC,GAAI,OAAST,IAAK,EAAGM,GAAI,EAAExC,SAAA,EACzD4B,EAAAA,EAAAA,MAAC2N,GAAAA,EAAS,CAAChN,GAAI,CAAE0C,SAAU,GAAIjF,SAAA,EAC3BF,EAAAA,EAAAA,KAAC0P,GAAAA,EAAS,CAAAxP,SAAEc,EAAU,uBACtBhB,EAAAA,EAAAA,KAACsG,EAAAA,GAAY,CAAChE,KAAM,WAAY4C,MAAM,SAE1CpD,EAAAA,EAAAA,MAAC2N,GAAAA,EAAS,CAAChN,GAAI,CAAE0C,SAAU,GAAIjF,SAAA,EAC3BF,EAAAA,EAAAA,KAAC0P,GAAAA,EAAS,CAAAxP,SAAEc,EAAU,kBACtBhB,EAAAA,EAAAA,KAACsG,EAAAA,GAAY,CAAChE,KAAM,MAAO4C,MAAM,YAIzCpD,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAAC0C,UAAW,CAAEC,GAAI,SAAUC,GAAI,OAAST,IAAK,EAAGM,GAAI,EAAExC,SAAA,EACzD4B,EAAAA,EAAAA,MAAC2N,GAAAA,EAAS,CAAChN,GAAI,CAAE0C,SAAU,GAAIjF,SAAA,EAC3BF,EAAAA,EAAAA,KAAC0P,GAAAA,EAAS,CAAAxP,SAAEc,EAAU,oBACtBhB,EAAAA,EAAAA,KAACsG,EAAAA,GAAY,CAAChE,KAAM,QAAS4C,MAAM,SAEvCpD,EAAAA,EAAAA,MAAC2N,GAAAA,EAAS,CAAChN,GAAI,CAAE0C,SAAU,GAAIjF,SAAA,EAC3BF,EAAAA,EAAAA,KAAC0P,GAAAA,EAAS,CAAAxP,SAAEc,EAAU,oBACtBhB,EAAAA,EAAAA,KAACsG,EAAAA,GAAY,CAAChE,KAAM,QAAS4C,MAAM,SAGvCpD,EAAAA,EAAAA,MAAC2N,GAAAA,EAAS,CAAChN,GAAI,CAAE0C,SAAU,GAAIjF,SAAA,EAC3BF,EAAAA,EAAAA,KAAC0P,GAAAA,EAAS,CAAAxP,SAAEc,EAAU,uBACtBhB,EAAAA,EAAAA,KAAC2P,EAAAA,GAAS,CAACrN,KAAM,YAAYpC,UACzBF,EAAAA,EAAAA,KAAA,UAAQuC,MAAO,GAAGrC,SAAC,8BAK/BF,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAAC6E,WAAY,SAAUpC,GAAI,EAAExC,UAC/B4B,EAAAA,EAAAA,MAAC4B,EAAAA,EAAM,CAAAxD,SAAA,CAAC,KAAGc,EAAU,8BAEzBc,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAAAC,SAAA,EACFF,EAAAA,EAAAA,KAACyD,EAAAA,EAAO,CAAChB,GAAI,CAAEC,GAAI,MACnBZ,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAAC0C,UAAU,MAAMP,IAAK,EAAGyC,eAAe,MAAK3E,SAAA,EAC/CF,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CAACjB,GAAM,CAACjC,MAAM,KAAMmD,QAAS,WAAWzD,SAAEc,EAAU,mBAC3DhB,EAAAA,EAAAA,KAAC4D,EAAAA,GAAmB,CAAEnB,GAAM,CAACjC,MAAM,KAAKN,SAAEc,EAAU,+BAQpF,C,4BCvDe,SAAS4O,MACLlK,EAAAA,EAAAA,KAATC,KAAR,IACMpF,GAAQe,EAAAA,EAAAA,KACNuO,GAAiB1O,EAAAA,EAAAA,KAAjB0O,aACAnF,GAASoF,EAAAA,EAAAA,MAATpF,KACRjB,GAA0BC,EAAAA,EAAAA,UAASgB,GAAKf,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1BsG,GAAFpG,EAAA,GAAUA,EAAA,IAChBqG,GAAWC,EAAAA,GAAAA,GAAc,KAAM,MAC/BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,CACnB,CAAE7N,MAAO,QAAS8N,KAAM,2BAA4BpN,MAAMjD,EAAAA,EAAAA,KAACsQ,EAAAA,EAAyB,IAAKrO,MAAO,qBAChG,CAAEM,MAAO,SAAU8N,KAAM,4BAA6BpN,MAAMjD,EAAAA,EAAAA,KAACuQ,EAAAA,EAAsB,IAAKtO,MAAO,qBAC/F,CAAEM,MAAO,WAAY8N,KAAM,8BAA+BpN,MAAMjD,EAAAA,EAAAA,KAACwQ,EAAAA,EAAwB,IAAKvO,MAAO,oBACrG,CAAEM,MAAO,gBAAiB8N,KAAM,mCAAoCpN,MAAMjD,EAAAA,EAAAA,KAACyQ,EAAAA,EAAmB,IAAKxO,MAAO,iBAC1G,CAAEM,MAAO,WAAY8N,KAAM,8BAA+BpN,MAAMjD,EAAAA,EAAAA,KAAC0Q,EAAAA,EAAkB,IAAKzO,MAAO,aAC/F,CAAEM,MAAO,eAAgB8N,KAAM,kCAAmCpN,MAAMjD,EAAAA,EAAAA,KAAC2Q,EAAAA,EAAyB,IAAK1O,MAAO,gBAC9G,CAAEM,MAAO,MAAO8N,KAAM,yBAA0BpN,MAAMjD,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAmB,IAAK3O,MAAO,wBACtF,CAAEM,MAAO,eAAgB8N,KAAM,kCAAmCpN,MAAMjD,EAAAA,EAAAA,KAAC6Q,EAAAA,GAAI,CAAC5N,KAAO,wBAAyBhB,MAAO,oBACrH,CAAEM,MAAO,iBAAkB8N,KAAM,oCAAqCpN,MAAMjD,EAAAA,EAAAA,KAAC6Q,EAAAA,GAAI,CAAC5N,KAAO,iCAAkChB,MAAO,mBAIpI,OACEjC,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAI,CAAC7O,MAAM,UAAS/B,UACnBF,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAS,CAAC1K,UAAUwJ,GAAuB,KAAMpN,GAAI,CAAE7B,QAAS,GAAIV,UACnE4B,EAAAA,EAAAA,MAAC7B,EAAAA,EAAK,CAAC0C,UAAW,CAAEC,GAAI,SAAUC,GAAI,SAAUmO,GAAI,OAAS5O,IAAK,EAAElC,SAAA,EAClE4B,EAAAA,EAAAA,MAACwD,EAAAA,EAAG,CAAC7C,GAAI,CAAEjC,MAAO,CAAEoC,GAAI,OAAQC,GAAI,OAAQmO,GAAI,SAAW1N,WAAY/C,EAAMoB,QAAQ2B,WAAWC,OAAS3C,QAAS,EAAGE,aAAc,EAAEZ,SAAA,CAClI8P,IACChQ,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,CAAAnF,UACRF,EAAAA,EAAAA,KAACiR,EAAAA,EAAI,CAAA/Q,SAEDkQ,EAAaxI,KAAI,SAACsJ,EAAS5H,GAAK,OAC9BtJ,EAAAA,EAAAA,KAACmR,GAAAA,EAAW,CAACC,KAAMF,EAAqBG,YAAY,GAAnB/H,EAA4B,SAOpE0G,IACDhQ,EAAAA,EAAAA,KAACuL,EAAAA,EAAI,CAAC+F,cAAc,OAClB9O,SAAU,SAACgJ,EAAKC,GACdsE,EAAStE,GACTyE,EAASE,EAAamB,QAAO,SAACC,GAAC,OAAKA,EAAEjP,QAAUkJ,CAAQ,IAAE,GAAG4E,KAC/D,EAAG9N,MAAOmI,EAAM/G,QAAQ,aAAYzD,SAGlCkQ,EAAaxI,KAAI,SAACsJ,EAAS5H,GAAK,OAC9BtJ,EAAAA,EAAAA,KAAC0L,EAAAA,EAAG,CAACnJ,MAAO2O,EAAQ3O,MAAmB2C,MAAOgM,EAAQjP,OAAtBqH,EAA+B,UAOzExH,EAAAA,EAAAA,MAACwD,EAAAA,EAAG,CAAC7C,GAAI,CAAE0C,SAAU,GAAIjF,SAAA,CACb,UAATwK,IACC1K,EAAAA,EAAAA,KAACD,EAAmB,IAEZ,WAAT2K,IACC1K,EAAAA,EAAAA,KAACe,EAAS,IAEF,aAAT2J,IACC1K,EAAAA,EAAAA,KAACwF,EAAc,IAEP,kBAATkF,IACC1K,EAAAA,EAAAA,KAACwJ,GAAY,IAEL,iBAATkB,IACC1K,EAAAA,EAAAA,KAAC6D,EAAkB,IAEX,QAAT6G,IAAkB1K,EAAAA,EAAAA,KAACoF,EAAgB,IAC1B,iBAATsF,IAA2B1K,EAAAA,EAAAA,KAAC4O,GAAW,IAC9B,mBAATlE,IAA6B1K,EAAAA,EAAAA,KAACkP,GAAa,aASxD,CASO,SAAS1L,GAAgBlD,GAAa,IAAViC,EAAKjC,EAALiC,MACjC,OACEvC,EAAAA,EAAAA,KAACiO,EAAAA,EAAgB,CACf/I,MAAM,GACN3C,MAAOA,EACP2L,SAASlO,EAAAA,EAAAA,KAACmO,EAAAA,EAAK,CAAC1L,GAAI,CAAE5B,QAAS,UAC/B4B,GAAI,CACF+O,EAAG,EACHrO,IAAK,EACLD,MAAO,EACPuO,OAAQ,EACRC,KAAM,EACNjR,SAAU,aAIlB,C,gGC5IO,SAASgM,EAAW/D,GACzB,OAAOiJ,EAAAA,EAAAA,GAAO,IAAI/I,KAAKF,GAAO,cAChC,CAEO,SAASkJ,EAAUlJ,GACxB,OAAOiJ,EAAAA,EAAAA,GAAO,IAAI/I,KAAKF,GAAO,oBAChC,C","sources":["sections/@dashboard/profile/PersonalInformation.js","sections/@dashboard/profile/Apperence.js","sections/@dashboard/profile/ChangeNotification.js","sections/@dashboard/profile/ChangeTimezone.js","sections/@dashboard/profile/TermAndCondition.js","sections/@dashboard/profile/ChangePassword.js","sections/@dashboard/profile/OrderHistory.js","components/app/LimitInvestAgree.js","sections/@dashboard/profile/LimitInvest.js","sections/@dashboard/profile/AccountAccess.js","pages/dashboard/Profile.js","utils/formatTime.js"],"sourcesContent":["import { Stack } from \"@mui/material\";\r\n\r\nexport default function PersonalInformation(){\r\n    return(\r\n        <Stack>\r\n            Personal PersonalInformation\r\n        </Stack>\r\n    )\r\n}","import { Button, Card, CardActionArea, CardContent, CardHeader, Divider, FormControlLabel, RadioGroup, Stack, useTheme } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\nimport useSettings from \"../../../hooks/useSettings\";\r\nimport useLocales from \"../../../hooks/useLocales\";\r\nimport { BoxMaskComponent } from \"../../../pages/dashboard/Profile\";\r\nimport Iconify from \"../../../components/Iconify\";\r\nimport { GradientButtonStyle } from \"../../../components/AppStyledComponent\";\r\n\r\nconst AppearenceModeItem = styled(CardActionArea)(({ theme }) => ({\r\n    width: 200,\r\n    position: 'relative',\r\n    height: 148,\r\n    backgroundSize: 'contain',\r\n    padding: 0,\r\n    display: 'flex',\r\n    borderRadius: 8,\r\n}));\r\n\r\n\r\n\r\nexport default function Apperence() {\r\n    const { translate } = useLocales();\r\n    const { themeMode, onChangeMode } = useSettings();\r\n    const theme = useTheme();\r\n    \r\n    const selectedBorder = {\r\n        borderWidth: 2,\r\n        borderRadius: 1,\r\n        borderStyle: 'solid',\r\n\r\n        borderColor: theme.palette.primary.main\r\n    }\r\n\r\n    return (\r\n        <Stack >\r\n            <Card>\r\n                <CardHeader title={translate('profile.system-appearence')} subheader={translate('profile.system-apperence-desc')} />\r\n                <CardContent>\r\n                    <Stack gap={2}>\r\n                        <RadioGroup name=\"themeMode\" value={themeMode} onChange={onChangeMode} sx = {{mb:2}}>\r\n                            <Stack direction={{ xs: 'column', sm: 'row' }} gap={2}>\r\n                                <AppearenceModeItem sx={{ backgroundImage: 'url(/images/light-mode.png)', ...(themeMode === 'light' && selectedBorder) }}>\r\n                                    {themeMode === 'light' &&\r\n                                        <Iconify icon=\"material-symbols:check-circle-outline-rounded\" sx={{ position: 'absolute', borderRadius: '50%', right: -10, top: -10, color: theme.palette.primary.main, bgcolor: theme.palette.background.paper }} width={28} height={28} />\r\n                                    }\r\n                                    <BoxMaskComponent value={'light'} />\r\n                                </AppearenceModeItem>\r\n                                <AppearenceModeItem sx={{ backgroundImage: 'url(/images/dark-mode.png)', ...(themeMode === 'dark' && selectedBorder) }}>\r\n                                    {themeMode === 'dark' &&\r\n                                        <Iconify icon=\"material-symbols:check-circle-outline-rounded\" sx={{ position: 'absolute', borderRadius: '50%', right: -10, top: -10, color: theme.palette.primary.main, bgcolor: theme.palette.background.paper }} width={28} height={28} />\r\n                                    }\r\n                                    <BoxMaskComponent value={'dark'} />\r\n                                </AppearenceModeItem>\r\n                            </Stack>\r\n\r\n                        </RadioGroup>\r\n                        <Divider sx = {{mb:2}}/>\r\n                        <Stack direction=\"row\" gap={2}>\r\n                            <Button sx={{ width: 200 }} variant={'outlined'}>{translate('words.cancle')}</Button>\r\n                            <GradientButtonStyle sx={{ width: 200 }} >{translate('words.save')}</GradientButtonStyle>\r\n                        </Stack>\r\n                    </Stack>\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </Stack>\r\n    )\r\n}","import { Button, Card, CardActionArea, CardContent, CardHeader, Divider, FormControlLabel, Grid, RadioGroup, Stack, Switch, Typography, useTheme } from \"@mui/material\";\r\nimport * as Yup from 'yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport { FormProvider, RHFSwitch, RHFIOSSwitch } from '../../../components/hook-form';\r\nimport useSettings from \"../../../hooks/useSettings\";\r\nimport useLocales from \"../../../hooks/useLocales\";\r\nimport { BoxMaskComponent } from \"../../../pages/dashboard/Profile\";\r\nimport Iconify from \"../../../components/Iconify\";\r\nimport { GradientButtonStyle } from \"../../../components/AppStyledComponent\";\r\n\r\n\r\n\r\nexport default function ChangeNotification() {\r\n    const { translate } = useLocales();\r\n    const { themeMode, onChangeMode } = useSettings();\r\n    const theme = useTheme();\r\n \r\n\r\n    const defaultValues = {\r\n        emailNotification: true,\r\n        investEmailNotification: true,\r\n    };\r\n\r\n    const methods = useForm({\r\n        defaultValues,\r\n\r\n    });\r\n\r\n    const {\r\n        reset,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { errors, isSubmitting },\r\n    } = methods;\r\n\r\n    const onSubmit = (data) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <Stack >\r\n            <Card>\r\n                <CardHeader title={translate('profile.notification')} subheader={translate('profile.notification-desc')} />\r\n                <CardContent>\r\n                    <Stack gap={2}>\r\n                        <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n                            <Stack justifyContent={'space-between'} alignItems={'center'} direction = \"row\" mb={2}>\r\n                                <Stack gap = {1}>\r\n                                    <Typography variant = {\"title1\"} sx={{fontWeight:'bold'}}>{translate('profile.receive-email')}</Typography>\r\n                                    <Typography variant = {\"body2\"}>{translate('profile.receive-email-desc')}</Typography>\r\n                                </Stack>\r\n                                <Switch name = \"emailNotification\" label = \"\" />\r\n                            </Stack>\r\n                            <Stack justifyContent={'space-between'} alignItems={'center'} direction = \"row\" mb= {5}>\r\n                                <Stack gap = {1}>\r\n                                    <Typography variant = {\"title1\"} sx={{fontWeight:'bold'}}>{translate('profile.receive-invest-email')}</Typography>\r\n                                    <Typography variant = {\"body2\"}>{translate('profile.receive-invest-email-desc')}</Typography>\r\n                                </Stack>\r\n                                <Switch name = \"investEmailNotification\" label = \"\" />\r\n                            </Stack>\r\n                            <Divider sx={{ mb: 2 }} />\r\n                            <Stack direction=\"row\" gap={2}>\r\n                                <Button sx = {{flexGrow:1}}  variant={'outlined'}>{translate('words.cancle')}</Button>\r\n                                <GradientButtonStyle sx = {{flexGrow:1}}>{translate('words.save')}</GradientButtonStyle>\r\n                            </Stack>\r\n                        </FormProvider>\r\n\r\n\r\n                    </Stack>\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </Stack>\r\n    )\r\n}","import { Button, Card, CardActionArea, CardContent, CardHeader, Divider, FormControlLabel, Grid, RadioGroup, Stack, useTheme } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\nimport useSettings from \"../../../hooks/useSettings\";\r\nimport useLocales from \"../../../hooks/useLocales\";\r\nimport { BoxMaskComponent } from \"../../../pages/dashboard/Profile\";\r\nimport Iconify from \"../../../components/Iconify\";\r\nimport { GradientButtonStyle } from \"../../../components/AppStyledComponent\";\r\n\r\nconst AppearenceModeItem = styled(CardActionArea)(({ theme }) => ({\r\n    width: 200,\r\n    position: 'relative',\r\n    height: 148,\r\n    backgroundSize: 'contain',\r\n    padding: 0,\r\n    display: 'flex',\r\n    borderRadius: 8,\r\n}));\r\n\r\n\r\nexport default function ChangeTimezone() {\r\n    const { translate } = useLocales();\r\n    const { themeMode, onChangeMode } = useSettings();\r\n    const theme = useTheme();\r\n    const timezones = [\r\n        {\r\n            \r\n        }\r\n    ]\r\n    \r\n\r\n    const selectedBorder = {\r\n        borderWidth: 2,\r\n        borderRadius: 1,\r\n        borderStyle: 'solid',\r\n\r\n        borderColor: theme.palette.primary.main\r\n    }\r\n\r\n    return (\r\n        <Stack >\r\n            <Card>\r\n                <CardHeader title={translate('profile.system-appearence')} subheader={translate('profile.system-apperence-desc')} />\r\n                <CardContent>\r\n                    <Stack gap={2}>\r\n                        <RadioGroup name=\"themeMode\" value={themeMode} onChange={onChangeMode} sx = {{mb:2}}>\r\n                            <Grid container>\r\n                                <Grid item sx = {{}}>\r\n                                    xxx\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Stack direction={{ xs: 'column', sm: 'row' }} gap={2}>\r\n                                <AppearenceModeItem sx={{ backgroundImage: 'url(/images/light-mode.png)', ...(themeMode === 'light' && selectedBorder) }}>\r\n                                    {themeMode === 'light' &&\r\n                                        <Iconify icon=\"material-symbols:check-circle-outline-rounded\" sx={{ position: 'absolute', borderRadius: '50%', right: -10, top: -10, color: theme.palette.primary.main, bgcolor: theme.palette.background.paper }} width={28} height={28} />\r\n                                    }\r\n                                    <BoxMaskComponent value={'light'} />\r\n                                </AppearenceModeItem>\r\n                                <AppearenceModeItem sx={{ backgroundImage: 'url(/images/dark-mode.png)', ...(themeMode === 'dark' && selectedBorder) }}>\r\n                                    {themeMode === 'dark' &&\r\n                                        <Iconify icon=\"material-symbols:check-circle-outline-rounded\" sx={{ position: 'absolute', borderRadius: '50%', right: -10, top: -10, color: theme.palette.primary.main, bgcolor: theme.palette.background.paper }} width={28} height={28} />\r\n                                    }\r\n                                    <BoxMaskComponent value={'dark'} />\r\n                                </AppearenceModeItem>\r\n                            </Stack>\r\n\r\n                        </RadioGroup>\r\n                        <Divider sx = {{mb:2}}/>\r\n                        <Stack direction=\"row\" gap={2}>\r\n                            <Button sx={{ width: 200 }} variant={'outlined'}>{translate('words.cancle')}</Button>\r\n                            <GradientButtonStyle sx={{ width: 200 }} >{translate('words.save')}</GradientButtonStyle>\r\n                        </Stack>\r\n                    </Stack>\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </Stack>\r\n    )\r\n}","import { Box, Card, CardContent, CardHeader, Stack } from \"@mui/material\";\r\nimport Scrollbar from \"../../../components/Scrollbar\";\r\nimport useLocales from \"../../../hooks/useLocales\";\r\n\r\nexport default function TermAndCondition(){\r\n    const {translate} = useLocales();\r\n    return(\r\n        <Stack>\r\n            <Card>\r\n                <CardHeader title ={translate('profile.term')} subheader = {translate('profile.term-desc')}/>\r\n                <CardContent>\r\n                    <Scrollbar>\r\n                        <Box component={'p'}>\r\n                            Terms and conditions here\r\n                        </Box>\r\n                    </Scrollbar>\r\n                </CardContent>\r\n            </Card>\r\n        </Stack>\r\n    )\r\n}","import { Button, Card, CardActionArea, CardContent, CardHeader, Divider, FormControlLabel, RadioGroup, Stack, useTheme } from \"@mui/material\";\r\nimport * as Yup from 'yup';\r\n// form\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\n\r\nimport useSettings from \"../../../hooks/useSettings\";\r\nimport useLocales from \"../../../hooks/useLocales\";\r\nimport { BoxMaskComponent } from \"../../../pages/dashboard/Profile\";\r\nimport Iconify from \"../../../components/Iconify\";\r\nimport { GradientButtonStyle } from \"../../../components/AppStyledComponent\";\r\nimport { FormProvider, RHFTextField, RHFCheckbox } from '../../../components/hook-form';\r\nimport useAuth from \"../../../hooks/useAuth\";\r\n\r\n\r\n\r\nexport default function ChangePassword() {\r\n    const { user, isAuthenticated } = useAuth();\r\n    const { translate } = useLocales();\r\n    const { themeMode, onChangeMode } = useSettings();\r\n    const theme = useTheme();\r\n    const SecurityScheme = Yup.object().shape({\r\n        repassword: Yup.string().required('Password is required'),\r\n        password: Yup.string().required('Password is required'),\r\n    });\r\n\r\n    const defaultValues = {\r\n        password: '',\r\n        repassword: '',\r\n    };\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(SecurityScheme),\r\n        defaultValues,\r\n\r\n    });\r\n\r\n    const {\r\n        reset,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { errors, isSubmitting },\r\n    } = methods;\r\n\r\n    const onSubmit = (data) => {\r\n\r\n    }\r\n    return (\r\n        <Stack >\r\n            <Card>\r\n                <CardHeader title={translate('profile.security')} subheader={translate('profile.security-desc')} />\r\n                <CardContent>\r\n\r\n                    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n                        <Stack gap={2}>\r\n                            <Stack gap={3} mb = {2} sx = {{maxWidth:400}}>\r\n                                <RHFTextField name={'password'} type=\"password\" label = {translate('profile.current-pwd')} />\r\n                                <RHFTextField name={'newPassword'} type=\"password\" label = {translate('profile.new-pwd')} />\r\n                                <RHFTextField name={'rePassword'} type=\"password\" label = {translate('profile.re-pwd')} />\r\n                            </Stack>\r\n                            <Divider sx={{ mb: 2,  }} />\r\n                            <Stack direction=\"row\" gap={2}>\r\n                                <Button sx={{ width: 200 }} variant={'outlined'}>{translate('words.cancle')}</Button>\r\n                                <GradientButtonStyle sx={{ width: 200 }} >{translate('words.save')}</GradientButtonStyle>\r\n                            </Stack>\r\n                        </Stack>\r\n                    </FormProvider>\r\n\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </Stack>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Button, Card, CardContent, CardHeader, Checkbox, Stack, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel, Tabs, Typography } from \"@mui/material\";\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport useLocales from \"../../../hooks/useLocales\";\r\nimport { fShortDate } from \"../../../utils/formatTime\";\r\nimport { fNumber } from \"../../../utils/formatNumber\";\r\n\r\nEnhancedTableHead.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n    checkbox: PropTypes.bool,\r\n};\r\nfunction EnhancedTableHead(props) {\r\n    const { translate } = useLocales();\r\n\r\n    const headCells = [\r\n        {\r\n            id: 'coin',\r\n            numeric: false,\r\n            disablePadding: true,\r\n            label: translate('order-history.table.coin'),\r\n        },\r\n        {\r\n            id: 'amount',\r\n            numeric: true,\r\n            disablePadding: false,\r\n            label: translate('order-history.table.amount'),\r\n        },\r\n        {\r\n            id: 'payment',\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: translate('order-history.table.payment'),\r\n        },\r\n        {\r\n            id: 'date',\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: translate('order-history.table.date'),\r\n        },\r\n\r\n    ];\r\n    const { checkbox, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n        props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {checkbox &&\r\n                    <TableCell padding=\"checkbox\">\r\n\r\n                        <Checkbox\r\n                            color=\"primary\"\r\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                            checked={rowCount > 0 && numSelected === rowCount}\r\n                            onChange={onSelectAllClick}\r\n                            inputProps={{\r\n                                'aria-label': 'select all desserts',\r\n                            }}\r\n                        />\r\n                    </TableCell>\r\n                }\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <Box component=\"span\" sx={visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </Box>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\n\r\nfunction createData(coin, amount, payment, date) {\r\n    return {\r\n        coin, amount, payment, date\r\n    };\r\n}\r\n\r\nconst rows = [\r\n    createData('Euro()', 2400, 'Visa', new Date()),\r\n    createData('Dollar()', 2400, 'Master Card', new Date()),\r\n    createData('Real()', 2400, 'Visa', new Date()),\r\n    createData('Real()', 2400, 'Visa', new Date()),\r\n    createData('Real()', 2400, 'Pix', new Date()),\r\n    createData('Real()', 2400, 'Visa', new Date()),\r\n    createData('Real()', 2400, 'Visa', new Date()),\r\n    createData('Real()', 2400, 'Visa', new Date()),\r\n    createData('Real()', 2400, 'Visa', new Date()),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\n\r\nexport default function OrderHistory() {\r\n    const [selectedTab, setSelectedTab] = useState('deposit');\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('calories');\r\n    const [selected, setSelected] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const { translate } = useLocales();\r\n    const onChange = (evt, newValue) => {\r\n        setSelectedTab(newValue);\r\n    }\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const emptyRows =\r\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    return (\r\n        <Stack>\r\n            <Card>\r\n                <CardHeader title={translate('profile.order-history')} subheader={translate('profile.order-history-desc')} />\r\n                <CardContent>\r\n                    <Stack sx={{ borderBottomWidth: 1, borderBottomColor: 'divider', borderBottomStyle: 'solid' }} mb={2} direction={{ xs: 'column', sm: 'row' }} justifyContent={'space-between'}>\r\n                        <Tabs value={selectedTab} onChange={onChange}>\r\n                            <Tab value={\"deposit\"} label={translate('words.deposit')} />\r\n                            <Tab value={\"withdraw\"} label={translate('words.withdraw')} />\r\n                        </Tabs>\r\n                        <Stack direction=\"row\" gap={1} alignItems={'center'}>\r\n                            <Typography variant={'body2'}>\r\n                                {translate('words.order-type')}\r\n                            </Typography>\r\n                            <Button variant='contained' size=\"small\" sx={{ py: 1 }}>{translate('words.fiduciary')}</Button>\r\n                            <Button variant='outlined' size=\"small\" sx={{ py: 1 }}>{translate('words.crypto')}</Button>\r\n\r\n                        </Stack>\r\n                    </Stack>\r\n                    <Stack >\r\n                        <TableContainer sx={{ padding: 2, borderTopLeftRadius: '8px', borderTopRightRadius: '8px', borderWidth: '1px', borderStyle: 'solid', borderColor: 'divider' }}>\r\n                            <Table\r\n                                sx={{ minWidth: 500, }}\r\n                                aria-labelledby=\"tableTitle\"\r\n\r\n                            >\r\n                                <EnhancedTableHead\r\n                                    numSelected={selected.length}\r\n                                    order={order}\r\n                                    orderBy={orderBy}\r\n\r\n                                    onRequestSort={handleRequestSort}\r\n                                    rowCount={rows.length}\r\n                                    checkbox={false}\r\n                                />\r\n                                <TableBody>\r\n                                    {stableSort(rows, getComparator(order, orderBy))\r\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        .map((row, index) => (\r\n                                            <TableRow\r\n                                                hover\r\n                                                tabIndex={-1}\r\n                                                key={index}\r\n\r\n                                            >\r\n\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                    padding=\"none\"\r\n                                                >\r\n                                                    {row.coin}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">{fNumber(row.amount)}</TableCell>\r\n                                                <TableCell >{row.payment}</TableCell>\r\n                                                <TableCell >{fShortDate(row.date)}</TableCell>\r\n                                            </TableRow>\r\n                                        )\r\n                                        )}\r\n                                    {emptyRows > 0 && (\r\n                                        <TableRow\r\n                                            style={{\r\n                                                height: 33 * emptyRows,\r\n                                            }}\r\n                                        >\r\n                                            <TableCell colSpan={4} />\r\n                                        </TableRow>\r\n                                    )}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 25]}\r\n                            component=\"div\"\r\n                            count={rows.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Stack>\r\n                </CardContent>\r\n            </Card>\r\n        </Stack>\r\n    )\r\n}","import { Checkbox, FormControl, FormControlLabel, Paper, Radio, RadioGroup, Stack, TextField, Typography } from \"@mui/material\";\r\nimport { forwardRef, useImperativeHandle, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport useLocales from \"../../hooks/useLocales\";\r\nimport { FormProvider, RHFRadioGroup, RHFTextField } from \"../hook-form\";\r\nimport Iconify from \"../Iconify\";\r\n\r\n\r\nfunction _LimitInvestAgree(props, ref) {\r\n    const { translate } = useLocales();\r\n    const [pageState, setPageState] = useState({\r\n        investMode: 0,\r\n        gross: 0,\r\n        investOtherCheck: true,\r\n        investOtherAmount: 0,\r\n        declareCheck: false,\r\n    });\r\n    const getPageState = () => pageState;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        getPageState,\r\n\r\n    }));\r\n    return (\r\n\r\n        <Paper>\r\n            <Stack gap={4} padding={2}>\r\n                <Stack >\r\n                    <Typography variant=\"subtitle1\">{translate('profile.invest-limit')}</Typography>\r\n                    <Typography variant=\"body2\">{translate('profile.invest-limit-title')}</Typography>\r\n                </Stack>\r\n                <Stack gap={2}>\r\n                    <Typography variant=\"body2\" sx={{ mb: 2 }}>{translate('profile.invest-limit-desc')}</Typography>\r\n                    <RadioGroup value={pageState.investMode} onChange={(evt, nv) => setPageState({ ...pageState, investMode: nv })}>\r\n                        <FormControlLabel sx={{ mb: 1 }} control={<Radio value={0} />} label={translate('profile.invest-mode-0')} />\r\n\r\n                        <FormControlLabel sx={{ mb: 1 }} control={<Radio value={1} />} label={translate('profile.invest-mode-1')} />\r\n                        {`${pageState.investMode}` === `1` &&\r\n                            <Stack ml={2}>\r\n                                <Typography variant=\"body2\">{translate('profile.invest-mode-1-label')}</Typography>\r\n                                <TextField value={pageState.gross} onChange={(evt) => setPageState({ ...pageState, gross: evt.target.value })} />\r\n                                <Typography sx={{ alignItems: 'center', display: 'flex', mb: 2 }}><Iconify icon=\"mdi:information-variant-circle-outline\" />{translate('profile.invest-limit-gross-desc')}</Typography>\r\n                            </Stack>\r\n                        }\r\n\r\n                        <FormControlLabel control={<Radio value={2} />} mb={1} label={translate('profile.invest-mode-2')} />\r\n\r\n                    </RadioGroup>\r\n                    <FormControlLabel label={translate('profile.invest-other')} control={<Checkbox checked={pageState.investOtherCheck} />} value={pageState.investOtherCheck} onChange={(evt) => setPageState({ ...pageState, investOtherCheck: evt.target.checked })} />\r\n                    {pageState.investOtherCheck &&\r\n                        <Stack ml={2}>\r\n                            <Typography variant=\"body2\">{translate('profile.invest-other-label')}</Typography>\r\n                            <TextField value={pageState.investOtherAmount} onChange={(evt) => setPageState({ ...pageState, investOtherAmount: evt.target.value })} sx={{ mb: 2 }} />\r\n\r\n                        </Stack>\r\n                    }\r\n                    <Stack>\r\n                        <Typography variant=\"subtitle2\" sx={{ mb: 2 }}>{translate('profile.invest-limit-footer-1')}</Typography>\r\n                        <Typography variant=\"subtitle2\" sx={{ mb: 2 }}>{translate('profile.invest-limit-footer-2')}</Typography>\r\n                    </Stack>\r\n                    <FormControlLabel label={translate('profile.invest-declare')} control={<Checkbox checked={pageState.declareCheck} />} value={pageState.declareCheck} onChange={(evt) => setPageState({ ...pageState, declareCheck: evt.target.checked })} sx={{ mb: 2 }} />\r\n                    {props.children}\r\n                </Stack>\r\n            </Stack>\r\n        </Paper >\r\n\r\n    )\r\n}\r\n\r\nconst LimitInvestAgree = forwardRef(_LimitInvestAgree);\r\n\r\nexport default LimitInvestAgree;","import { Button, Card, CardContent, Divider, Stack } from \"@mui/material\";\r\nimport { useRef } from \"react\";\r\nimport { GradientButtonStyle } from \"../../../components/AppStyledComponent\";\r\nimport LimitInvestAgree from \"../../../components/app/LimitInvestAgree\";\r\nimport useLocales from \"../../../hooks/useLocales\";\r\n\r\nconst LimitInvestToolbar = ({ onNext = () => { }, onCancel = () => { }, translate }) => {\r\n    return (\r\n        <Stack>\r\n            <Divider sx={{ mb: 2, }} />\r\n            <Stack direction=\"row\" gap={2} justifyContent={'flex-end'}>\r\n                <Button sx={{ width: 160 }} variant={'outlined'}>{translate('words.cancle')}</Button>\r\n                <GradientButtonStyle sx={{ width: 160 }} onClick = {onNext}>{translate('words.save')}</GradientButtonStyle>\r\n            </Stack>\r\n        </Stack>\r\n    )\r\n}\r\nexport default function LimitInvest() {\r\n    const ref = useRef();\r\n    const {translate} = useLocales();\r\n    const onNext = () => {\r\n        if(ref.current.getPageState){\r\n            console.log(ref.current.getPageState());\r\n        }\r\n    }\r\n    const onCancel = () => {\r\n\r\n    }\r\n    return (\r\n        <Stack>\r\n            <Card>\r\n                <CardContent>\r\n                    <LimitInvestAgree ref={ref}>\r\n                        <LimitInvestToolbar translate = {translate} onNext={onNext} onCancel={onCancel} />\r\n                    </LimitInvestAgree>\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </Stack>\r\n    )\r\n}","\r\nimport { Box, Button, Card, CardContent, CardHeader, Divider, FormGroup, FormLabel, MenuItem, Stack, TextField } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport * as Yup from 'yup';\r\n\r\n// form\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport Scrollbar from \"../../../components/Scrollbar\";\r\nimport useLocales from \"../../../hooks/useLocales\";\r\nimport { FormProvider, RHFSelect, RHFTextField } from \"../../../components/hook-form\";\r\nimport { GradientButtonStyle } from \"../../../components/AppStyledComponent\";\r\n\r\nexport default function AccountAccess() {\r\n    const { translate } = useLocales();\r\n    const FormScheme = Yup.object().shape({\r\n        email: Yup.string().required('Email is required'),\r\n        fullname: Yup.string().required('Fullname is required'),\r\n        cpf: Yup.string().required('CPF/CNPJ is required'),\r\n        phone: Yup.string().required('Password is required'),\r\n    });\r\n\r\n    const defaultValues = {\r\n        email: '',\r\n        fullname: '',\r\n        cpf: '',\r\n        phone: '',\r\n        political: ''\r\n    };\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(FormScheme),\r\n        defaultValues,\r\n\r\n    });\r\n\r\n    const {\r\n        reset,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { errors, isSubmitting },\r\n    } = methods;\r\n\r\n    const onSubmit = (data) => {\r\n\r\n    }\r\n    return (\r\n        <Stack>\r\n            <Card>\r\n                <FormProvider methods={methods} >\r\n                    <CardHeader title={translate('profile.term')} subheader={translate('profile.term-desc')} />\r\n                    <CardContent>\r\n                        <Stack direction={{ xs: 'column', sm: 'row' }} gap={1} mb={2}>\r\n                            <FormGroup sx={{ flexGrow: 1 }}>\r\n                                <FormLabel>{translate('profile.fullname')}</FormLabel>\r\n                                <RHFTextField name={'fullname'} label=\"\" />\r\n                            </FormGroup>\r\n                            <FormGroup sx={{ flexGrow: 1 }}>\r\n                                <FormLabel>{translate('profile.cpf')}</FormLabel>\r\n                                <RHFTextField name={'cpf'} label=\"\" />\r\n                            </FormGroup>\r\n\r\n                        </Stack>\r\n                        <Stack direction={{ xs: 'column', sm: 'row' }} gap={1} mb={2}>\r\n                            <FormGroup sx={{ flexGrow: 1 }} >\r\n                                <FormLabel>{translate('profile.email')}</FormLabel>\r\n                                <RHFTextField name={'email'} label=\"\" />\r\n                            </FormGroup>\r\n                            <FormGroup sx={{ flexGrow: 1 }}>\r\n                                <FormLabel>{translate('profile.phone')}</FormLabel>\r\n                                <RHFTextField name={'phone'} label=\"\" />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup sx={{ flexGrow: 1 }}>\r\n                                <FormLabel>{translate('profile.fullname')}</FormLabel>\r\n                                <RHFSelect name={'political'}  >\r\n                                    <option value={\"\"}>Select Political</option>\r\n                                </RHFSelect>\r\n                            </FormGroup>\r\n\r\n                        </Stack>\r\n                        <Stack alignItems={'center'} mb={6}>\r\n                            <Button>+ {translate('profile.add-new-user')}</Button>\r\n                        </Stack>\r\n                        <Stack>\r\n                            <Divider sx={{ mb: 2, }} />\r\n                            <Stack direction=\"row\" gap={2} justifyContent=\"end\">\r\n                                <Button sx = {{width:160}} variant={'outlined'}>{translate('words.cancle')}</Button>\r\n                                <GradientButtonStyle  sx = {{width:160}}>{translate('words.save')}</GradientButtonStyle>\r\n                            </Stack>\r\n                        </Stack>\r\n                    </CardContent>\r\n                </FormProvider>\r\n            </Card>\r\n        </Stack>\r\n    )\r\n}","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\r\nimport DesktopWindowsOutlined from '@mui/icons-material/DesktopWindowsOutlined';\r\nimport VerifiedUserOutlinedIcon from '@mui/icons-material/VerifiedUserOutlined';\r\nimport RestoreOutlinedIcon from '@mui/icons-material/RestoreOutlined';\r\nimport PublicOutlinedIcon from '@mui/icons-material/PublicOutlined';\r\nimport NotificationsOutlinedIcon from '@mui/icons-material/NotificationsOutlined';\r\nimport ArticleOutlinedIcon from '@mui/icons-material/ArticleOutlined';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nimport { Box, Container, FormControlLabel, Grid, List, Radio, Stack, Tab, Tabs } from '@mui/material';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\n// sections\r\nimport {\r\n  PersonalInformation,\r\n  Apperence,\r\n  ChangePassword,\r\n  ChangeNotification,\r\n  ChangeTimezone,\r\n  TermAndCondition,\r\n  AccountAccess,\r\n  OrderHistory,\r\n  LimitInvest\r\n} from '../../sections/@dashboard/profile';\r\nimport useResponsive from '../../hooks/useResponsive';\r\nimport Scrollbar from '../../components/Scrollbar';\r\nimport { NavListRoot } from '../../components/nav-section/vertical/NavList';\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Profile() {\r\n  const { user } = useAuth();\r\n  const theme = useTheme();\r\n  const { themeStretch } = useSettings();\r\n  const { page } = useParams();\r\n  const [value, setValue] = useState(page);\r\n  const isTablet = useResponsive('up', 'md');\r\n  const navigate = useNavigate();\r\n\r\n  const ProfileMenus = [\r\n    { value: 'basic', path: '/dashboard/profile/basic', icon: <PersonOutlineOutlinedIcon />, title: 'Basic Information' },\r\n    { value: 'appear', path: '/dashboard/profile/appear', icon: <DesktopWindowsOutlined />, title: 'System Appearence' },\r\n    { value: 'security', path: '/dashboard/profile/security', icon: <VerifiedUserOutlinedIcon />, title: 'Account Security' },\r\n    { value: 'order-history', path: '/dashboard/profile/order-history', icon: <RestoreOutlinedIcon />, title: 'Order History' },\r\n    { value: 'timezone', path: '/dashboard/profile/timezone', icon: <PublicOutlinedIcon />, title: 'Time Zone' },\r\n    { value: 'notification', path: '/dashboard/profile/notification', icon: <NotificationsOutlinedIcon />, title: 'Notification' },\r\n    { value: 'TAC', path: '/dashboard/profile/TAC', icon: <ArticleOutlinedIcon />, title: 'Terms and conditions' },\r\n    { value: 'invest-agree', path: '/dashboard/profile/invest-agree', icon: <Icon icon = \"arcticons:timelimit\"/>, title: 'Investment Limit' },\r\n    { value: 'account-access', path: '/dashboard/profile/account-access', icon: <Icon icon = \"mdi:account-security-outline\"/>, title: 'Account Access' },\r\n  ]\r\n\r\n\r\n  return (\r\n    <Page title=\"Profile\">\r\n      <Container maxWidth={themeStretch ? false : 'xl'} sx={{ padding: 2 }}>\r\n        <Stack direction={{ xs: 'column', sm: 'column', md: 'row' }} gap={2}>\r\n          <Box sx={{ width: { xs: '100%', sm: '100%', md: '240px' }, background: theme.palette.background.paper }} padding={2} borderRadius={1}>\r\n            {isTablet &&\r\n              <Scrollbar>\r\n                <List>\r\n                  {\r\n                    ProfileMenus.map((profile, index) => (\r\n                      <NavListRoot list={profile} key={index} isCollapse={false} />\r\n                    ))\r\n                  }\r\n                </List>\r\n              </Scrollbar>\r\n            }\r\n            {\r\n              !isTablet &&\r\n              <Tabs scrollButtons=\"auto\"\r\n                onChange={(evt, newValue) => {\r\n                  setValue(newValue);\r\n                  navigate(ProfileMenus.filter((m) => m.value === newValue)[0].path);\r\n                }} value={page} variant=\"scrollable\"\r\n              >\r\n                {\r\n                  ProfileMenus.map((profile, index) => (\r\n                    <Tab value={profile.value} key={index} label={profile.title} />\r\n                  ))\r\n                }\r\n              </Tabs>\r\n            }\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            {page === \"basic\" &&\r\n              <PersonalInformation />\r\n            }\r\n            {page === \"appear\" &&\r\n              <Apperence />\r\n            }\r\n            {page === \"security\" &&\r\n              <ChangePassword />\r\n            }\r\n            {page === \"order-history\" &&\r\n              <OrderHistory />\r\n            }\r\n            {page === \"notification\" &&\r\n              <ChangeNotification />\r\n            }\r\n            {page === \"TAC\" && <TermAndCondition />}\r\n            {page === \"invest-agree\" && <LimitInvest />}\r\n            {page === \"account-access\" && <AccountAccess />}\r\n\r\n          </Box>\r\n        </Stack>\r\n\r\n\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBoxMaskComponent.propTypes = {\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport function BoxMaskComponent({ value }) {\r\n  return (\r\n    <FormControlLabel\r\n      label=\"\"\r\n      value={value}\r\n      control={<Radio sx={{ display: 'none' }} />}\r\n      sx={{\r\n        m: 0,\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        position: 'absolute',\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\n\n// ----------------------------------------------------------------------\n\nexport function fDate(date) {\n  return format(new Date(date), 'dd MMMM yyyy');\n}\n\n\nexport function fShortDate(date) {\n  return format(new Date(date), 'dd MMM yyyy');\n}\n\nexport function fDateTime(date) {\n  return format(new Date(date), 'dd MMM yyyy HH:mm');\n}\n\nexport function fTimestamp(date) {\n  return getTime(new Date(date));\n}\n\nexport function fDateTimeSuffix(date) {\n  return format(new Date(date), 'dd/MM/yyyy hh:mm p');\n}\n\nexport function fToNow(date) {\n  return formatDistanceToNow(new Date(date), {\n    addSuffix: true\n  });\n}\n"],"names":["PersonalInformation","_jsx","Stack","children","AppearenceModeItem","styled","CardActionArea","_ref","theme","width","position","height","backgroundSize","padding","display","borderRadius","Apperence","translate","useLocales","_useSettings","useSettings","themeMode","onChangeMode","useTheme","selectedBorder","borderWidth","borderStyle","borderColor","palette","primary","main","_jsxs","Card","CardHeader","title","subheader","CardContent","gap","RadioGroup","name","value","onChange","sx","mb","direction","xs","sm","_objectSpread","backgroundImage","Iconify","icon","right","top","color","bgcolor","background","paper","BoxMaskComponent","Divider","Button","variant","GradientButtonStyle","ChangeNotification","methods","useForm","defaultValues","emailNotification","investEmailNotification","handleSubmit","reset","setError","_methods$formState","formState","errors","isSubmitting","FormProvider","onSubmit","data","justifyContent","alignItems","Typography","fontWeight","Switch","label","flexGrow","TermAndCondition","Scrollbar","Box","component","ChangePassword","_useAuth","useAuth","user","isAuthenticated","SecurityScheme","Yup","shape","repassword","required","password","resolver","yupResolver","maxWidth","RHFTextField","type","EnhancedTableHead","props","headCells","id","numeric","disablePadding","checkbox","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","onClick","property","event","visuallyHidden","createData","coin","amount","payment","date","rows","Date","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","index","sort","OrderHistory","_useState","useState","_useState2","_slicedToArray","selectedTab","setSelectedTab","_useState3","_useState4","setOrder","_useState5","_useState6","setOrderBy","_useState7","_useState8","selected","_useState9","_useState10","page","setPage","_useState11","_useState12","rowsPerPage","setRowsPerPage","emptyRows","Math","max","length","borderBottomWidth","borderBottomColor","borderBottomStyle","Tabs","evt","newValue","Tab","size","py","TableContainer","borderTopLeftRadius","borderTopRightRadius","Table","minWidth","TableBody","slice","row","hover","tabIndex","scope","fNumber","fShortDate","style","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","target","_LimitInvestAgree","ref","investMode","gross","investOtherCheck","investOtherAmount","declareCheck","pageState","setPageState","getPageState","useImperativeHandle","Paper","nv","FormControlLabel","control","Radio","concat","ml","TextField","forwardRef","LimitInvestToolbar","_ref$onNext","onNext","onCancel","LimitInvest","useRef","LimitInvestAgree","current","console","log","AccountAccess","FormScheme","email","fullname","cpf","phone","political","FormGroup","FormLabel","RHFSelect","Profile","themeStretch","useParams","setValue","isTablet","useResponsive","navigate","useNavigate","ProfileMenus","path","PersonOutlineOutlinedIcon","DesktopWindowsOutlined","VerifiedUserOutlinedIcon","RestoreOutlinedIcon","PublicOutlinedIcon","NotificationsOutlinedIcon","ArticleOutlinedIcon","Icon","Page","Container","md","List","profile","NavListRoot","list","isCollapse","scrollButtons","filter","m","bottom","left","format","fDateTime"],"sourceRoot":""}